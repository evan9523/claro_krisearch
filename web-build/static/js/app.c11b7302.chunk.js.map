{"version":3,"sources":["src/utils/window.ts","src/components/header.tsx","src/utils/hideNumber.ts","src/components/Card.tsx","src/utils/getSmallString.ts","src/screens/HomeScreen.tsx","src/components/SearchBar.tsx","src/components/ScrollHeader.tsx","src/screens/SearchScreen.tsx","src/screens/SplashScreen.tsx","src/screens/ProfileScreen.tsx","App.tsx","assets/newicon2.png","assets/newlogo.png","assets/icon1.png"],"names":["winHeight","Dimensions","get","height","winWidth","width","Header","props","onTap","View","style","styles","header","top","flexDirection","alignSelf","alignItems","justifyContent","Image","source","uri","require","Text","headerText","TextInput","fontSize","backgroundColor","outlineColor","borderRadius","padding","marginTop","placeholder","placeholderTextColor","onFocus","StyleSheet","create","color","fontWeight","marginLeft","hideNumber","phone","a","toString","split","console","log","splice","Card","name","avatar","crop","address","onPress","isCrop","cropAvatar","windowWidth","TouchableOpacity","borderWidth","borderColor","margin","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","Entypo","size","getSmallString","str","length","substring","Home","navigation","useState","farmer","setfarmer","modalizeRef","useRef","onClose","current","close","setcrop","farmers","setfarmers","setmodalName","firstScroll","setfirstScroll","selectedState","useEffect","fetch","method","headers","Accept","body","JSON","stringify","gender","harvestDate","state","then","response","json","data","list","slice","catch","error","container","navigate","FlatList","showsVerticalScrollIndicator","renderItem","item","key","id","farmerName","farmerImage","crops","map","i","cropName","quantity","open","onOpen","ListEmptyComponent","ActivityIndicator","contentContainerStyle","flexWrap","onEndReached","ref","modalHeight","threshold","modalStyle","closeOnOverlayTap","mod","cIndex","marginRight","SimpleLineIcons","Feather","land","alert","FontAwesome5","FontAwesome","flex","SearchBar","visible","onHit","tapper","holderValue","isFocused","newdata","Platform","OS","autoFocus","editable","onChangeText","text","toLowerCase","setting","typer","Data","push","type","b","includes","ScrollHeader","headerTap","scrolled","headHolder","Search","blur","setblur","term","setterm","placer","setplacer","val","setval","addr","setaddr","hideFAB","sethideFAB","parent","setparent","filteractive","setfilteractive","addrToggle","setaddrToggle","merge","setmerge","filteredCrops","filter","toLocaleLowerCase","filteredParents","filteredFarmers","Farmers","genderFilter","addrFilter","flat","modalizeFilterRef","mergeResult","onOpenfilter","onCloseFilter","Button","title","AntDesign","ScrollView","bounces","image","localeCompare","area","buttonContainer","circle","checkedCircle","minWidth","States","code","buttonnewContainer","position","tint","intensity","absoluteFill","nonBlurredContent","value","dynamic","setSearch","right","Welcome","setTimeout","replace","StatusBar","Profile","Stack","createStackNavigator","Tab","createBottomTabNavigator","MyTabBar","descriptors","routes","index","options","tabBarVisible","KeyboardAvoidingView","route","label","undefined","tabBarLabel","event","emit","target","canPreventDefault","defaultPrevented","onLongPress","accessibilityRole","accessibilityState","selected","accessibilityLabel","tabBarAccessibilityLabel","testID","tabBarTestID","left","bottom","App","NavigationContainer","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","headerShown","Screen","component","tabBar","tabBarOptions","keyboardHidesTabBar","module","exports"],"mappings":"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","file":"static/js/app.c11b7302.chunk.js","sourcesContent":["import { Dimensions } from 'react-native';\nexport const winHeight = Dimensions.get(\"window\").height;\n\nexport const winWidth = Dimensions.get(\"window\").width;\n","import React from \"react\";\nimport {\n  Button,\n  TextInput,\n  Dimensions,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n} from \"react-native\";\nimport { winWidth } from \"../utils/window\";\n\nconst windowHeight = Dimensions.get(\"screen\").height;\nconst windowWidth = Dimensions.get(\"screen\").width;\n\nexport interface HeaderProps {\n  onTap(): any;\n}\n\nconst Header = (props: HeaderProps) => {\n  const { onTap } = props;\n  return (\n    <View style={styles.header}>\n      <View\n        style={{\n          width: winWidth < 767 ? \"100%\" : \"70%\",\n          top: winWidth > 767 ? 5 : 10,\n          height: \"100%\",\n          flexDirection: \"row\",\n          alignSelf: \"flex-start\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"flex-start\",\n            justifyContent: \"flex-start\",\n            top: winWidth > 767 ? 5 : 10,\n          }}\n        >\n          <Image\n            source={{ uri: require(\"../../assets/newicon2.png\") }}\n            style={{ width: 30, height: 30, top: -2 }}\n          />\n          <Text style={styles.headerText}>Krisearch</Text>\n        </View>\n\n        <TextInput\n          style={{\n            width: \"50%\",\n            height: winWidth > 767 ? 40 : 35,\n            fontSize: winWidth > 767 ? 20 : 16,\n            backgroundColor: \"#fff\",\n            outlineColor: \"#fff\",\n            borderRadius: 10,\n            padding: 5,\n            marginTop: 10,\n          }}\n          placeholder=\"Search for Crops...\"\n          placeholderTextColor=\"#000\"\n          onFocus={onTap}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default Header;\n\nconst styles = StyleSheet.create({\n  header: {\n    width: \"100%\",\n    height: 90,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"#346beb\",\n    padding: 5,\n  },\n  headerText: {\n    fontSize: winWidth > 767 ? 22 : 20,\n    color: \"#fff\",\n    fontWeight: \"600\",\n    marginLeft: 2,\n    alignSelf: \"flex-start\",\n  },\n});\n","const hideNumber = (phone : number)=>{\n    var a=[];\n    var b;\n    var c;\n    var newString=[];\n    let i=0;\n\n    a = phone.toString().split('');\n    console.log(a)\n    a.splice(1,0,\"X\");\n    a.splice(3,2,\"X\");\n    a.splice(6,5,\"X\");\n    a.splice(1,0,\"X\");\n   \n    console.log('New A'+a)\n    return a;\n\n    \n\n\n}\n\nexport default hideNumber","import { Entypo, MaterialIcons, SimpleLineIcons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Dimensions,\n  Image,\n} from \"react-native\";\nimport getSmallString from \"../utils/getSmallString\";\nimport hideNumber from \"../utils/hideNumber\";\n\nexport interface CardProps {\n  name: string;\n  avatar?: string;\n  crop?: string;\n  phone?: number;\n  address?: string;\n  onPress: any;\n  cropAvatar?: string;\n  isCrop?: boolean;\n}\n\nexport default function Card(props: CardProps) {\n  const {\n    name,\n    avatar,\n    crop,\n    phone,\n    address,\n    onPress,\n    cropAvatar,\n    isCrop,\n  } = props;\n\n  const windowWidth = Dimensions.get(\"window\").width;\n  const cardWidth = windowWidth / 2 - 30;\n\n  return (\n    <TouchableOpacity onPress={() => onPress()}>\n      <View\n        style={\n          windowWidth > 767\n            ? {\n                width: 200,\n                height: 185,\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderColor: \"#fff\",\n                borderRadius: 10,\n                alignItems: \"center\",\n                margin: 5,\n                marginBottom: 5,\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 3,\n                },\n                shadowOpacity: 0.15,\n                shadowRadius: 2.22,\n\n                elevation: 3,\n              }\n            : {\n                width: windowWidth * 0.45,\n                height: 185,\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderColor: \"#fff\",\n                borderRadius: 10,\n                alignItems: \"center\",\n                margin: 6,\n\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 3,\n                },\n                shadowOpacity: 0.15,\n                shadowRadius: 2.22,\n\n                elevation: 3,\n              }\n        }\n      >\n        <Image\n          source={{ uri: avatar }}\n          style={\n            !isCrop\n              ? {\n                  width: 100,\n                  height: 100,\n                  borderWidth: 1,\n                  borderColor: \"#fff\",\n                  borderRadius: 100,\n                }\n              : {\n                  width: 140,\n                  height: 140,\n                  borderWidth: 1,\n                  borderColor: \"#fff\",\n                  borderRadius: 100,\n                }\n          }\n        />\n        <Text style={{ fontWeight: \"500\", marginTop: 10 }}>{name}</Text>\n\n        {!isCrop ? (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-evenly\",\n              alignItems: \"center\",\n              marginTop: 10,\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Text> {crop}</Text>\n            </View>\n            <Entypo name=\"dot-single\" size={15} style={{ top: 10 }} />\n            <View>\n              <Text>{address}</Text>\n            </View>\n          </View>\n        ) : null}\n\n        {!isCrop ? (\n          <View>\n            <Text>{phone ? hideNumber(phone) : \"Not available\"}</Text>\n          </View>\n        ) : null}\n      </View>\n    </TouchableOpacity>\n  );\n}\n","const getSmallString=(str : string)=>{\n    if(str.length>20){\n        str =str.substring(0,19)+\"...\";\n        return str;\n    }\n    else{\n        return str\n    }\n}\n\nexport default getSmallString","import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  Dimensions,\n  ScrollView,\n  StyleSheet,\n  Text,\n  Image,\n  TouchableOpacity,\n  View,\n  ActivityIndicator,\n  FlatList,\n} from \"react-native\";\nimport Header, { HeaderProps } from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport Farmers from \"../data/farmers.json\";\nimport Crops from \"../data/items.json\";\nimport { Modalize } from \"react-native-modalize\";\nimport Card from \"../components/Card\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  FontAwesome5,\n  FontAwesome,\n} from \"@expo/vector-icons\";\nimport hideNumber from \"../utils/hideNumber\";\nimport getSmallString from \"../utils/getSmallString\";\nimport States from \"../data/states.json\";\n\nconst Home = ({ navigation }) => {\n  const [farmer, setfarmer] = useState(0);\n  const modalizeRef = useRef<Modalize>(null);\n\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onClose = () => {\n    modalizeRef.current?.close();\n  };\n\n  const [isLoading, setLoading] = useState(true);\n  const [sata, setSata] = useState([]);\n\n  const cropper = \"rice\";\n\n  const [crop, setcrop] = useState([]);\n  const [farmers, setfarmers] = useState([]);\n  const [modalName, setmodalName] = useState(\"\");\n  const [firstScroll, setfirstScroll] = useState(0);\n  const [selectedState, setselectedState] = useState(\"\");\n\n  // useEffect(() => {\n  //   fetch(\"http://staging.clarolabs.in:7050/b2bRequirement/fetch/crops\", {\n  //     method: \"post\",\n  //     headers: {\n  //       Accept: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify({\n  //       name: cropper,\n  //     }),\n  //   })\n  //     .then((response) => console.log(response.json()))\n  //     .then((data) => console.log(data))\n  //     .catch((error) => console.error(error));\n  // }, []);\n  console.log(\"REACHING HOME\");\n\n  useEffect(() => {\n    fetch(\"https://maps.claroenergy.in/Ksearch/fetch/farmers\", {\n      method: \"post\",\n\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        gender: null,\n        harvestDate: null,\n        state: selectedState,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => setfarmers(data.data.list.slice(0, firstScroll + 24)))\n      .catch((error) => console.error(error));\n  }, [firstScroll]);\n\n  useEffect(() => {\n    fetch(\"https://maps.claroenergy.in/Ksearch/fetch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: cropper,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => setcrop(data.data.list))\n      .catch((error) => console.error(error));\n  }, []);\n\n  console.log(crop);\n  console.log(farmers);\n\n  const selectState = () => {\n    States.map((item) => {\n      console.log(item.name);\n      farmers.map((i) => {\n        console.log(i.state);\n        if (\n          item.name.toString().toLowerCase() ===\n          i.state.toString().toLowerCase()\n        ) {\n          setselectedState(item.name);\n        }\n      });\n    });\n  };\n\n  const handleLoad = () => {\n    setfirstScroll(firstScroll + 18);\n  };\n\n  const renderItems = ({ item }) => (\n    <Card\n      key={item.id}\n      name={item.farmerName}\n      avatar={item.farmerImage}\n      phone={item.phone}\n      address={item.state}\n      crop={item.crops.map((i) => i.cropName)}\n      onPress={() => {\n        console.log(item.farmerName),\n          setfarmer(item.id),\n          console.log(item.crops.map((i) => i.quantity));\n        onOpen(), setmodalName(item.farmerName);\n      }}\n    />\n  );\n\n  return (\n    <View style={styles.container}>\n      {/* <View\n        style={{\n          marginTop: 40,\n          width: \"100%\",\n          elevation: 1000,\n        }}\n      >\n        <Header onTap={() => navigation.navigate(\"Search\")} />\n      </View> */}\n\n      <View\n        style={{\n          flexDirection: winWidth > 767 ? \"row\" : \"column\",\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      >\n        <View\n          style={{\n            backgroundColor: \"#deebff\",\n            width: winWidth > 767 ? \"100%\" : \"100%\",\n            height: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Header onTap={() => navigation.navigate(\"Search\")} />\n\n          {/* <Button\n            title=\"GO to Search\"\n            onPress={() => navigation.navigate(\"Search\")}\n          /> */}\n          {/* {winWidth < 767 ? (\n            <View\n              style={{\n                width: \"100%\",\n                height: 50,\n                backgroundColor: \"#346beb\",\n                padding: 7,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 4,\n                },\n                shadowOpacity: 0.32,\n                shadowRadius: 5.46,\n\n                elevation: 9,\n              }}\n            >\n              <TextInput\n                style={{\n                  width: \"60%\",\n                  height: 40,\n                  fontSize: 20,\n                  backgroundColor: \"#fff\",\n                  outlineColor: \"#346beb\",\n                  borderRadius: 10,\n                  padding: 5,\n                }}\n                placeholder=\"Search for Crops\"\n                onFocus={() => navigation.navigate(\"Search\")}\n              />\n              <View\n                style={{\n                  width: 35,\n                  height: 35,\n                  borderColor: \"#fff\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  backgroundColor: \"#deebff\",\n                  borderRadius: 35,\n                }}\n              >\n                <SimpleLineIcons name=\"magnifier\" size={20} color=\"#346beb\" />\n              </View>\n            </View>\n          ) : null} */}\n\n          {/* <Button\n            title=\"Loadmore\"\n            onPress={() => setfirstScroll(firstScroll + 5)}\n          /> */}\n          <View\n            style={{\n              width: \"100%\",\n              height: winHeight * 0.89,\n            }}\n          >\n            <FlatList\n              showsVerticalScrollIndicator={false}\n              data={farmers}\n              renderItem={renderItems}\n              ListEmptyComponent={() => (\n                <View style={styles.container}>\n                  <ActivityIndicator size=\"large\" />\n                </View>\n              )}\n              contentContainerStyle={{\n                flexDirection: \"row\",\n                width: \"100%\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                padding: winWidth > 767 ? 10 : 2,\n              }}\n              onEndReached={handleLoad}\n            />\n          </View>\n          {/* <ScrollView\n            showsVerticalScrollIndicator={false}\n            onScrollEndDrag={() => setfirstScroll(firstScroll + 5)}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                width: \"100%\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                padding: winWidth > 767 ? 10 : 2,\n              }}\n            >\n              {farmers.map((item, cIndex) => {\n                return (\n                  <Card\n                    key={item.id}\n                    name={item.farmerName}\n                    avatar={item.farmerImage}\n                    phone={item.phone}\n                    address={item.state}\n                    crop={item.crops.map((i) => i.cropName)}\n                    onPress={() => {\n                      console.log(item.farmerName),\n                        setfarmer(item.id),\n                        console.log(item.crops.map((i) => i.quantity));\n                      onOpen(), setmodalName(item.farmerName);\n                    }}\n                  />\n                );\n              })}\n            </View>\n            {winWidth < 767 ? (\n              <View\n                style={{\n                  height: 60,\n                  width: \"100%\",\n                  backgroundColor: \"transparent\",\n                  marginTop: 10,\n                }}\n              ></View>\n            ) : null}\n          </ScrollView> */}\n        </View>\n      </View>\n      <Modalize\n        ref={modalizeRef}\n        modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.95}\n        threshold={100}\n        modalStyle={winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null}\n        // modalStyle={{ position: \"absolute\", width: \"100%\", zIndex: 999 }}\n        // modalStyle={\n        //   winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n        // }\n        closeOnOverlayTap={true}\n        mod\n      >\n        {farmers.map((item, cIndex) => {\n          if (farmer == item.id) {\n            return (\n              <View>\n                <View\n                  style={{\n                    backgroundColor: \"#3A48ED\",\n                    width: \"100%\",\n                    height: 170,\n                    borderWidth: 1,\n                    top: -2,\n                    borderRadius: 15,\n                    borderColor: \"#3A48ED\",\n                    shadowColor: \"#000\",\n                    shadowOffset: {\n                      width: 0,\n                      height: 4,\n                    },\n                    shadowOpacity: 0.32,\n                    shadowRadius: 5.46,\n\n                    elevation: 9,\n                  }}\n                >\n                  {/* <Text>{item.name}</Text>\n                        <Text>{item.address}</Text>\n                        <Image source={item.avatar} style={{height:50, width:50}}/>\n                   <Text>{farmer}</Text> */}\n                  <TouchableOpacity\n                    onPress={() => onClose()}\n                    style={{\n                      alignItems: \"center\",\n                      marginTop: 5,\n                      marginRight: 2,\n                      padding: 5,\n                      justifyContent: \"center\",\n                      alignSelf: \"flex-end\",\n                      backgroundColor: \"rgba(0,0,0,0.2)\",\n                      borderRadius: 10,\n                      height: 35,\n                      width: 70,\n                    }}\n                  >\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Text\n                        style={{\n                          fontSize: 15,\n                          fontWeight: 500,\n                          color: \"#fff\",\n                          marginRight: 5,\n                        }}\n                      >\n                        Close\n                      </Text>\n                      <SimpleLineIcons\n                        name=\"close\"\n                        size={15}\n                        color=\"#fff\"\n                        onPress={() => onClose()}\n                      />\n                    </View>\n                  </TouchableOpacity>\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      justifyContent: \"space-between\",\n                      padding: 2,\n                      top: -10,\n                    }}\n                  >\n                    <View style={{ width: \"40%\", height: \"100%\", padding: 5 }}>\n                      <Image\n                        source={{ uri: item.farmerImage }}\n                        style={{\n                          height: 120,\n                          width: 120,\n                          borderRadius: 120,\n                          borderColor: \"#fff\",\n                          borderWidth: 2,\n                        }}\n                      />\n                    </View>\n                    <View\n                      style={{\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-evenly\",\n                        width: \"60%\",\n                        height: \"100%\",\n                      }}\n                    >\n                      <View\n                        style={{\n                          flexDirection: \"column\",\n                          alignItems: \"flex-start\",\n                          width: \"100%\",\n                          height: \"100%\",\n                          justifyContent: \"space-evenly\",\n                        }}\n                      >\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Feather name=\"user\" size={20} color=\"#fff\" />\n                          <Text\n                            style={{\n                              fontSize: 20,\n                              color: \"#fff\",\n                              fontWeight: \"700\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            {getSmallString(item.farmerName)}\n                          </Text>\n                        </View>\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Feather name=\"map-pin\" size={20} color=\"#fff\" />\n                          <Text\n                            style={{\n                              fontSize: 20,\n                              color: \"#fff\",\n                              fontWeight: \"700\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            {item.state}\n                          </Text>\n                        </View>\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Feather name=\"user\" size={20} color=\"#fff\" />\n                          <Text\n                            style={{\n                              fontSize: 20,\n                              color: \"#fff\",\n                              fontWeight: \"700\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            {hideNumber(item.phone)}\n                          </Text>\n                        </View>\n                      </View>\n                    </View>\n                  </View>\n                  <View style={{ top: -40 }}>\n                    <Text\n                      style={{\n                        marginTop: winWidth < 400 ? 40 : 60,\n                        padding: 5,\n                        fontWeight: \"500\",\n                        color: \"#6F6F6F\",\n                        fontSize: 20,\n                        marginLeft: 5,\n                      }}\n                    >\n                      Farming Details\n                    </Text>\n                    <View\n                      style={{\n                        width: \"95%\",\n                        alignSelf: \"center\",\n                        height: 1,\n                        backgroundColor: \"#C0C0C0\",\n                      }}\n                    ></View>\n                    <View\n                      style={{\n                        flexDirection: \"column\",\n                        marginTop: 10,\n                        padding: 10,\n                        height: winWidth < 400 ? 100 : 180,\n                        justifyContent: \"space-between\",\n                      }}\n                    >\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          alignItems: \"center\",\n                          width: \"100%\",\n                          justifyContent: \"space-between\",\n                          marginBottom: 10,\n                        }}\n                      >\n                        <View style={{ flexDirection: \"column\", width: \"50%\" }}>\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <Entypo name=\"leaf\" size={20} color=\"#9F99FF\" />\n                            <Text\n                              style={{\n                                fontSize: 12,\n                                color: \"#6F6F6F\",\n                                fontWeight: \"600\",\n                              }}\n                            >\n                              Crop\n                            </Text>\n                          </View>\n                          <View>\n                            <Text style={{ fontSize: 20 }}>\n                              {item.crops.map((i) => i.cropName)}\n                            </Text>\n                          </View>\n                        </View>\n\n                        <View\n                          style={{\n                            flexDirection: \"column\",\n                            width: \"50%\",\n                            alignItems: \"flex-end\",\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <SimpleLineIcons\n                              name=\"calendar\"\n                              size={20}\n                              color=\"#9F99FF\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 12,\n                                color: \"#6F6F6F\",\n                                marginLeft: 5,\n                                fontWeight: \"600\",\n                              }}\n                            >\n                              Harvest Date\n                            </Text>\n                          </View>\n                          <View>\n                            <Text style={{ fontSize: 20, marginLeft: 5 }}>\n                              <Text>\n                                {item.crops.map((i) => i.harvestDate)}\n                              </Text>\n                            </Text>\n                          </View>\n                        </View>\n                      </View>\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          alignItems: \"center\",\n                          width: \"100%\",\n                          justifyContent: \"space-between\",\n                          marginTop: 5,\n                        }}\n                      >\n                        <View style={{ flexDirection: \"column\", width: \"50%\" }}>\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <SimpleLineIcons\n                              name=\"size-fullscreen\"\n                              size={20}\n                              color=\"#9F99FF\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 12,\n                                color: \"#6F6F6F\",\n                                fontWeight: \"600\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              Farming Area\n                            </Text>\n                          </View>\n                          <View>\n                            <Text style={{ fontSize: 20 }}>\n                              {item.land} Kattha\n                            </Text>\n                          </View>\n                        </View>\n\n                        <View\n                          style={{\n                            flexDirection: \"column\",\n                            width: \"50%\",\n                            alignItems: \"flex-end\",\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <SimpleLineIcons\n                              name=\"speedometer\"\n                              size={20}\n                              color=\"#9F99FF\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 12,\n                                color: \"#6F6F6F\",\n                                marginLeft: 5,\n                                fontWeight: \"600\",\n                              }}\n                            >\n                              Quantity\n                            </Text>\n                          </View>\n                          <View>\n                            <Text style={{ fontSize: 20, marginLeft: 5 }}>\n                              {item.crops.map((i) => i.quantity) / 100} q\n                            </Text>\n                          </View>\n                        </View>\n                      </View>\n                      <View></View>\n                    </View>\n                    <View\n                      style={{\n                        width: \"95%\",\n                        alignSelf: \"center\",\n                        height: 1,\n                        backgroundColor: \"#C0C0C0\",\n                        marginTop: winWidth < 400 ? 30 : 10,\n                      }}\n                    />\n                  </View>\n                  <View\n                    style={{\n                      width: \"100%\",\n                      flexDirection: \"column\",\n                      top: -29,\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 15,\n                        color: \"#808080\",\n                        marginLeft: 5,\n                      }}\n                    >\n                      Coming soon\n                    </Text>\n                    <View\n                      style={{\n                        width: \"100%\",\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-evenly\",\n                        top: 5,\n                      }}\n                    >\n                      <TouchableOpacity\n                        style={{\n                          width: winWidth < 400 ? 90 : 120,\n                          height: winWidth < 400 ? 30 : 50,\n                          backgroundColor: \"#A9A9A9\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          flexDirection: \"row\",\n                          borderRadius: 10,\n                        }}\n                        onPress={() =>\n                          alert(\n                            \"Click to chat feature helps you connect directly to this farmer in one click. Feature Coming soon !\"\n                          )\n                        }\n                      >\n                        <FontAwesome5 name=\"whatsapp\" size={20} color=\"#fff\" />\n                        <Text\n                          style={{\n                            fontSize: winWidth < 400 ? 16 : 20,\n                            color: \"#fff\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          Chat\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity\n                        style={{\n                          width: winWidth < 400 ? 90 : 120,\n                          height: winWidth < 400 ? 30 : 50,\n                          backgroundColor: \"#A9A9A9\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          flexDirection: \"row\",\n                          borderRadius: 10,\n                        }}\n                        onPress={() => alert(\"Feature Coming soon !\")}\n                      >\n                        <Text\n                          style={{\n                            fontSize: winWidth < 400 ? 16 : 20,\n                            color: \"#fff\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          Buy\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity\n                        style={{\n                          width: winWidth < 400 ? 90 : 120,\n                          height: winWidth < 400 ? 40 : 50,\n                          backgroundColor: \"#fff\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          flexDirection: \"row\",\n                          borderRadius: 10,\n                          borderColor: \"#A9A9A9\",\n                          borderWidth: 2,\n                        }}\n                        onPress={() =>\n                          alert(\n                            \"Support the farmer by any kind. Feature Coming Soon !\"\n                          )\n                        }\n                      >\n                        <FontAwesome\n                          name=\"handshake-o\"\n                          size={15}\n                          color=\"#A9A9A9\"\n                        />\n                        <Text\n                          style={{\n                            fontSize: winWidth < 400 ? 16 : 20,\n                            color: \"#A9A9A9\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          Support\n                        </Text>\n                      </TouchableOpacity>\n                    </View>\n                  </View>\n                </View>\n              </View>\n            );\n          } else {\n            null;\n          }\n        })}\n      </Modalize>\n    </View>\n  );\n};\n\nexport default Home;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: winHeight,\n  },\n});\n","import { SimpleLineIcons } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Platform,\n  FlatList,\n  ActivityIndicator,\n} from \"react-native\";\nimport Data from \"../data/items.json\";\nimport Farmer from \"../data/farmers.json\";\n\nexport interface SearchProps {\n  visible?: boolean;\n  tapper?: boolean;\n  onHit(): any;\n  isFocused?: boolean;\n  holderValue?: string;\n}\n\nfunction SearchBar(props: SearchProps) {\n  const { visible, onHit, tapper, isFocused, holderValue } = props;\n\n  const [sugg, setsugg] = useState(false);\n  const newdata = [];\n\n  function renderAll(a = []) {\n    for (let i = 0; i < a.length; i++) {\n      return (\n        <View style={{ width: \"100%\", height: 50, backgroundColor: \"yellow\" }}>\n          <Text>{a[i]}</Text>\n        </View>\n      );\n    }\n  }\n\n  return (\n    <View\n      style={{\n        backgroundColor: tapper ? \"#fff\" : \"transparent\",\n      }}\n    >\n      <View\n        style={{\n          backgroundColor: \"#fff\",\n          height: 40,\n          width: \"100%\",\n          alignSelf: \"center\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          borderRadius: 8,\n          padding: 5,\n          shadowColor: \"#98A0FF\",\n          shadowOffset: {\n            width: 0,\n            height: 4,\n          },\n          shadowOpacity: 0.32,\n          shadowRadius: 5.46,\n\n          elevation: 9,\n        }}\n      >\n        {/* <TextInput style={{height:40, backgroundColor:\"white\", width:\"75%\", padding:5, outline}} placeholder=\"Search for crops...\" autoFocus={true}/> */}\n        <TextInput\n          style={\n            Platform.OS === \"web\" && {\n              outlineColor: \"#fff\",\n              height: 40,\n              backgroundColor: \"white\",\n              width: \"85%\",\n              padding: 5,\n              fontSize: 20,\n            }\n          }\n          onFocus={onHit}\n          placeholder={holderValue}\n          autoFocus={visible}\n          editable={visible}\n          onChangeText={(text) => {\n            let a = text.toLowerCase();\n            console.log(a);\n            var setting = [];\n            var typer = [];\n\n            {\n              {\n                Data.map((item, cIndex) => setting.push(item.name));\n              }\n            }\n\n            {\n              {\n                Data.map((item, cIndex) => typer.push(item.type));\n              }\n            }\n            console.log(setting);\n            for (let i = 0; i < setting.length; i++) {\n              var b = setting[i].toLowerCase();\n              var c = typer[i].toLowerCase();\n              var result = b.includes(a);\n\n              if (result == true) {\n                newdata.push(setting[i]);\n                console.log(\"New Data : \" + newdata);\n              } else {\n                null;\n              }\n            }\n          }}\n        />\n\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n          <TouchableOpacity>\n            <View\n              style={{\n                width: 35,\n                height: 35,\n                borderColor: \"#8790FF\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"#3A48ED\",\n                borderRadius: 35,\n              }}\n            >\n              <SimpleLineIcons name=\"magnifier\" size={20} color=\"#fff\" />\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n      <View></View>\n    </View>\n  );\n}\n\nexport default SearchBar;\n","import { SimpleLineIcons } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Platform,\n  Image,\n  Dimensions,\n} from \"react-native\";\nimport SearchBar from \"./SearchBar\";\n\nexport interface ScrollHeaderProps {\n  scrolled?: boolean;\n  visible?: boolean;\n  headerTap(): any;\n  headHolder?: string;\n}\n\nfunction ScrollHeader(props: ScrollHeaderProps) {\n  const [sugg, setsugg] = useState(null);\n  const { scrolled, visible, headerTap, headHolder } = props;\n  const windowWidth = Dimensions.get(\"window\").width;\n\n  return (\n    <View\n      style={{\n        width: \"100%\",\n        marginTop: windowWidth > 767 ? 5 : 2,\n        alignItems: \"center\",\n        alignSelf: \"center\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n        marginLeft: windowWidth > 800 ? 50 : 0,\n        padding: 5,\n      }}\n    >\n      {windowWidth < 767 ? (\n        <View style={{ alignItems: \"center\" }}>\n          <Image\n            source={require(\"../../assets/newlogo.png\")}\n            style={{ width: 100, height: 50 }}\n          />\n        </View>\n      ) : null}\n\n      <View style={{ marginTop: -5, width: \"100%\" }}>\n        <SearchBar onHit={headerTap} holderValue={headHolder} />\n      </View>\n    </View>\n  );\n}\n\nexport default ScrollHeader;\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n  TextInput,\n  Platform,\n  ScrollView,\n} from \"react-native\";\nimport Header from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport Farmers from \"../data/farmers.json\";\nimport Data from \"../data/items.json\";\nimport { Modalize } from \"react-native-modalize\";\nimport hideNumber from \"../utils/hideNumber\";\nimport getSmallString from \"../utils/getSmallString\";\nimport {\n  AntDesign,\n  Entypo,\n  Feather,\n  FontAwesome,\n  FontAwesome5,\n  SimpleLineIcons,\n} from \"@expo/vector-icons\";\nimport { BlurView } from \"expo-blur\";\nimport States from \"../data/states.json\";\nimport ScrollHeader from \"../components/ScrollHeader\";\nimport Card from \"../components/Card\";\n\nconst Search = ({ navigation }) => {\n  const [blur, setblur] = useState(true);\n  const [term, setterm] = useState(\"\");\n  const [placer, setplacer] = useState(false);\n  const [farmer, setfarmer] = useState(0);\n  const [openFilter, setopenFilter] = useState(false);\n  const [toggleCheckBox, setToggleCheckBox] = useState(false);\n  const [val, setval] = useState(\"\");\n  const [addr, setaddr] = useState(\"\");\n  const [genFilterfinal, setgenFilterfinal] = useState([]);\n  const [hideFAB, sethideFAB] = useState(false);\n  const [parent, setparent] = useState(false);\n  const [genderSelected, setgenderSelected] = useState(false);\n  const [filteractive, setfilteractive] = useState(false);\n  const [addrToggle, setaddrToggle] = useState(false);\n  const [merge, setmerge] = useState(false);\n\n  const setSearch = (text: string) => {\n    let dynamic = text.toLowerCase();\n    console.log(\"dynamic: \" + dynamic);\n  };\n\n  const [crop, setcrop] = useState([]);\n  const [farmers, setfarmers] = useState([]);\n  const [modalName, setmodalName] = useState(\"\");\n  const cropper = \"rice\";\n\n  useEffect(() => {\n    fetch(\"https://maps.claroenergy.in/Ksearch/fetch/farmers\", {\n      method: \"post\",\n\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        gender: null,\n        harvestDate: null,\n        state: \"Bihar\",\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => setfarmers(data.data.list))\n      .catch((error) => console.error(error));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"https://maps.claroenergy.in/Ksearch/fetch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: cropper,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => setcrop(data.data.list))\n      .catch((error) => console.error(error));\n  }, []);\n\n  console.log(crop);\n  console.log(farmers);\n\n  const filteredCrops = Data.filter((item) => {\n    return item.name.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredParents = Data.filter((item) => {\n    return item.type.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredFarmers = Farmers.filter((item) => {\n    return item.crop.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const genderFilter = filteredFarmers.filter((item) => {\n    if (val) {\n      return item.gender.toLocaleLowerCase() === val.toLowerCase();\n    }\n  });\n\n  const addrFilter = filteredFarmers.filter((item) => {\n    if (addr) {\n      return item.address.toLocaleLowerCase() === addr.toLowerCase();\n    }\n  });\n\n  const applyFilterFinal = [genderFilter, addrFilter].flat();\n\n  const modalizeRef = useRef<Modalize>(null);\n\n  const modalizeFilterRef = useRef<Modalize>(null);\n\n  const mergeResult = (genderFilter && addrFilter).filter((item) => {\n    // if (val && addr) {\n\n    // }\n    // if (addr && !val) {\n    //   return item.address.toLocaleLowerCase() === addr.toLowerCase();\n    // }\n    // if (val && !addr) {\n    //   return item.gender.toLocaleLowerCase() === val.toLowerCase();\n    // }\n    return (\n      item.gender.toLocaleLowerCase() === val.toLowerCase() &&\n      item.address.toLocaleLowerCase() === addr.toLowerCase()\n    );\n  });\n\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onClose = () => {\n    modalizeRef.current?.close();\n  };\n\n  const onOpenfilter = () => {\n    modalizeFilterRef.current?.open();\n  };\n\n  const onCloseFilter = () => {\n    modalizeFilterRef.current?.close();\n  };\n\n  const genderData = [\n    {\n      key: \"male\",\n      text: \"Male\",\n    },\n    {\n      key: \"female\",\n      text: \"Female\",\n    },\n    {\n      key: \"other\",\n      text: \"Other\",\n    },\n  ];\n\n  return (\n    <View style={styles.container}>\n      {/* <View style={{ marginTop: 40, width: \"100%\", elevation: 1000 }}>\n        <Header onTap={() => navigation.navigate(\"Search\")} />\n      </View> */}\n      <View\n        style={{\n          flexDirection: winWidth > 767 ? \"row\" : \"column\",\n          width: \"100%\",\n\n          height: \"100%\",\n        }}\n      >\n        {winWidth > 767 ? (\n          <View\n            style={{\n              backgroundColor: \"#8cbaff\",\n              width: \"30%\",\n              height: \"100%\",\n              alignItems: \"center\",\n\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 24, alignSelf: \"flex-start\" }}>\n              Welcome to Krisearch\n            </Text>\n            <Text\n              style={{\n                fontSize: 24,\n                marginBottom: 20,\n                alignSelf: \"flex-start\",\n              }}\n            >\n              Lets start discovering Farmers\n            </Text>\n            <View\n              style={{\n                flexDirection: \"row\",\n                width: \"100%\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            >\n              <View style={{ marginTop: 20 }}>\n                <Button\n                  title=\"Go to Home\"\n                  onPress={() => navigation.navigate(\"Home\")}\n                />\n              </View>\n              <View style={{ marginTop: 20 }}>\n                <Button\n                  title=\"Go to Profile\"\n                  onPress={() => navigation.navigate(\"Profile\")}\n                />\n              </View>\n            </View>\n          </View>\n        ) : null}\n\n        <View\n          style={{\n            backgroundColor: \"#deebff\",\n            width: winWidth > 767 ? \"70%\" : \"100%\",\n            height: \"100%\",\n            alignItems: \"flex-start\",\n            justifyContent: \"center\",\n          }}\n        >\n          {/* <Button\n            title=\"Go to Home\"\n            onPress={() => navigation.navigate(\"Home\")}\n          />\n          <Button title=\"Set Blur\" onPress={() => setblur(!blur)} /> */}\n\n          <View\n            style={{\n              marginBottom: 10,\n              width: \"100%\",\n              alignItems: \"center\",\n              height: winHeight * 0.99,\n            }}\n          >\n            <View\n              style={{\n                width: winWidth > 767 ? winWidth * 0.45 : winWidth * 0.9,\n              }}\n            >\n              <ScrollHeader\n                headerTap={() => {\n                  setblur(!blur), setterm(\"\"), setparent(false);\n                }}\n                headHolder={\n                  placer && parent\n                    ? term\n                    : parent\n                    ? term\n                    : \"Search for crops...\"\n                }\n              />\n            </View>\n\n            <Text\n              style={{\n                marginTop: 10,\n                padding: 5,\n                fontWeight: \"500\",\n                color: \"#6F6F6F\",\n                fontSize: 18,\n              }}\n            >\n              Showing results for {term}\n            </Text>\n\n            {/* <View style={{ width: \"100%\", flexDirection: \"row\" }}>\n              <TouchableOpacity\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  marginRight: 5,\n                  backgroundColor: \"blue\",\n                }}\n              >\n                <Text>{val ? val : \"\"}</Text>\n                <AntDesign\n                  name=\"close\"\n                  size={20}\n                  color=\"#fff\"\n                  onPress={() => setval(\"\")}\n                />\n              </TouchableOpacity>\n              <TouchableOpacity>\n                <Text>{addr ? addr : \"\"}</Text>\n              </TouchableOpacity>\n            </View> */}\n            {placer ? (\n              !parent ? (\n                <View\n                  style={{\n                    width: winWidth > 767 ? \"80%\" : \"90%\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  {/* <Text\n                    style={{\n                      marginTop: 60,\n                      padding: 5,\n                      fontWeight: \"500\",\n                      color: \"#6F6F6F\",\n                      fontSize: 20,\n                    }}\n                  >\n                    {term}\n                  </Text> */}\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-start\",\n                    }}\n                  >\n                    <TouchableOpacity\n                      style={{\n                        top: 10,\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-between\",\n                        backgroundColor: \"#949cff\",\n                        height: 30,\n                        padding: 3,\n                        borderRadius: 5,\n                        marginBottom: 20,\n                        marginRight: 20,\n                      }}\n                      onPress={() => {\n                        console.log(\"Biharma\"),\n                          sethideFAB(true),\n                          onOpenfilter();\n                      }}\n                    >\n                      <AntDesign name=\"filter\" size={15} color=\"#3A48ED\" />\n                      <Text\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"500\",\n                          marginLeft: 2,\n                          color: \"#fff\",\n                        }}\n                      >\n                        {\" \"}\n                        Filter Results\n                      </Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: val ? \"#fff\" : \"#deebff\",\n                        padding: 5,\n                        height: 30,\n                        borderRadius: 10,\n                      }}\n                    >\n                      <Text style={{ color: \"#000\" }}>{val ? val : null}</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: addr ? \"#fff\" : \"#deebff\",\n                        padding: 5,\n                        height: 30,\n                        borderRadius: 10,\n                      }}\n                    >\n                      <Text style={{ color: \"#000\" }}>\n                        {addr ? addr : null}\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              ) : (\n                <View>\n                  <Text\n                    style={{\n                      marginTop: 60,\n                      padding: 5,\n                      fontWeight: \"500\",\n                      color: \"#6F6F6F\",\n                    }}\n                  >\n                    {term}\n                  </Text>\n                </View>\n              )\n            ) : parent ? (\n              <View>\n                <Text\n                  style={{\n                    marginTop: 60,\n                    padding: 5,\n                    fontWeight: \"500\",\n                    color: \"#6F6F6F\",\n                  }}\n                >\n                  {term}\n                </Text>\n              </View>\n            ) : (\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text\n                  style={{\n                    marginTop: 60,\n                    padding: 5,\n                    fontWeight: \"500\",\n                    color: \"#6F6F6F\",\n                  }}\n                >\n                  {term}\n                </Text>\n                <TouchableOpacity\n                  style={{\n                    top: 20,\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    backgroundColor: \"#949cff\",\n                    height: 30,\n                    padding: 3,\n                    borderRadius: 5,\n                  }}\n                  onPress={() => {\n                    console.log(\"Biharma\"), sethideFAB(true), onOpenfilter();\n                  }}\n                >\n                  <AntDesign name=\"filter\" size={15} color=\"#3A48ED\" />\n                  <Text\n                    style={{\n                      fontSize: 15,\n                      fontWeight: \"500\",\n                      marginLeft: 2,\n                      color: \"#fff\",\n                    }}\n                  >\n                    {\" \"}\n                    Filter Results\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            )}\n            {/* {placer ? (\n            <TouchableOpacity\n              style={{ alignSelf: \"flex-end\", top: -23, width: 50, height: 20 }}\n              onPress={() => {\n                onOpenfilter();\n              }}\n            >\n              Filter\n            </TouchableOpacity>\n          ) : null} */}\n            <View\n              style={{\n                width: \"100%\",\n                height: 1,\n                backgroundColor: \"#96c1ff\",\n              }}\n            ></View>\n            <ScrollView showsVerticalScrollIndicator={false} bounces={true}>\n              {parent ? (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n                    alignItems: \"flex-start\",\n                    justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                >\n                  {filteredParents.map((item, cIndex) => {\n                    return (\n                      <Card\n                        key={item.id}\n                        name={item.name}\n                        avatar={item.image}\n                        isCrop={true}\n                        onPress={() => {\n                          setparent(!parent), setterm(item.name);\n                        }}\n                      />\n                    );\n                  })}\n                </View>\n              ) : filteractive ? (\n                merge ? (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"flex-start\",\n                      justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                      padding: winWidth > 767 ? 10 : 2,\n                    }}\n                  >\n                    {mergeResult.map((item, cIndex) => {\n                      return (\n                        <Card\n                          key={item.id}\n                          name={item.name}\n                          avatar={item.avatar}\n                          phone={item.phone}\n                          address={item.address}\n                          crop={item.crop}\n                          onPress={() => {\n                            setfarmer(item.id), onOpen(), sethideFAB(true);\n                          }}\n                          cropAvatar={item.image}\n                        />\n                      );\n                    })}\n                  </View>\n                ) : val && !addr ? (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"flex-start\",\n                      justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                      padding: winWidth > 767 ? 10 : 2,\n                    }}\n                  >\n                    {genderFilter.map((item, cIndex) => {\n                      return (\n                        <Card\n                          key={item.id}\n                          name={item.name}\n                          avatar={item.avatar}\n                          phone={item.phone}\n                          address={item.address}\n                          crop={item.crop}\n                          onPress={() => {\n                            setfarmer(item.id), onOpen(), sethideFAB(true);\n                          }}\n                          cropAvatar={item.image}\n                        />\n                      );\n                    })}\n                  </View>\n                ) : !val && addr ? (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"flex-start\",\n                      justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                      padding: winWidth > 767 ? 10 : 2,\n                    }}\n                  >\n                    {addrFilter.map((item, cIndex) => {\n                      return (\n                        <Card\n                          key={item.id}\n                          name={item.name}\n                          avatar={item.avatar}\n                          phone={item.phone}\n                          address={item.address}\n                          crop={item.crop}\n                          onPress={() => {\n                            setfarmer(item.id), onOpen();\n                          }}\n                          cropAvatar={item.image}\n                        />\n                      );\n                    })}\n                  </View>\n                ) : (\n                  <Text>No Result Found</Text>\n                )\n              ) : (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n                    alignItems: \"flex-start\",\n                    justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                >\n                  {filteredFarmers.map((item, cIndex) => {\n                    return (\n                      <Card\n                        key={item.id}\n                        name={item.name}\n                        avatar={item.avatar}\n                        phone={item.phone}\n                        address={item.address}\n                        crop={item.crop}\n                        onPress={() => {\n                          setfarmer(item.id), onOpen(), sethideFAB(true);\n                        }}\n                        cropAvatar={item.image}\n                      />\n                    );\n                  })}\n                </View>\n              )}\n              <View\n                style={{\n                  height: 60,\n                  width: \"100%\",\n                  backgroundColor: \"transparent\",\n                  marginTop: 10,\n                }}\n              ></View>\n            </ScrollView>\n            <Modalize\n              ref={modalizeRef}\n              modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.95}\n              modalStyle={\n                winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n              }\n              threshold={100}\n              closeOnOverlayTap={true}\n              mod\n            >\n              {filteredFarmers.map((item, cIndex) => {\n                let kisan = farmer;\n                if (kisan == item.id) {\n                  return (\n                    <View>\n                      <View\n                        style={{\n                          backgroundColor: \"#3A48ED\",\n                          width: \"100%\",\n                          height: 170,\n                          borderWidth: 1,\n                          top: -2,\n                          borderRadius: 15,\n                          borderColor: \"#3A48ED\",\n                          shadowColor: \"#000\",\n                          shadowOffset: {\n                            width: 0,\n                            height: 4,\n                          },\n                          shadowOpacity: 0.32,\n                          shadowRadius: 5.46,\n\n                          elevation: 11,\n                        }}\n                      >\n                        {/* <Text>{item.name}</Text>\n                        <Text>{item.address}</Text>\n                        <Image source={item.avatar} style={{height:50, width:50}}/>\n                   <Text>{farmer}</Text> */}\n                        <TouchableOpacity\n                          onPress={() => {\n                            onClose(), sethideFAB(false);\n                          }}\n                          style={{\n                            alignItems: \"center\",\n                            marginTop: 5,\n                            marginRight: 2,\n                            padding: 5,\n                            justifyContent: \"center\",\n                            alignSelf: \"flex-end\",\n                            backgroundColor: \"rgba(0,0,0,0.2)\",\n                            borderRadius: 10,\n                            height: 35,\n                            width: 70,\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              justifyContent: \"space-between\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <Text\n                              style={{\n                                fontSize: 15,\n                                fontWeight: 500,\n                                color: \"#fff\",\n                                marginRight: 5,\n                              }}\n                            >\n                              Close\n                            </Text>\n                            <SimpleLineIcons\n                              name=\"close\"\n                              size={15}\n                              color=\"#fff\"\n                              onPress={() => {\n                                onClose(), sethideFAB(false);\n                              }}\n                            />\n                          </View>\n                        </TouchableOpacity>\n                        <View\n                          style={{\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                            padding: 2,\n                            top: -10,\n                          }}\n                        >\n                          <View\n                            style={{\n                              width: \"40%\",\n                              height: \"100%\",\n                              padding: 5,\n                            }}\n                          >\n                            <Image\n                              source={{ uri: item.avatar }}\n                              style={{\n                                height: 120,\n                                width: 120,\n                                borderRadius: 120,\n                                borderColor: \"#fff\",\n                                borderWidth: 2,\n                              }}\n                            />\n                          </View>\n                          <View\n                            style={{\n                              flexDirection: \"column\",\n                              alignItems: \"center\",\n                              justifyContent: \"space-evenly\",\n                              width: \"60%\",\n                              height: \"100%\",\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"column\",\n                                alignItems: \"flex-start\",\n                                width: \"100%\",\n                                height: \"100%\",\n                                justifyContent: \"space-evenly\",\n                              }}\n                            >\n                              <View style={{ flexDirection: \"row\" }}>\n                                <Feather name=\"user\" size={20} color=\"#fff\" />\n                                <Text\n                                  style={{\n                                    fontSize: 20,\n                                    color: \"#fff\",\n                                    fontWeight: \"700\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  {getSmallString(item.name)}\n                                </Text>\n                              </View>\n                              <View style={{ flexDirection: \"row\" }}>\n                                <Feather\n                                  name=\"map-pin\"\n                                  size={20}\n                                  color=\"#fff\"\n                                />\n                                <Text\n                                  style={{\n                                    fontSize: 20,\n                                    color: \"#fff\",\n                                    fontWeight: \"700\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  {item.address}\n                                </Text>\n                              </View>\n                              <View style={{ flexDirection: \"row\" }}>\n                                <Feather name=\"user\" size={20} color=\"#fff\" />\n                                <Text\n                                  style={{\n                                    fontSize: 20,\n                                    color: \"#fff\",\n                                    fontWeight: \"700\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  {hideNumber(item.phone)}\n                                </Text>\n                              </View>\n                            </View>\n                          </View>\n                        </View>\n                        <View style={{ top: -40 }}>\n                          <Text\n                            style={{\n                              marginTop: winWidth < 400 ? 40 : 60,\n                              padding: 5,\n                              fontWeight: \"500\",\n                              color: \"#6F6F6F\",\n                              fontSize: 20,\n                              marginLeft: 5,\n                            }}\n                          >\n                            Farming Details\n                          </Text>\n                          <View\n                            style={{\n                              width: \"95%\",\n                              alignSelf: \"center\",\n                              height: 1,\n                              backgroundColor: \"#C0C0C0\",\n                            }}\n                          ></View>\n                          <View\n                            style={{\n                              flexDirection: \"column\",\n                              marginTop: 10,\n                              padding: 10,\n                              height: winWidth < 400 ? 100 : 180,\n                              justifyContent: \"space-between\",\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                                width: \"100%\",\n                                justifyContent: \"space-between\",\n                                marginBottom: 10,\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <Entypo\n                                    name=\"leaf\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      fontWeight: \"600\",\n                                    }}\n                                  >\n                                    Crop\n                                  </Text>\n                                </View>\n                                <View>\n                                  {Data.map((cropName, cIndex) => {\n                                    let a = cropName.name.toLowerCase();\n                                    let b = item.crop?.toLowerCase();\n                                    let result = a.localeCompare(b);\n\n                                    if (a == b) {\n                                      return (\n                                        <View\n                                          style={{\n                                            flexDirection: \"row\",\n                                            alignItems: \"center\",\n                                          }}\n                                        >\n                                          <Image\n                                            source={{ uri: cropName.image }}\n                                            style={{\n                                              height: 30,\n                                              width: 30,\n                                              borderWidth: 1,\n                                              borderRadius: 30,\n                                              borderColor: \"#3ECF8E\",\n                                            }}\n                                          />\n                                          <Text\n                                            style={{\n                                              fontSize: 20,\n                                              marginLeft: 5,\n                                            }}\n                                          >\n                                            {cropName.name}\n                                          </Text>\n                                        </View>\n                                      );\n                                    } else {\n                                      null;\n                                    }\n                                  })}\n                                </View>\n                              </View>\n\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                  alignItems: \"flex-end\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <SimpleLineIcons\n                                    name=\"calendar\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      marginLeft: 5,\n                                      fontWeight: \"600\",\n                                    }}\n                                  >\n                                    Harvest Date\n                                  </Text>\n                                </View>\n                                <View>\n                                  <Text style={{ fontSize: 20, marginLeft: 5 }}>\n                                    {item.harvestDate}\n                                  </Text>\n                                </View>\n                              </View>\n                            </View>\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                                width: \"100%\",\n                                justifyContent: \"space-between\",\n                                marginTop: 5,\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <SimpleLineIcons\n                                    name=\"size-fullscreen\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      fontWeight: \"600\",\n                                      marginLeft: 5,\n                                    }}\n                                  >\n                                    Farming Area\n                                  </Text>\n                                </View>\n                                <View>\n                                  <Text style={{ fontSize: 20 }}>\n                                    {item.area} Kattha\n                                  </Text>\n                                </View>\n                              </View>\n\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                  alignItems: \"flex-end\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <SimpleLineIcons\n                                    name=\"speedometer\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      marginLeft: 5,\n                                      fontWeight: \"600\",\n                                    }}\n                                  >\n                                    Quantity\n                                  </Text>\n                                </View>\n                                <View>\n                                  <Text style={{ fontSize: 20, marginLeft: 5 }}>\n                                    {item.quantity} quintal\n                                  </Text>\n                                </View>\n                              </View>\n                            </View>\n                            <View></View>\n                          </View>\n                          <View\n                            style={{\n                              width: \"95%\",\n                              alignSelf: \"center\",\n                              height: 1,\n                              backgroundColor: \"#C0C0C0\",\n                              marginTop: winWidth < 400 ? 30 : 10,\n                            }}\n                          />\n                        </View>\n                        <View\n                          style={{\n                            width: \"100%\",\n                            flexDirection: \"column\",\n                            top: -29,\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <Text\n                            style={{\n                              fontSize: 15,\n                              color: \"#808080\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            Coming soon\n                          </Text>\n                          <View\n                            style={{\n                              width: \"100%\",\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                              justifyContent: \"space-evenly\",\n                              top: 5,\n                            }}\n                          >\n                            <TouchableOpacity\n                              style={{\n                                width: winWidth < 400 ? 90 : 120,\n                                height: winWidth < 400 ? 30 : 50,\n                                backgroundColor: \"#A9A9A9\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                flexDirection: \"row\",\n                                borderRadius: 10,\n                              }}\n                              onPress={() =>\n                                alert(\n                                  \"Click to chat feature helps you connect directly to this farmer in one click. Feature Coming soon !\"\n                                )\n                              }\n                            >\n                              <FontAwesome5\n                                name=\"whatsapp\"\n                                size={25}\n                                color=\"#fff\"\n                              />\n                              <Text\n                                style={{\n                                  fontSize: winWidth < 400 ? 16 : 20,\n                                  color: \"#fff\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                Chat\n                              </Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity\n                              style={{\n                                width: winWidth < 400 ? 90 : 120,\n                                height: winWidth < 400 ? 30 : 50,\n                                backgroundColor: \"#A9A9A9\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                flexDirection: \"row\",\n                                borderRadius: 10,\n                              }}\n                              onPress={() => alert(\"Feature Coming soon !\")}\n                            >\n                              <Text\n                                style={{\n                                  fontSize: winWidth < 400 ? 16 : 20,\n                                  color: \"#fff\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                Buy\n                              </Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity\n                              style={{\n                                width: winWidth < 400 ? 90 : 120,\n                                height: winWidth < 400 ? 30 : 50,\n                                backgroundColor: \"#fff\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                flexDirection: \"row\",\n                                borderRadius: 10,\n                                borderColor: \"#A9A9A9\",\n                                borderWidth: 2,\n                              }}\n                              onPress={() =>\n                                alert(\n                                  \"Support the farmer by any kind. Feature Coming Soon !\"\n                                )\n                              }\n                            >\n                              <FontAwesome\n                                name=\"handshake-o\"\n                                size={25}\n                                color=\"#A9A9A9\"\n                              />\n                              <Text\n                                style={{\n                                  fontSize: winWidth < 400 ? 16 : 20,\n                                  color: \"#A9A9A9\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                Support\n                              </Text>\n                            </TouchableOpacity>\n                          </View>\n                        </View>\n                      </View>\n                    </View>\n                  );\n                } else {\n                  null;\n                }\n              })}\n            </Modalize>\n\n            <Modalize\n              ref={modalizeFilterRef}\n              modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.95}\n              modalStyle={\n                winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n              }\n              threshold={100}\n              closeOnOverlayTap={true}\n              mod\n            >\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  padding: 5,\n                }}\n              >\n                <Text\n                  style={{\n                    padding: 5,\n                    fontWeight: \"500\",\n                    color: \"#6F6F6F\",\n                    fontSize: 20,\n                    marginLeft: 5,\n                  }}\n                >\n                  Filter resuts here\n                </Text>\n                {/* <TouchableOpacity onPress={() => onCloseFilter()}>\n                Close Filter\n              </TouchableOpacity> */}\n                <TouchableOpacity\n                  onPress={() => {\n                    onCloseFilter(), sethideFAB(false);\n                  }}\n                  style={{\n                    alignItems: \"center\",\n                    marginTop: 5,\n                    marginRight: 2,\n                    padding: 5,\n                    justifyContent: \"center\",\n                    alignSelf: \"flex-end\",\n                    backgroundColor: \"#000\",\n                    borderRadius: 10,\n                    height: 35,\n                    width: 70,\n                  }}\n                >\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 15,\n                        fontWeight: 500,\n                        color: \"#fff\",\n                        marginRight: 5,\n                      }}\n                    >\n                      Close\n                    </Text>\n                    <SimpleLineIcons\n                      name=\"close\"\n                      size={15}\n                      color=\"#fff\"\n                      onPress={() => {\n                        onCloseFilter(), sethideFAB(false);\n                      }}\n                    />\n                  </View>\n                </TouchableOpacity>\n              </View>\n              <View\n                style={{\n                  width: \"95%\",\n                  alignSelf: \"center\",\n                  height: 1,\n                  backgroundColor: \"#C0C0C0\",\n                  marginTop: 10,\n                  alignItems: \"center\",\n                }}\n              ></View>\n              <Text\n                style={{\n                  color: \"#6F6F6F\",\n                  fontSize: 15,\n                  marginTop: 3,\n                  marginLeft: 7,\n                }}\n              >\n                By gender\n              </Text>\n              <View\n                style={{\n                  width: \"60%\",\n                  marginTop: 10,\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-start\",\n                  padding: 5,\n\n                  alignSelf: \"flex-start\",\n                }}\n              >\n                {genderData.map((item) => {\n                  return (\n                    <View key={item.key} style={styles.buttonContainer}>\n                      <TouchableOpacity\n                        style={styles.circle}\n                        onPress={() => {\n                          setfilteractive(true);\n                          setval(item.key);\n                          // toggler(item.key);\n                          // let a = item.text;\n                          // let b = filteredFarmers.filter((i) => {\n                          //   return i.gender.toLowerCase() === a.toLowerCase();\n                          // });\n                          // console.log(item.text);\n                          // console.log(a);\n                          // console.log(b);\n                        }}\n                      >\n                        {val === item.key && (\n                          <View style={styles.checkedCircle} />\n                        )}\n                      </TouchableOpacity>\n                      <Text style={{ fontSize: 16, marginLeft: 5 }}>\n                        {item.text}\n                      </Text>\n                    </View>\n                  );\n                })}\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  marginTop: 10,\n                  flexDirection: \"column\",\n                  alignItems: \"flex-start\",\n                  justifyContent: \"space-evenly\",\n                  padding: 5,\n                  alignSelf: \"flex-start\",\n                }}\n              >\n                <View\n                  style={{\n                    width: \"95%\",\n                    alignSelf: \"center\",\n                    height: 1,\n                    backgroundColor: \"#C0C0C0\",\n                    marginTop: 10,\n                    alignItems: \"center\",\n                  }}\n                ></View>\n                <Text\n                  style={{\n                    color: \"#6F6F6F\",\n                    fontSize: 15,\n                    marginTop: 10,\n                    marginLeft: 0,\n                    marginBottom: 5,\n                  }}\n                >\n                  By States\n                </Text>\n\n                <TouchableOpacity\n                  onPress={() => setaddrToggle(!addrToggle)}\n                  style={{\n                    flexDirection: \"row\",\n                    backgroundColor: \"#d6d9ff\",\n                    borderWidth: 2,\n                    borderColor: \"#7b42ff\",\n                    borderRadius: 10,\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    padding: 5,\n                    minWidth: \"30%\",\n                    marginBottom: 10,\n                  }}\n                >\n                  <Text style={{ fontSize: 15 }}>\n                    {addr ? addr : \"All States\"}\n                  </Text>\n                  <AntDesign name=\"down\" size={12} />\n                </TouchableOpacity>\n                {addrToggle ? (\n                  <View style={{ marginTop: 10 }}>\n                    {States.map((item) => {\n                      return (\n                        <View key={item.code} style={styles.buttonnewContainer}>\n                          <TouchableOpacity\n                            style={styles.circle}\n                            onPress={() => {\n                              setfilteractive(true);\n                              setaddr(item.name);\n                              setaddrToggle(false);\n                              // toggler(item.key);\n                              // let a = item.text;\n                              // let b = filteredFarmers.filter((i) => {\n                              //   return i.gender.toLowerCase() === a.toLowerCase();\n                              // });\n                              // console.log(item.text);\n                              // console.log(a);\n                              // console.log(b);\n                            }}\n                          >\n                            {addr === item.name && (\n                              <View style={styles.checkedCircle} />\n                            )}\n                          </TouchableOpacity>\n                          <Text style={{ fontSize: 16, marginLeft: 5 }}>\n                            {item.name}\n                          </Text>\n                        </View>\n                      );\n                    })}\n                  </View>\n                ) : null}\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  marginTop: 10,\n                  flexDirection: \"column\",\n                  alignItems: \"flex-start\",\n                  justifyContent: \"space-evenly\",\n                  padding: 5,\n                  alignSelf: \"flex-start\",\n                }}\n              >\n                <View\n                  style={{\n                    width: \"95%\",\n                    alignSelf: \"center\",\n                    height: 1,\n                    backgroundColor: \"#C0C0C0\",\n                    marginTop: 10,\n                    alignItems: \"center\",\n                  }}\n                ></View>\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-evenly\",\n                  top: 5,\n                }}\n              >\n                <TouchableOpacity\n                  style={{\n                    width: 120,\n                    height: 50,\n                    backgroundColor: \"#fff\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n\n                    borderRadius: 10,\n                    borderColor: \"#3A48ED\",\n                    borderWidth: 2,\n                  }}\n                  onPress={() => {\n                    setmerge(false),\n                      setfilteractive(false),\n                      onCloseFilter(),\n                      setval(\"\"),\n                      setaddr(\"\");\n                    sethideFAB(!hideFAB);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 20,\n                      color: \"#3A48ED\",\n                    }}\n                  >\n                    Reset\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={{\n                    width: 120,\n                    height: 50,\n                    backgroundColor: \"#3ECF8E\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n\n                    borderRadius: 10,\n                    borderColor: \"#3ECF8E\",\n                    borderWidth: 2,\n                  }}\n                  onPress={() => {\n                    // !merge && filteractive ? setmerge(false) : setmerge(true);\n                    (!val && addr && !merge) || (val && !addr && !merge)\n                      ? setfilteractive(true)\n                      : !val && !addr && merge\n                      ? (setmerge(true), setfilteractive(false))\n                      : setmerge(true);\n                    onCloseFilter();\n                    sethideFAB(false);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 20,\n                      color: \"#fff\",\n                    }}\n                  >\n                    Apply\n                  </Text>\n                </TouchableOpacity>\n              </View>\n              <View\n                style={{\n                  height: 60,\n                  width: \"100%\",\n                  backgroundColor: \"#fff\",\n                  marginTop: 10,\n                }}\n              ></View>\n            </Modalize>\n          </View>\n        </View>\n      </View>\n      {blur ? (\n        <View\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n            position: \"absolute\",\n          }}\n        >\n          <BlurView\n            tint=\"dark\"\n            intensity={40}\n            style={[StyleSheet.absoluteFill, styles.nonBlurredContent]}\n          >\n            <View\n              style={{\n                marginTop: 20,\n                padding: 5,\n                height: \"100%\",\n              }}\n            >\n              <View\n                style={{\n                  backgroundColor: \"#fff\",\n                  height: 55,\n                  width: \"97%\",\n                  alignSelf: \"center\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  borderRadius: 8,\n                  padding: 20,\n                  shadowColor: \"#98A0FF\",\n                  shadowOffset: {\n                    width: 0,\n                    height: 4,\n                  },\n                  shadowOpacity: 0.32,\n                  shadowRadius: 5.46,\n\n                  elevation: 9,\n                }}\n              >\n                {/* <TextInput style={{height:40, backgroundColor:\"white\", width:\"75%\", padding:5, outline}} placeholder=\"Search for crops...\" autoFocus={true}/> */}\n                <TextInput\n                  style={\n                    Platform.OS === \"web\" && {\n                      outlineColor: \"#fff\",\n                      height: 40,\n                      backgroundColor: \"white\",\n                      width: \"95%\",\n                      padding: 5,\n                      fontSize: 20,\n                    }\n                  }\n                  placeholder=\"Search for Crops\"\n                  value={term}\n                  autoFocus={true}\n                  editable={blur}\n                  onChangeText={(text) => {\n                    console.log(text), setterm(text), setSearch(text);\n                  }}\n                />\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  {term ? (\n                    <TouchableOpacity\n                      onPress={() => {\n                        setterm(\"\");\n                      }}\n                    >\n                      <View\n                        style={{\n                          width: 25,\n                          height: 25,\n                          borderWidth: 2,\n                          borderColor: \"#A1C7FF\",\n                          alignItems: \"center\",\n                          alignSelf: \"flex-end\",\n                          justifyContent: \"center\",\n                          right: -10,\n                          backgroundColor: \"#A1C7FF\",\n                          borderRadius: 25,\n                        }}\n                      >\n                        <AntDesign name=\"close\" size={20} color=\"#3A48ED\" />\n                      </View>\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n              </View>\n              <View style={{ flex: 1, alignItems: \"center\", width: \"100%\" }}>\n                {/* <TouchableOpacity style={{width:\"100%\", height:30, alignItems:\"center\", justifyContent:\"center\", backgroundColor:\"transparent\"}} onPress={()=>{setplacer(true),setblur(!blur)}}>\n<Text>{term}</Text>\n</TouchableOpacity> */}\n                {term !== null ? (\n                  <View\n                    style={{\n                      width: \"97%\",\n                      alignItems: \"center\",\n                      backgroundColor: \"#fff\",\n                      borderRadius: 10,\n                      margin: 5,\n                    }}\n                  >\n                    <View\n                      style={{\n                        width: \"100%\",\n                        alignItems: \"flex-start\",\n                        padding: 5,\n                        marginBottom: 10,\n                        marginTop: 5,\n                      }}\n                    >\n                      {filteredCrops.length > 0 ? (\n                        <Text\n                          style={{\n                            marginLeft: 20,\n                            fontSize: 15,\n                            fontWeight: \"600\",\n                          }}\n                        >\n                          Available Crops\n                        </Text>\n                      ) : (\n                        <Text\n                          style={{\n                            marginLeft: 20,\n                            fontSize: 15,\n                            fontWeight: \"600\",\n                            alignSelf: \"center\",\n                          }}\n                        >\n                          🤔 ....That seems to be missing...\n                        </Text>\n                      )}\n                    </View>\n\n                    {filteredCrops.map((item, cIndex) => {\n                      return (\n                        <View\n                          style={{\n                            width:\n                              winWidth > 768 ? winWidth - 80 : winWidth - 50,\n                            height: 45,\n                            padding: 5,\n                            borderRadius: 8,\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                            backgroundColor: \"#fff\",\n                            margin: 2,\n                          }}\n                        >\n                          <TouchableOpacity\n                            onPress={() => {\n                              setplacer(true),\n                                setblur(!blur),\n                                setterm(item.name);\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                              }}\n                            >\n                              <Image\n                                source={{ uri: item.image }}\n                                style={{\n                                  height: 35,\n                                  width: 35,\n                                  borderColor: \"green\",\n                                  borderWidth: 1,\n                                  borderRadius: 35,\n                                }}\n                              />\n                              <Text style={{ fontSize: 20 }}> {item.name}</Text>\n                              <Text\n                                style={{\n                                  fontSize: 15,\n                                  alignSelf: \"center\",\n                                  color: \"#989898\",\n                                }}\n                              >\n                                {\" \"}\n                                in{\" \"}\n                              </Text>\n                              <Text style={{ fontSize: 15 }}>{item.type}</Text>\n                            </View>\n                          </TouchableOpacity>\n                          <TouchableOpacity\n                            style={{\n                              backgroundColor: \"#3ECF8E\",\n                              height: \"100%\",\n                              alignItems: \"center\",\n                              justifyContent: \"center\",\n                              padding: 5,\n                              borderRadius: 5,\n                              alignSelf: \"flex-end\",\n                            }}\n                            onPress={() => {\n                              setparent(!parent),\n                                setterm(item.type),\n                                setplacer(!placer),\n                                setblur(!blur);\n                            }} //true\n                          >\n                            <Text style={{ fontSize: 15, color: \"#fff\" }}>\n                              View {item.type}s\n                            </Text>\n                          </TouchableOpacity>\n                        </View>\n                      );\n                    })}\n                  </View>\n                ) : null}\n              </View>\n            </View>\n          </BlurView>\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default Search;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginRight: 5,\n  },\n  buttonnewContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    marginRight: 5,\n    marginTop: 2,\n  },\n\n  circle: {\n    height: 30,\n    width: 30,\n    borderRadius: 15,\n    borderWidth: 1,\n    borderColor: \"#3A48ED\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  checkedCircle: {\n    width: 15,\n    height: 15,\n    borderRadius: 7,\n    backgroundColor: \"#3A48ED\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { Button, StyleSheet, Text, View, Image } from \"react-native\";\n\nconst Welcome = ({ navigation }) => {\n  setTimeout(() => {\n    navigation.replace(\"Home\");\n  }, 2000);\n\n  return (\n    <View style={[styles.container, { backgroundColor: \"#fff\" }]}>\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <Image\n          source={{ uri: require(\"../../assets/icon1.png\") }}\n          style={{ height: 50, width: 50 }}\n        />\n        <Text style={{ color: \"#346beb\", fontSize: 34 }}>Krisearch</Text>\n      </View>\n\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n};\n\nexport default Welcome;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\nimport Header from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\n\nconst Profile = ({ navigation }) => {\n  return (\n    <View style={styles.container}>\n      <View style={{ marginTop: 40, width: \"100%\", elevation: 1000 }}>\n        <Header onTap={() => navigation.navigate(\"Search\")} />\n      </View>\n\n      <View\n        style={{\n          flexDirection: winWidth > 767 ? \"row\" : \"column\",\n          width: \"100%\",\n          backgroundColor: \"pink\",\n          height: \"100%\",\n        }}\n      >\n        {winWidth > 767 ? (\n          <View\n            style={{\n              backgroundColor: \"#8cbaff\",\n              width: \"30%\",\n              height: \"100%\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Button\n              title=\"GO to Home\"\n              onPress={() => navigation.navigate(\"Home\")}\n            />\n          </View>\n        ) : null}\n\n        <View\n          style={{\n            backgroundColor: \"#deebff\",\n            width: winWidth > 767 ? \"70%\" : \"100%\",\n            height: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Button\n            title=\"GO to Search\"\n            onPress={() => navigation.navigate(\"Search\")}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Profile;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import React from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { winWidth, winHeight } from \"./src/utils/window\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Home from \"./src/screens/HomeScreen\";\nimport Search from \"./src/screens/SearchScreen\";\nimport Welcome from \"./src/screens/SplashScreen\";\nimport Header from \"../claro_krisearch/src/components/header\";\nimport Profile from \"./src/screens/ProfileScreen\";\nimport { Feather } from \"@expo/vector-icons\";\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction MyTabBar({ state, descriptors, navigation }) {\n  const focusedOptions = descriptors[state.routes[state.index].key].options;\n\n  if (focusedOptions.tabBarVisible === false) {\n    return null;\n  }\n\n  return (\n    <KeyboardAvoidingView>\n      <View style={{ flexDirection: \"row\" }}>\n        {state.routes.map((route, index) => {\n          const { options } = descriptors[route.key];\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const isFocused = state.index === index;\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: \"tabPress\",\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!isFocused && !event.defaultPrevented) {\n              navigation.navigate(route.name);\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: \"tabLongPress\",\n              target: route.key,\n            });\n          };\n\n          if (index === 1) {\n            return (\n              <TouchableOpacity\n                accessibilityRole=\"button\"\n                accessibilityState={isFocused ? { selected: true } : {}}\n                accessibilityLabel={options.tabBarAccessibilityLabel}\n                testID={options.tabBarTestID}\n                onPress={onPress}\n                onLongPress={onLongPress}\n                style={{\n                  flex: 1,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: 65,\n                  width: 65,\n                  backgroundColor: isFocused ? \"#346beb\" : \"#fff\",\n                  position: \"absolute\",\n                  left: winWidth / 2 - 30,\n                  bottom: 15,\n                  margin: 5,\n                  borderRadius: 35,\n                  borderWidth: 2,\n                  borderColor: isFocused ? \"#fff\" : \"#deebff\",\n                }}\n              >\n                {/* <Text style={{ color: isFocused ? \"#673ab7\" : \"#222\" }}>\n                {label}\n              </Text> */}\n                <Feather\n                  name=\"search\"\n                  size={30}\n                  color={isFocused ? \"#fff\" : \"#346beb\"}\n                />\n              </TouchableOpacity>\n            );\n          }\n\n          return (\n            <TouchableOpacity\n              accessibilityRole=\"button\"\n              accessibilityState={isFocused ? { selected: true } : {}}\n              accessibilityLabel={options.tabBarAccessibilityLabel}\n              testID={options.tabBarTestID}\n              onPress={onPress}\n              onLongPress={onLongPress}\n              style={{\n                flex: 1,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: 56,\n              }}\n            >\n              {/* <Text style={{ color: isFocused ? \"#673ab7\" : \"#222\" }}>\n              {label}\n            </Text> */}\n\n              <View>\n                {index == 0 ? (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      borderWidth: 2,\n                      backgroundColor: isFocused ? \"#deebff\" : \"transparent\",\n                      borderColor: isFocused ? \"#deebff\" : \"transparent\",\n                      width: \"110%\",\n                      borderRadius: 20,\n                      padding: 5,\n                    }}\n                  >\n                    <Feather\n                      name=\"home\"\n                      size={20}\n                      color={isFocused ? \"#346beb\" : \"#222\"}\n                    />\n                    {isFocused ? (\n                      <Text\n                        style={{\n                          fontSize: 16,\n                          marginLeft: 15,\n                          color: \"#346beb\",\n                        }}\n                      >\n                        {label}\n                      </Text>\n                    ) : null}\n                  </View>\n                ) : (\n                  <View>\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        borderWidth: 2,\n                        backgroundColor: isFocused ? \"#deebff\" : \"transparent\",\n                        borderColor: isFocused ? \"#deebff\" : \"transparent\",\n                        width: \"110%\",\n                        borderRadius: 20,\n                        padding: 5,\n                      }}\n                    >\n                      <Feather\n                        name=\"user\"\n                        size={20}\n                        color={isFocused ? \"#346beb\" : \"#222\"}\n                      />\n                      {isFocused ? (\n                        <Text\n                          style={{\n                            fontSize: 16,\n                            marginLeft: 15,\n                            color: \"#346beb\",\n                          }}\n                        >\n                          {label}\n                        </Text>\n                      ) : null}\n                    </View>\n                  </View>\n                )}\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      {winWidth > 767 ? (\n        <Stack.Navigator\n          screenOptions={{\n            headerStyle: {\n              backgroundColor: \"#346beb\",\n            },\n            headerTintColor: \"#fff\",\n            headerTitleStyle: {\n              fontWeight: \"bold\",\n            },\n            headerShown: false,\n          }}\n        >\n          <Stack.Screen\n            name=\"Welcome\"\n            component={Welcome}\n            options={{ headerShown: false }}\n          />\n          <Stack.Screen\n            name=\"Home\"\n            component={Home}\n            options={{\n              title: \"Krisearch\",\n            }}\n          />\n          <Stack.Screen name=\"Search\" component={Search} />\n          <Stack.Screen\n            name=\"Profile\"\n            component={Profile}\n            options={{\n              title: \"Profile\",\n            }}\n          />\n        </Stack.Navigator>\n      ) : (\n        <Tab.Navigator\n          tabBar={(props) => <MyTabBar {...props} />}\n          tabBarOptions={{\n            keyboardHidesTabBar: true,\n          }}\n        >\n          <Tab.Screen name=\"Home\" component={Home} />\n          <Tab.Screen name=\"Search\" component={Search} />\n          <Tab.Screen name=\"Profile\" component={Profile} />\n        </Tab.Navigator>\n      )}\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/newicon2.43b8ac0c.png\";","module.exports = __webpack_public_path__ + \"static/media/newlogo.a840e510.png\";","module.exports = __webpack_public_path__ + \"static/media/icon1.0fd4d1c9.png\";"],"sourceRoot":""}