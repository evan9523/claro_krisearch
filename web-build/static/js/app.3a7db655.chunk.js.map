{"version":3,"sources":["src/utils/window.ts","src/components/header.tsx","src/utils/getSmallString.ts","src/components/Card.tsx","src/utils/hideNumber.ts","src/screens/HomeScreen.tsx","src/components/SearchBar.tsx","src/components/ScrollHeader.tsx","src/screens/SearchScreen.tsx","src/screens/SplashScreen.tsx","src/screens/ProfileScreen.tsx","App.tsx","assets/newlogo.png","assets/icon1.png"],"names":["winHeight","Dimensions","get","height","winWidth","width","windowWidth","Header","props","onTap","View","style","styles","header","Text","headerText","TextInput","fontSize","backgroundColor","outlineColor","borderRadius","padding","marginTop","placeholder","onFocus","StyleSheet","create","flexDirection","alignItems","justifyContent","color","fontWeight","getSmallString","str","length","substring","Card","name","avatar","crop","phone","address","onPress","cropAvatar","isCrop","TouchableOpacity","borderWidth","borderColor","margin","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","Image","source","uri","Entypo","size","top","hideNumber","a","toString","split","console","log","splice","Home","navigation","useState","farmer","setfarmer","modalizeRef","useRef","onClose","current","close","container","navigate","alignSelf","Button","title","SimpleLineIcons","ScrollView","showsVerticalScrollIndicator","marginLeft","flexWrap","Farmers","map","item","cIndex","key","id","open","onOpen","image","ref","modalHeight","threshold","closeOnOverlayTap","mod","marginRight","Feather","Crops","cropName","toLowerCase","b","localeCompare","harvestDate","area","quantity","alert","FontAwesome5","FontAwesome","flex","SearchBar","visible","onHit","tapper","holderValue","isFocused","newdata","Platform","OS","autoFocus","editable","onChangeText","text","setting","typer","Data","push","type","i","includes","ScrollHeader","headerTap","scrolled","headHolder","require","Search","blur","setblur","term","setterm","placer","setplacer","val","setval","addr","setaddr","hideFAB","sethideFAB","parent","setparent","filteractive","setfilteractive","addrToggle","setaddrToggle","merge","setmerge","filteredCrops","filter","toLocaleLowerCase","filteredParents","filteredFarmers","genderFilter","gender","addrFilter","flat","modalizeFilterRef","mergeResult","onOpenfilter","onCloseFilter","AntDesign","bounces","modalStyle","buttonContainer","circle","checkedCircle","minWidth","States","code","buttonnewContainer","position","tint","intensity","absoluteFill","nonBlurredContent","value","dynamic","setSearch","right","Welcome","setTimeout","replace","StatusBar","Profile","Stack","createStackNavigator","Tab","createBottomTabNavigator","MyTabBar","state","descriptors","routes","index","options","tabBarVisible","KeyboardAvoidingView","route","label","undefined","tabBarLabel","event","emit","target","canPreventDefault","defaultPrevented","onLongPress","accessibilityRole","accessibilityState","selected","accessibilityLabel","tabBarAccessibilityLabel","testID","tabBarTestID","left","bottom","App","NavigationContainer","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","headerShown","initialRouteName","Screen","component","tabBar","module","exports"],"mappings":"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","file":"static/js/app.3a7db655.chunk.js","sourcesContent":["import { Dimensions } from 'react-native';\nexport const winHeight = Dimensions.get(\"window\").height;\n\nexport const winWidth = Dimensions.get(\"window\").width;\n","import React from \"react\";\nimport {\n  Button,\n  TextInput,\n  Dimensions,\n  StyleSheet,\n  Text,\n  View,\n} from \"react-native\";\nimport { winWidth } from \"../utils/window\";\n\nconst windowHeight = Dimensions.get(\"screen\").height;\nconst windowWidth = Dimensions.get(\"screen\").width;\n\nexport interface HeaderProps {\n  onTap(): any;\n}\n\nconst Header = (props: HeaderProps) => {\n  const { onTap } = props;\n  return (\n    <View style={styles.header}>\n      <Text style={styles.headerText}>Krisearch</Text>\n      {windowWidth > 767 ? (\n        <TextInput\n          style={{\n            width: \"40%\",\n            height: 40,\n            fontSize: 20,\n            backgroundColor: \"#fff\",\n            outlineColor: \"#fff\",\n            borderRadius: 5,\n            padding: 5,\n            marginTop: 10,\n          }}\n          placeholder=\"Search for Crops\"\n          onFocus={onTap}\n        />\n      ) : null}\n    </View>\n  );\n};\n\nexport default Header;\n\nconst styles = StyleSheet.create({\n  header: {\n    width: \"100%\",\n    height: winWidth > 767 ? 60 : 40,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    backgroundColor: \"#346beb\",\n    padding: 5,\n  },\n  headerText: {\n    fontSize: 20,\n    color: \"#fff\",\n    fontWeight: \"700\",\n  },\n});\n","const getSmallString=(str : string)=>{\n    if(str.length>20){\n        str =str.substring(0,19)+\"...\";\n        return str;\n    }\n    else{\n        return str\n    }\n}\n\nexport default getSmallString","import { Entypo, MaterialIcons, SimpleLineIcons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Dimensions,\n  Image,\n} from \"react-native\";\nimport getSmallString from \"../utils/getSmallString\";\n\nexport interface CardProps {\n  name: string;\n  avatar?: string;\n  crop?: string;\n  phone?: number;\n  address?: string;\n  onPress: any;\n  cropAvatar?: string;\n  isCrop?: boolean;\n}\n\nexport default function Card(props: CardProps) {\n  const {\n    name,\n    avatar,\n    crop,\n    phone,\n    address,\n    onPress,\n    cropAvatar,\n    isCrop,\n  } = props;\n\n  const windowWidth = Dimensions.get(\"window\").width;\n  const cardWidth = windowWidth / 2 - 30;\n\n  return (\n    <TouchableOpacity onPress={() => onPress()}>\n      <View\n        style={\n          windowWidth > 767\n            ? {\n                width: 200,\n                height: 185,\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderColor: \"#fff\",\n                borderRadius: 10,\n                alignItems: \"center\",\n                margin: 5,\n                marginBottom: 5,\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 3,\n                },\n                shadowOpacity: 0.15,\n                shadowRadius: 2.22,\n\n                elevation: 3,\n              }\n            : {\n                width: windowWidth * 0.45,\n                height: 185,\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderColor: \"#fff\",\n                borderRadius: 10,\n                alignItems: \"center\",\n                margin: 6,\n\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 3,\n                },\n                shadowOpacity: 0.15,\n                shadowRadius: 2.22,\n\n                elevation: 3,\n              }\n        }\n      >\n        <Image\n          source={{ uri: avatar }}\n          style={\n            !isCrop\n              ? {\n                  width: 100,\n                  height: 100,\n                  borderWidth: 1,\n                  borderColor: \"#fff\",\n                  borderRadius: 100,\n                }\n              : {\n                  width: 140,\n                  height: 140,\n                  borderWidth: 1,\n                  borderColor: \"#fff\",\n                  borderRadius: 100,\n                }\n          }\n        />\n        <Text style={{ fontWeight: \"500\", marginTop: 10 }}>\n          {getSmallString(name)}\n        </Text>\n\n        {!isCrop ? (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-evenly\",\n              alignItems: \"center\",\n              marginTop: 10,\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Image\n                source={{ uri: cropAvatar }}\n                style={{\n                  height: 15,\n                  width: 15,\n                  borderColor: \"green\",\n                  borderWidth: 1,\n                  borderRadius: 15,\n                }}\n              />\n              <Text> {crop}</Text>\n            </View>\n            <Entypo name=\"dot-single\" size={15} style={{ top: 10 }} />\n            <View>\n              <Text>{address}</Text>\n            </View>\n          </View>\n        ) : null}\n\n        {!isCrop ? (\n          <View>\n            <Text>{phone}</Text>\n          </View>\n        ) : null}\n      </View>\n    </TouchableOpacity>\n  );\n}\n","const hideNumber = (phone : number)=>{\n    var a=[];\n    var b;\n    var c;\n    var newString=[];\n    let i=0;\n\n    a = phone.toString().split('');\n    console.log(a)\n    a.splice(1,0,\"X\");\n    a.splice(3,2,\"X\");\n    a.splice(6,5,\"X\");\n    a.splice(1,0,\"X\");\n   \n    console.log('New A'+a)\n    return a;\n\n    \n\n\n}\n\nexport default hideNumber","import { StatusBar } from \"expo-status-bar\";\nimport React, { useRef, useState } from \"react\";\nimport {\n  Button,\n  Dimensions,\n  ScrollView,\n  StyleSheet,\n  Text,\n  Image,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Header, { HeaderProps } from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport Farmers from \"../data/farmers.json\";\nimport Crops from \"../data/items.json\";\nimport { Modalize } from \"react-native-modalize\";\nimport Card from \"../components/Card\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  FontAwesome5,\n  FontAwesome,\n} from \"@expo/vector-icons\";\nimport hideNumber from \"../utils/hideNumber\";\nimport getSmallString from \"../utils/getSmallString\";\n\nconst Home = ({ navigation }) => {\n  const [farmer, setfarmer] = useState(0);\n  const modalizeRef = useRef<Modalize>(null);\n\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onClose = () => {\n    modalizeRef.current?.close();\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={{ marginTop: 40, width: \"100%\", elevation: 1000 }}>\n        <Header onTap={() => navigation.navigate(\"Search\")} />\n      </View>\n\n      <View\n        style={{\n          flexDirection: winWidth > 767 ? \"row\" : \"column\",\n          width: \"100%\",\n\n          height: \"100%\",\n        }}\n      >\n        {winWidth > 767 ? (\n          <View\n            style={{\n              backgroundColor: \"#8cbaff\",\n              width: \"30%\",\n              height: \"100%\",\n              alignItems: \"center\",\n\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 24, alignSelf: \"flex-start\" }}>\n              Welcome to Krisearch\n            </Text>\n            <Text\n              style={{\n                fontSize: 24,\n                marginBottom: 20,\n                alignSelf: \"flex-start\",\n              }}\n            >\n              Lets start discovering Farmers\n            </Text>\n            <View\n              style={{\n                flexDirection: \"row\",\n                width: \"100%\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            >\n              <View style={{ marginTop: 20 }}>\n                <Button\n                  title=\"Go to Profile\"\n                  onPress={() => navigation.navigate(\"Profile\")}\n                />\n              </View>\n            </View>\n          </View>\n        ) : null}\n\n        <View\n          style={{\n            backgroundColor: \"#deebff\",\n            width: winWidth > 767 ? \"70%\" : \"100%\",\n            height: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          {/* <Button\n            title=\"GO to Search\"\n            onPress={() => navigation.navigate(\"Search\")}\n          /> */}\n          {winWidth < 767 ? (\n            <View\n              style={{\n                width: \"100%\",\n                height: 50,\n                backgroundColor: \"#346beb\",\n                padding: 7,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 4,\n                },\n                shadowOpacity: 0.32,\n                shadowRadius: 5.46,\n\n                elevation: 9,\n              }}\n            >\n              <TextInput\n                style={{\n                  width: \"80%\",\n                  height: 40,\n                  fontSize: 20,\n                  backgroundColor: \"#fff\",\n                  outlineColor: \"#346beb\",\n                  borderRadius: 10,\n                  padding: 5,\n                }}\n                placeholder=\"Search for Crops\"\n                onFocus={() => navigation.navigate(\"Search\")}\n              />\n              <View\n                style={{\n                  width: 35,\n                  height: 35,\n                  borderColor: \"#fff\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  backgroundColor: \"#deebff\",\n                  borderRadius: 35,\n                }}\n              >\n                <SimpleLineIcons name=\"magnifier\" size={20} color=\"#346beb\" />\n              </View>\n            </View>\n          ) : null}\n\n          <ScrollView showsVerticalScrollIndicator={false}>\n            <View\n              style={{\n                width: \"100%\",\n                flexDirection: \"row\",\n                alignItems: \"flex-start\",\n                justifyContent: \"flex-start\",\n                height: 40,\n                padding: 10,\n              }}\n            >\n              <SimpleLineIcons name=\"compass\" size={20} color=\"#346beb\" />\n              <Text style={{ fontSize: 20, marginLeft: 5 }}>Discover</Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                width: \"100%\",\n                flexWrap: \"wrap\",\n                alignItems: \"flex-start\",\n                justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                padding: winWidth > 767 ? 10 : 2,\n              }}\n            >\n              {Farmers.map((item, cIndex) => {\n                return (\n                  <Card\n                    key={item.id}\n                    name={item.name}\n                    avatar={item.avatar}\n                    phone={item.phone}\n                    address={item.address}\n                    crop={item.crop}\n                    onPress={() => {\n                      setfarmer(item.id), onOpen();\n                    }}\n                    cropAvatar={item.image}\n                  />\n                );\n              })}\n            </View>\n            {winWidth < 767 ? (\n              <View\n                style={{\n                  height: 60,\n                  width: \"100%\",\n                  backgroundColor: \"transparent\",\n                  marginTop: 10,\n                }}\n              ></View>\n            ) : null}\n          </ScrollView>\n          <Modalize\n            ref={modalizeRef}\n            modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.95}\n            threshold={100}\n            // modalStyle={\n            //   winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n            // }\n            closeOnOverlayTap={true}\n            mod\n          >\n            {Farmers.map((item, cIndex) => {\n              let kisan = farmer;\n              if (kisan == item.id) {\n                return (\n                  <View>\n                    <View\n                      style={{\n                        backgroundColor: \"#3A48ED\",\n                        width: \"100%\",\n                        height: 190,\n                        borderWidth: 1,\n                        top: -2,\n                        borderRadius: 15,\n                        borderColor: \"#3A48ED\",\n                        shadowColor: \"#000\",\n                        shadowOffset: {\n                          width: 0,\n                          height: 4,\n                        },\n                        shadowOpacity: 0.32,\n                        shadowRadius: 5.46,\n\n                        elevation: 9,\n                      }}\n                    >\n                      {/* <Text>{item.name}</Text>\n                        <Text>{item.address}</Text>\n                        <Image source={item.avatar} style={{height:50, width:50}}/>\n                   <Text>{farmer}</Text> */}\n                      <TouchableOpacity\n                        onPress={() => onClose()}\n                        style={{\n                          alignItems: \"center\",\n                          marginTop: 5,\n                          marginRight: 2,\n                          padding: 5,\n                          justifyContent: \"center\",\n                          alignSelf: \"flex-end\",\n                          backgroundColor: \"rgba(0,0,0,0.2)\",\n                          borderRadius: 10,\n                          height: 35,\n                          width: 70,\n                        }}\n                      >\n                        <View\n                          style={{\n                            flexDirection: \"row\",\n                            justifyContent: \"space-between\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <Text\n                            style={{\n                              fontSize: 15,\n                              fontWeight: 500,\n                              color: \"#fff\",\n                              marginRight: 5,\n                            }}\n                          >\n                            Close\n                          </Text>\n                          <SimpleLineIcons\n                            name=\"close\"\n                            size={15}\n                            color=\"#fff\"\n                            onPress={() => onClose()}\n                          />\n                        </View>\n                      </TouchableOpacity>\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          alignItems: \"center\",\n                          justifyContent: \"space-between\",\n                          padding: 2,\n                          top: -10,\n                        }}\n                      >\n                        <View\n                          style={{ width: \"40%\", height: \"100%\", padding: 5 }}\n                        >\n                          <Image\n                            source={{ uri: item.avatar }}\n                            style={{\n                              height: 120,\n                              width: 120,\n                              borderRadius: 120,\n                              borderColor: \"#fff\",\n                              borderWidth: 2,\n                            }}\n                          />\n                        </View>\n                        <View\n                          style={{\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-evenly\",\n                            width: \"60%\",\n                            height: \"100%\",\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"column\",\n                              alignItems: \"flex-start\",\n                              width: \"100%\",\n                              height: \"100%\",\n                              justifyContent: \"space-evenly\",\n                            }}\n                          >\n                            <View style={{ flexDirection: \"row\" }}>\n                              <Feather name=\"user\" size={20} color=\"#fff\" />\n                              <Text\n                                style={{\n                                  fontSize: 20,\n                                  color: \"#fff\",\n                                  fontWeight: \"700\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                {getSmallString(item.name)}\n                              </Text>\n                            </View>\n                            <View style={{ flexDirection: \"row\" }}>\n                              <Feather name=\"map-pin\" size={20} color=\"#fff\" />\n                              <Text\n                                style={{\n                                  fontSize: 20,\n                                  color: \"#fff\",\n                                  fontWeight: \"700\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                {item.address}\n                              </Text>\n                            </View>\n                            <View style={{ flexDirection: \"row\" }}>\n                              <Feather name=\"user\" size={20} color=\"#fff\" />\n                              <Text\n                                style={{\n                                  fontSize: 20,\n                                  color: \"#fff\",\n                                  fontWeight: \"700\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                {hideNumber(item.phone)}\n                              </Text>\n                            </View>\n                          </View>\n                        </View>\n                      </View>\n                      <View style={{ top: -40 }}>\n                        <Text\n                          style={{\n                            marginTop: 60,\n                            padding: 5,\n                            fontWeight: \"500\",\n                            color: \"#6F6F6F\",\n                            fontSize: 20,\n                            marginLeft: 5,\n                          }}\n                        >\n                          Farming Details\n                        </Text>\n                        <View\n                          style={{\n                            width: \"95%\",\n                            alignSelf: \"center\",\n                            height: 1,\n                            backgroundColor: \"#C0C0C0\",\n                          }}\n                        ></View>\n                        <View\n                          style={{\n                            flexDirection: \"column\",\n                            marginTop: 10,\n                            padding: 10,\n                            height: 180,\n                            justifyContent: \"space-between\",\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                              width: \"100%\",\n                              justifyContent: \"space-between\",\n                              marginBottom: 10,\n                            }}\n                          >\n                            <View\n                              style={{ flexDirection: \"column\", width: \"50%\" }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"row\",\n                                  alignItems: \"center\",\n                                }}\n                              >\n                                <Entypo name=\"leaf\" size={20} color=\"#9F99FF\" />\n                                <Text\n                                  style={{\n                                    fontSize: 12,\n                                    color: \"#6F6F6F\",\n                                    fontWeight: \"600\",\n                                  }}\n                                >\n                                  Crop\n                                </Text>\n                              </View>\n                              <View>\n                                {Crops.map((cropName, cIndex) => {\n                                  let a = cropName.name.toLowerCase();\n                                  let b = item.crop?.toLowerCase();\n                                  let result = a.localeCompare(b);\n\n                                  if (a == b) {\n                                    return (\n                                      <View\n                                        style={{\n                                          flexDirection: \"row\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <Image\n                                          source={{ uri: cropName.image }}\n                                          style={{\n                                            height: 30,\n                                            width: 30,\n                                            borderWidth: 1,\n                                            borderRadius: 30,\n                                            borderColor: \"#3ECF8E\",\n                                          }}\n                                        />\n                                        <Text\n                                          style={{\n                                            fontSize: 30,\n                                            marginLeft: 5,\n                                          }}\n                                        >\n                                          {cropName.name}\n                                        </Text>\n                                      </View>\n                                    );\n                                  } else {\n                                    null;\n                                  }\n                                })}\n                              </View>\n                            </View>\n\n                            <View\n                              style={{\n                                flexDirection: \"column\",\n                                width: \"50%\",\n                                alignItems: \"flex-end\",\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"row\",\n                                  alignItems: \"center\",\n                                }}\n                              >\n                                <SimpleLineIcons\n                                  name=\"calendar\"\n                                  size={20}\n                                  color=\"#9F99FF\"\n                                />\n                                <Text\n                                  style={{\n                                    fontSize: 12,\n                                    color: \"#6F6F6F\",\n                                    marginLeft: 5,\n                                    fontWeight: \"600\",\n                                  }}\n                                >\n                                  Harvest Date\n                                </Text>\n                              </View>\n                              <View>\n                                <Text style={{ fontSize: 30, marginLeft: 5 }}>\n                                  {item.harvestDate}\n                                </Text>\n                              </View>\n                            </View>\n                          </View>\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                              width: \"100%\",\n                              justifyContent: \"space-between\",\n                              marginTop: 5,\n                            }}\n                          >\n                            <View\n                              style={{ flexDirection: \"column\", width: \"50%\" }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"row\",\n                                  alignItems: \"center\",\n                                }}\n                              >\n                                <SimpleLineIcons\n                                  name=\"size-fullscreen\"\n                                  size={20}\n                                  color=\"#9F99FF\"\n                                />\n                                <Text\n                                  style={{\n                                    fontSize: 12,\n                                    color: \"#6F6F6F\",\n                                    fontWeight: \"600\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  Farming Area\n                                </Text>\n                              </View>\n                              <View>\n                                <Text style={{ fontSize: 30 }}>\n                                  {item.area} Kattha\n                                </Text>\n                              </View>\n                            </View>\n\n                            <View\n                              style={{\n                                flexDirection: \"column\",\n                                width: \"50%\",\n                                alignItems: \"flex-end\",\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"row\",\n                                  alignItems: \"center\",\n                                }}\n                              >\n                                <SimpleLineIcons\n                                  name=\"speedometer\"\n                                  size={20}\n                                  color=\"#9F99FF\"\n                                />\n                                <Text\n                                  style={{\n                                    fontSize: 12,\n                                    color: \"#6F6F6F\",\n                                    marginLeft: 5,\n                                    fontWeight: \"600\",\n                                  }}\n                                >\n                                  Quantity\n                                </Text>\n                              </View>\n                              <View>\n                                <Text style={{ fontSize: 30, marginLeft: 5 }}>\n                                  {item.quantity} quintal\n                                </Text>\n                              </View>\n                            </View>\n                          </View>\n                          <View></View>\n                        </View>\n                        <View\n                          style={{\n                            width: \"95%\",\n                            alignSelf: \"center\",\n                            height: 1,\n                            backgroundColor: \"#C0C0C0\",\n                            marginTop: 10,\n                          }}\n                        />\n                      </View>\n                      <View\n                        style={{\n                          width: \"100%\",\n                          flexDirection: \"column\",\n                          top: -29,\n                          alignItems: \"center\",\n                        }}\n                      >\n                        <Text\n                          style={{\n                            fontSize: 15,\n                            color: \"#808080\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          Coming soon\n                        </Text>\n                        <View\n                          style={{\n                            width: \"100%\",\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-evenly\",\n                            top: 5,\n                          }}\n                        >\n                          <TouchableOpacity\n                            style={{\n                              width: 120,\n                              height: 50,\n                              backgroundColor: \"#A9A9A9\",\n                              alignItems: \"center\",\n                              justifyContent: \"center\",\n                              flexDirection: \"row\",\n                              borderRadius: 10,\n                            }}\n                            onPress={() =>\n                              alert(\n                                \"Click to chat feature helps you connect directly to this farmer in one click. Feature Coming soon !\"\n                              )\n                            }\n                          >\n                            <FontAwesome5\n                              name=\"whatsapp\"\n                              size={25}\n                              color=\"#fff\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 20,\n                                color: \"#fff\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              Chat\n                            </Text>\n                          </TouchableOpacity>\n                          <TouchableOpacity\n                            style={{\n                              width: 120,\n                              height: 50,\n                              backgroundColor: \"#A9A9A9\",\n                              alignItems: \"center\",\n                              justifyContent: \"center\",\n                              flexDirection: \"row\",\n                              borderRadius: 10,\n                            }}\n                            onPress={() => alert(\"Feature Coming soon !\")}\n                          >\n                            <Text\n                              style={{\n                                fontSize: 20,\n                                color: \"#fff\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              Buy\n                            </Text>\n                          </TouchableOpacity>\n                          <TouchableOpacity\n                            style={{\n                              width: 120,\n                              height: 50,\n                              backgroundColor: \"#fff\",\n                              alignItems: \"center\",\n                              justifyContent: \"center\",\n                              flexDirection: \"row\",\n                              borderRadius: 10,\n                              borderColor: \"#A9A9A9\",\n                              borderWidth: 2,\n                            }}\n                            onPress={() =>\n                              alert(\n                                \"Support the farmer by any kind. Feature Coming Soon !\"\n                              )\n                            }\n                          >\n                            <FontAwesome\n                              name=\"handshake-o\"\n                              size={25}\n                              color=\"#A9A9A9\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 20,\n                                color: \"#A9A9A9\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              Support\n                            </Text>\n                          </TouchableOpacity>\n                        </View>\n                      </View>\n                    </View>\n                  </View>\n                );\n              } else {\n                null;\n              }\n            })}\n          </Modalize>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Home;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import { SimpleLineIcons } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Platform,\n  FlatList,\n  ActivityIndicator,\n} from \"react-native\";\nimport Data from \"../data/items.json\";\nimport Farmer from \"../data/farmers.json\";\n\nexport interface SearchProps {\n  visible?: boolean;\n  tapper?: boolean;\n  onHit(): any;\n  isFocused?: boolean;\n  holderValue?: string;\n}\n\nfunction SearchBar(props: SearchProps) {\n  const { visible, onHit, tapper, isFocused, holderValue } = props;\n\n  const [sugg, setsugg] = useState(false);\n  const newdata = [];\n\n  function renderAll(a = []) {\n    for (let i = 0; i < a.length; i++) {\n      return (\n        <View style={{ width: \"100%\", height: 50, backgroundColor: \"yellow\" }}>\n          <Text>{a[i]}</Text>\n        </View>\n      );\n    }\n  }\n\n  return (\n    <View\n      style={{\n        backgroundColor: tapper ? \"#fff\" : \"transparent\",\n      }}\n    >\n      <View\n        style={{\n          backgroundColor: \"#fff\",\n          height: 40,\n          width: \"100%\",\n          alignSelf: \"center\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          borderRadius: 8,\n          padding: 5,\n          shadowColor: \"#98A0FF\",\n          shadowOffset: {\n            width: 0,\n            height: 4,\n          },\n          shadowOpacity: 0.32,\n          shadowRadius: 5.46,\n\n          elevation: 9,\n        }}\n      >\n        {/* <TextInput style={{height:40, backgroundColor:\"white\", width:\"75%\", padding:5, outline}} placeholder=\"Search for crops...\" autoFocus={true}/> */}\n        <TextInput\n          style={\n            Platform.OS === \"web\" && {\n              outlineColor: \"#fff\",\n              height: 40,\n              backgroundColor: \"white\",\n              width: \"85%\",\n              padding: 5,\n              fontSize: 20,\n            }\n          }\n          onFocus={onHit}\n          placeholder={holderValue}\n          autoFocus={visible}\n          editable={visible}\n          onChangeText={(text) => {\n            let a = text.toLowerCase();\n            console.log(a);\n            var setting = [];\n            var typer = [];\n\n            {\n              {\n                Data.map((item, cIndex) => setting.push(item.name));\n              }\n            }\n\n            {\n              {\n                Data.map((item, cIndex) => typer.push(item.type));\n              }\n            }\n            console.log(setting);\n            for (let i = 0; i < setting.length; i++) {\n              var b = setting[i].toLowerCase();\n              var c = typer[i].toLowerCase();\n              var result = b.includes(a);\n\n              if (result == true) {\n                newdata.push(setting[i]);\n                console.log(\"New Data : \" + newdata);\n              } else {\n                null;\n              }\n            }\n          }}\n        />\n\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n          <TouchableOpacity>\n            <View\n              style={{\n                width: 35,\n                height: 35,\n                borderColor: \"#8790FF\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"#3A48ED\",\n                borderRadius: 35,\n              }}\n            >\n              <SimpleLineIcons name=\"magnifier\" size={20} color=\"#fff\" />\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n      <View></View>\n    </View>\n  );\n}\n\nexport default SearchBar;\n","import { SimpleLineIcons } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Platform,\n  Image,\n  Dimensions,\n} from \"react-native\";\nimport SearchBar from \"./SearchBar\";\n\nexport interface ScrollHeaderProps {\n  scrolled?: boolean;\n  visible?: boolean;\n  headerTap(): any;\n  headHolder?: string;\n}\n\nfunction ScrollHeader(props: ScrollHeaderProps) {\n  const [sugg, setsugg] = useState(null);\n  const { scrolled, visible, headerTap, headHolder } = props;\n  const windowWidth = Dimensions.get(\"window\").width;\n\n  return (\n    <View\n      style={{\n        width: \"100%\",\n        marginTop: windowWidth > 767 ? 5 : 2,\n        alignItems: \"center\",\n        alignSelf: \"center\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n        marginLeft: windowWidth > 800 ? 50 : 0,\n        padding: 5,\n      }}\n    >\n      {windowWidth < 767 ? (\n        <View style={{ alignItems: \"center\" }}>\n          <Image\n            source={require(\"../../assets/newlogo.png\")}\n            style={{ width: 100, height: 50 }}\n          />\n        </View>\n      ) : null}\n\n      <View style={{ marginTop: -5, width: \"100%\" }}>\n        <SearchBar onHit={headerTap} holderValue={headHolder} />\n      </View>\n    </View>\n  );\n}\n\nexport default ScrollHeader;\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useRef, useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n  TextInput,\n  Platform,\n  ScrollView,\n} from \"react-native\";\nimport Header from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport Farmers from \"../data/farmers.json\";\nimport Data from \"../data/items.json\";\nimport { Modalize } from \"react-native-modalize\";\nimport hideNumber from \"../utils/hideNumber\";\nimport getSmallString from \"../utils/getSmallString\";\nimport {\n  AntDesign,\n  Entypo,\n  Feather,\n  FontAwesome,\n  FontAwesome5,\n  SimpleLineIcons,\n} from \"@expo/vector-icons\";\nimport { BlurView } from \"expo-blur\";\nimport States from \"../data/states.json\";\nimport ScrollHeader from \"../components/ScrollHeader\";\nimport Card from \"../components/Card\";\n\nconst Search = ({ navigation }) => {\n  const [blur, setblur] = useState(true);\n  const [term, setterm] = useState(\"\");\n  const [placer, setplacer] = useState(false);\n  const [farmer, setfarmer] = useState(0);\n  const [openFilter, setopenFilter] = useState(false);\n  const [toggleCheckBox, setToggleCheckBox] = useState(false);\n  const [val, setval] = useState(\"\");\n  const [addr, setaddr] = useState(\"\");\n  const [genFilterfinal, setgenFilterfinal] = useState([]);\n  const [hideFAB, sethideFAB] = useState(false);\n  const [parent, setparent] = useState(false);\n  const [genderSelected, setgenderSelected] = useState(false);\n  const [filteractive, setfilteractive] = useState(false);\n  const [addrToggle, setaddrToggle] = useState(false);\n  const [merge, setmerge] = useState(false);\n\n  const setSearch = (text: string) => {\n    let dynamic = text.toLowerCase();\n    console.log(\"dynamic: \" + dynamic);\n  };\n\n  const filteredCrops = Data.filter((item) => {\n    return item.name.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredParents = Data.filter((item) => {\n    return item.type.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredFarmers = Farmers.filter((item) => {\n    return item.crop.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const genderFilter = filteredFarmers.filter((item) => {\n    if (val) {\n      return item.gender.toLocaleLowerCase() === val.toLowerCase();\n    }\n  });\n\n  const addrFilter = filteredFarmers.filter((item) => {\n    if (addr) {\n      return item.address.toLocaleLowerCase() === addr.toLowerCase();\n    }\n  });\n\n  const applyFilterFinal = [genderFilter, addrFilter].flat();\n\n  const modalizeRef = useRef<Modalize>(null);\n\n  const modalizeFilterRef = useRef<Modalize>(null);\n\n  const mergeResult = (genderFilter && addrFilter).filter((item) => {\n    // if (val && addr) {\n\n    // }\n    // if (addr && !val) {\n    //   return item.address.toLocaleLowerCase() === addr.toLowerCase();\n    // }\n    // if (val && !addr) {\n    //   return item.gender.toLocaleLowerCase() === val.toLowerCase();\n    // }\n    return (\n      item.gender.toLocaleLowerCase() === val.toLowerCase() &&\n      item.address.toLocaleLowerCase() === addr.toLowerCase()\n    );\n  });\n\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onClose = () => {\n    modalizeRef.current?.close();\n  };\n\n  const onOpenfilter = () => {\n    modalizeFilterRef.current?.open();\n  };\n\n  const onCloseFilter = () => {\n    modalizeFilterRef.current?.close();\n  };\n\n  const genderData = [\n    {\n      key: \"male\",\n      text: \"Male\",\n    },\n    {\n      key: \"female\",\n      text: \"Female\",\n    },\n    {\n      key: \"other\",\n      text: \"Other\",\n    },\n  ];\n\n  return (\n    <View style={styles.container}>\n      {/* <View style={{ marginTop: 40, width: \"100%\", elevation: 1000 }}>\n        <Header onTap={() => navigation.navigate(\"Search\")} />\n      </View> */}\n      <View\n        style={{\n          flexDirection: winWidth > 767 ? \"row\" : \"column\",\n          width: \"100%\",\n\n          height: \"100%\",\n        }}\n      >\n        {winWidth > 767 ? (\n          <View\n            style={{\n              backgroundColor: \"#8cbaff\",\n              width: \"30%\",\n              height: \"100%\",\n              alignItems: \"center\",\n\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 24, alignSelf: \"flex-start\" }}>\n              Welcome to Krisearch\n            </Text>\n            <Text\n              style={{\n                fontSize: 24,\n                marginBottom: 20,\n                alignSelf: \"flex-start\",\n              }}\n            >\n              Lets start discovering Farmers\n            </Text>\n            <View\n              style={{\n                flexDirection: \"row\",\n                width: \"100%\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            >\n              <View style={{ marginTop: 20 }}>\n                <Button\n                  title=\"Go to Home\"\n                  onPress={() => navigation.navigate(\"Home\")}\n                />\n              </View>\n              <View style={{ marginTop: 20 }}>\n                <Button\n                  title=\"Go to Profile\"\n                  onPress={() => navigation.navigate(\"Profile\")}\n                />\n              </View>\n            </View>\n          </View>\n        ) : null}\n\n        <View\n          style={{\n            backgroundColor: \"#deebff\",\n            width: winWidth > 767 ? \"70%\" : \"100%\",\n            height: \"100%\",\n            alignItems: \"flex-start\",\n            justifyContent: \"center\",\n          }}\n        >\n          {/* <Button\n            title=\"Go to Home\"\n            onPress={() => navigation.navigate(\"Home\")}\n          />\n          <Button title=\"Set Blur\" onPress={() => setblur(!blur)} /> */}\n\n          <View\n            style={{\n              marginBottom: 10,\n              width: \"100%\",\n              alignItems: \"center\",\n              height: winHeight * 0.99,\n            }}\n          >\n            <View\n              style={{\n                width: winWidth > 767 ? winWidth * 0.45 : winWidth * 0.9,\n              }}\n            >\n              <ScrollHeader\n                headerTap={() => {\n                  setblur(!blur), setterm(\"\"), setparent(false);\n                }}\n                headHolder={\n                  placer && parent\n                    ? term\n                    : parent\n                    ? term\n                    : \"Search for crops...\"\n                }\n              />\n            </View>\n\n            <Text\n              style={{\n                marginTop: 10,\n                padding: 5,\n                fontWeight: \"500\",\n                color: \"#6F6F6F\",\n                fontSize: 18,\n              }}\n            >\n              Showing results for {term}\n            </Text>\n\n            {/* <View style={{ width: \"100%\", flexDirection: \"row\" }}>\n              <TouchableOpacity\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  marginRight: 5,\n                  backgroundColor: \"blue\",\n                }}\n              >\n                <Text>{val ? val : \"\"}</Text>\n                <AntDesign\n                  name=\"close\"\n                  size={20}\n                  color=\"#fff\"\n                  onPress={() => setval(\"\")}\n                />\n              </TouchableOpacity>\n              <TouchableOpacity>\n                <Text>{addr ? addr : \"\"}</Text>\n              </TouchableOpacity>\n            </View> */}\n            {placer ? (\n              !parent ? (\n                <View\n                  style={{\n                    width: winWidth > 767 ? \"80%\" : \"90%\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  {/* <Text\n                    style={{\n                      marginTop: 60,\n                      padding: 5,\n                      fontWeight: \"500\",\n                      color: \"#6F6F6F\",\n                      fontSize: 20,\n                    }}\n                  >\n                    {term}\n                  </Text> */}\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-start\",\n                    }}\n                  >\n                    <TouchableOpacity\n                      style={{\n                        top: 10,\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-between\",\n                        backgroundColor: \"#949cff\",\n                        height: 30,\n                        padding: 3,\n                        borderRadius: 5,\n                        marginBottom: 20,\n                        marginRight: 20,\n                      }}\n                      onPress={() => {\n                        console.log(\"Biharma\"),\n                          sethideFAB(true),\n                          onOpenfilter();\n                      }}\n                    >\n                      <AntDesign name=\"filter\" size={15} color=\"#3A48ED\" />\n                      <Text\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"500\",\n                          marginLeft: 2,\n                          color: \"#fff\",\n                        }}\n                      >\n                        {\" \"}\n                        Filter Results\n                      </Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: val ? \"#fff\" : \"#deebff\",\n                        padding: 5,\n                        height: 30,\n                        borderRadius: 10,\n                      }}\n                    >\n                      <Text style={{ color: \"#000\" }}>{val ? val : null}</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: addr ? \"#fff\" : \"#deebff\",\n                        padding: 5,\n                        height: 30,\n                        borderRadius: 10,\n                      }}\n                    >\n                      <Text style={{ color: \"#000\" }}>\n                        {addr ? addr : null}\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              ) : (\n                <View>\n                  <Text\n                    style={{\n                      marginTop: 60,\n                      padding: 5,\n                      fontWeight: \"500\",\n                      color: \"#6F6F6F\",\n                    }}\n                  >\n                    {term}\n                  </Text>\n                </View>\n              )\n            ) : parent ? (\n              <View>\n                <Text\n                  style={{\n                    marginTop: 60,\n                    padding: 5,\n                    fontWeight: \"500\",\n                    color: \"#6F6F6F\",\n                  }}\n                >\n                  {term}\n                </Text>\n              </View>\n            ) : (\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text\n                  style={{\n                    marginTop: 60,\n                    padding: 5,\n                    fontWeight: \"500\",\n                    color: \"#6F6F6F\",\n                  }}\n                >\n                  {term}\n                </Text>\n                <TouchableOpacity\n                  style={{\n                    top: 20,\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    backgroundColor: \"#949cff\",\n                    height: 30,\n                    padding: 3,\n                    borderRadius: 5,\n                  }}\n                  onPress={() => {\n                    console.log(\"Biharma\"), sethideFAB(true), onOpenfilter();\n                  }}\n                >\n                  <AntDesign name=\"filter\" size={15} color=\"#3A48ED\" />\n                  <Text\n                    style={{\n                      fontSize: 15,\n                      fontWeight: \"500\",\n                      marginLeft: 2,\n                      color: \"#fff\",\n                    }}\n                  >\n                    {\" \"}\n                    Filter Results\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            )}\n            {/* {placer ? (\n            <TouchableOpacity\n              style={{ alignSelf: \"flex-end\", top: -23, width: 50, height: 20 }}\n              onPress={() => {\n                onOpenfilter();\n              }}\n            >\n              Filter\n            </TouchableOpacity>\n          ) : null} */}\n            <View\n              style={{\n                width: \"100%\",\n                height: 1,\n                backgroundColor: \"#96c1ff\",\n              }}\n            ></View>\n            <ScrollView showsVerticalScrollIndicator={false} bounces={true}>\n              {parent ? (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n                    alignItems: \"flex-start\",\n                    justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                >\n                  {filteredParents.map((item, cIndex) => {\n                    return (\n                      <Card\n                        key={item.id}\n                        name={item.name}\n                        avatar={item.image}\n                        isCrop={true}\n                        onPress={() => {\n                          setparent(!parent), setterm(item.name);\n                        }}\n                      />\n                    );\n                  })}\n                </View>\n              ) : filteractive ? (\n                merge ? (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"flex-start\",\n                      justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                      padding: winWidth > 767 ? 10 : 2,\n                    }}\n                  >\n                    {mergeResult.map((item, cIndex) => {\n                      return (\n                        <Card\n                          key={item.id}\n                          name={item.name}\n                          avatar={item.avatar}\n                          phone={item.phone}\n                          address={item.address}\n                          crop={item.crop}\n                          onPress={() => {\n                            setfarmer(item.id), onOpen(), sethideFAB(true);\n                          }}\n                          cropAvatar={item.image}\n                        />\n                      );\n                    })}\n                  </View>\n                ) : val && !addr ? (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"flex-start\",\n                      justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                      padding: winWidth > 767 ? 10 : 2,\n                    }}\n                  >\n                    {genderFilter.map((item, cIndex) => {\n                      return (\n                        <Card\n                          key={item.id}\n                          name={item.name}\n                          avatar={item.avatar}\n                          phone={item.phone}\n                          address={item.address}\n                          crop={item.crop}\n                          onPress={() => {\n                            setfarmer(item.id), onOpen(), sethideFAB(true);\n                          }}\n                          cropAvatar={item.image}\n                        />\n                      );\n                    })}\n                  </View>\n                ) : !val && addr ? (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"flex-start\",\n                      justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                      padding: winWidth > 767 ? 10 : 2,\n                    }}\n                  >\n                    {addrFilter.map((item, cIndex) => {\n                      return (\n                        <Card\n                          key={item.id}\n                          name={item.name}\n                          avatar={item.avatar}\n                          phone={item.phone}\n                          address={item.address}\n                          crop={item.crop}\n                          onPress={() => {\n                            setfarmer(item.id), onOpen();\n                          }}\n                          cropAvatar={item.image}\n                        />\n                      );\n                    })}\n                  </View>\n                ) : (\n                  <Text>No Result Found</Text>\n                )\n              ) : (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n                    alignItems: \"flex-start\",\n                    justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                >\n                  {filteredFarmers.map((item, cIndex) => {\n                    return (\n                      <Card\n                        key={item.id}\n                        name={item.name}\n                        avatar={item.avatar}\n                        phone={item.phone}\n                        address={item.address}\n                        crop={item.crop}\n                        onPress={() => {\n                          setfarmer(item.id), onOpen(), sethideFAB(true);\n                        }}\n                        cropAvatar={item.image}\n                      />\n                    );\n                  })}\n                </View>\n              )}\n              <View\n                style={{\n                  height: 60,\n                  width: \"100%\",\n                  backgroundColor: \"transparent\",\n                  marginTop: 10,\n                }}\n              ></View>\n            </ScrollView>\n            <Modalize\n              ref={modalizeRef}\n              modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.95}\n              modalStyle={\n                winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n              }\n              threshold={100}\n              closeOnOverlayTap={true}\n              mod\n            >\n              {filteredFarmers.map((item, cIndex) => {\n                let kisan = farmer;\n                if (kisan == item.id) {\n                  return (\n                    <View>\n                      <View\n                        style={{\n                          backgroundColor: \"#3A48ED\",\n                          width: \"100%\",\n                          height: 190,\n                          borderWidth: 1,\n                          top: -2,\n                          borderRadius: 15,\n                          borderColor: \"#3A48ED\",\n                          shadowColor: \"#000\",\n                          shadowOffset: {\n                            width: 0,\n                            height: 4,\n                          },\n                          shadowOpacity: 0.32,\n                          shadowRadius: 5.46,\n\n                          elevation: 11,\n                        }}\n                      >\n                        {/* <Text>{item.name}</Text>\n                        <Text>{item.address}</Text>\n                        <Image source={item.avatar} style={{height:50, width:50}}/>\n                   <Text>{farmer}</Text> */}\n                        <TouchableOpacity\n                          onPress={() => {\n                            onClose(), sethideFAB(false);\n                          }}\n                          style={{\n                            alignItems: \"center\",\n                            marginTop: 5,\n                            marginRight: 2,\n                            padding: 5,\n                            justifyContent: \"center\",\n                            alignSelf: \"flex-end\",\n                            backgroundColor: \"rgba(0,0,0,0.2)\",\n                            borderRadius: 10,\n                            height: 35,\n                            width: 70,\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              justifyContent: \"space-between\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <Text\n                              style={{\n                                fontSize: 15,\n                                fontWeight: 500,\n                                color: \"#fff\",\n                                marginRight: 5,\n                              }}\n                            >\n                              Close\n                            </Text>\n                            <SimpleLineIcons\n                              name=\"close\"\n                              size={15}\n                              color=\"#fff\"\n                              onPress={() => {\n                                onClose(), sethideFAB(false);\n                              }}\n                            />\n                          </View>\n                        </TouchableOpacity>\n                        <View\n                          style={{\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                            padding: 2,\n                            top: -10,\n                          }}\n                        >\n                          <View\n                            style={{\n                              width: \"40%\",\n                              height: \"100%\",\n                              padding: 5,\n                            }}\n                          >\n                            <Image\n                              source={{ uri: item.avatar }}\n                              style={{\n                                height: 120,\n                                width: 120,\n                                borderRadius: 120,\n                                borderColor: \"#fff\",\n                                borderWidth: 2,\n                              }}\n                            />\n                          </View>\n                          <View\n                            style={{\n                              flexDirection: \"column\",\n                              alignItems: \"center\",\n                              justifyContent: \"space-evenly\",\n                              width: \"60%\",\n                              height: \"100%\",\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"column\",\n                                alignItems: \"flex-start\",\n                                width: \"100%\",\n                                height: \"100%\",\n                                justifyContent: \"space-evenly\",\n                              }}\n                            >\n                              <View style={{ flexDirection: \"row\" }}>\n                                <Feather name=\"user\" size={20} color=\"#fff\" />\n                                <Text\n                                  style={{\n                                    fontSize: 20,\n                                    color: \"#fff\",\n                                    fontWeight: \"700\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  {getSmallString(item.name)}\n                                </Text>\n                              </View>\n                              <View style={{ flexDirection: \"row\" }}>\n                                <Feather\n                                  name=\"map-pin\"\n                                  size={20}\n                                  color=\"#fff\"\n                                />\n                                <Text\n                                  style={{\n                                    fontSize: 20,\n                                    color: \"#fff\",\n                                    fontWeight: \"700\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  {item.address}\n                                </Text>\n                              </View>\n                              <View style={{ flexDirection: \"row\" }}>\n                                <Feather name=\"user\" size={20} color=\"#fff\" />\n                                <Text\n                                  style={{\n                                    fontSize: 20,\n                                    color: \"#fff\",\n                                    fontWeight: \"700\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  {hideNumber(item.phone)}\n                                </Text>\n                              </View>\n                            </View>\n                          </View>\n                        </View>\n                        <View style={{ top: -40 }}>\n                          <Text\n                            style={{\n                              marginTop: 60,\n                              padding: 5,\n                              fontWeight: \"500\",\n                              color: \"#6F6F6F\",\n                              fontSize: 20,\n                              marginLeft: 5,\n                            }}\n                          >\n                            Farming Details\n                          </Text>\n                          <View\n                            style={{\n                              width: \"95%\",\n                              alignSelf: \"center\",\n                              height: 1,\n                              backgroundColor: \"#C0C0C0\",\n                            }}\n                          ></View>\n                          <View\n                            style={{\n                              flexDirection: \"column\",\n                              marginTop: 10,\n                              padding: 10,\n                              height: 180,\n                              justifyContent: \"space-between\",\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                                width: \"100%\",\n                                justifyContent: \"space-between\",\n                                marginBottom: 10,\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <Entypo\n                                    name=\"leaf\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      fontWeight: \"600\",\n                                    }}\n                                  >\n                                    Crop\n                                  </Text>\n                                </View>\n                                <View>\n                                  {Data.map((cropName, cIndex) => {\n                                    let a = cropName.name.toLowerCase();\n                                    let b = item.crop?.toLowerCase();\n                                    let result = a.localeCompare(b);\n\n                                    if (a == b) {\n                                      return (\n                                        <View\n                                          style={{\n                                            flexDirection: \"row\",\n                                            alignItems: \"center\",\n                                          }}\n                                        >\n                                          <Image\n                                            source={{ uri: cropName.image }}\n                                            style={{\n                                              height: 30,\n                                              width: 30,\n                                              borderWidth: 1,\n                                              borderRadius: 30,\n                                              borderColor: \"#3ECF8E\",\n                                            }}\n                                          />\n                                          <Text\n                                            style={{\n                                              fontSize: 30,\n                                              marginLeft: 5,\n                                            }}\n                                          >\n                                            {cropName.name}\n                                          </Text>\n                                        </View>\n                                      );\n                                    } else {\n                                      null;\n                                    }\n                                  })}\n                                </View>\n                              </View>\n\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                  alignItems: \"flex-end\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <SimpleLineIcons\n                                    name=\"calendar\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      marginLeft: 5,\n                                      fontWeight: \"600\",\n                                    }}\n                                  >\n                                    Harvest Date\n                                  </Text>\n                                </View>\n                                <View>\n                                  <Text style={{ fontSize: 30, marginLeft: 5 }}>\n                                    {item.harvestDate}\n                                  </Text>\n                                </View>\n                              </View>\n                            </View>\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                                width: \"100%\",\n                                justifyContent: \"space-between\",\n                                marginTop: 5,\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <SimpleLineIcons\n                                    name=\"size-fullscreen\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      fontWeight: \"600\",\n                                      marginLeft: 5,\n                                    }}\n                                  >\n                                    Farming Area\n                                  </Text>\n                                </View>\n                                <View>\n                                  <Text style={{ fontSize: 30 }}>\n                                    {item.area} Kattha\n                                  </Text>\n                                </View>\n                              </View>\n\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                  alignItems: \"flex-end\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <SimpleLineIcons\n                                    name=\"speedometer\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      marginLeft: 5,\n                                      fontWeight: \"600\",\n                                    }}\n                                  >\n                                    Quantity\n                                  </Text>\n                                </View>\n                                <View>\n                                  <Text style={{ fontSize: 30, marginLeft: 5 }}>\n                                    {item.quantity} quintal\n                                  </Text>\n                                </View>\n                              </View>\n                            </View>\n                            <View></View>\n                          </View>\n                          <View\n                            style={{\n                              width: \"95%\",\n                              alignSelf: \"center\",\n                              height: 1,\n                              backgroundColor: \"#C0C0C0\",\n                              marginTop: 10,\n                            }}\n                          />\n                        </View>\n                        <View\n                          style={{\n                            width: \"100%\",\n                            flexDirection: \"column\",\n                            top: -29,\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <Text\n                            style={{\n                              fontSize: 15,\n                              color: \"#808080\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            Coming soon\n                          </Text>\n                          <View\n                            style={{\n                              width: \"100%\",\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                              justifyContent: \"space-evenly\",\n                              top: 5,\n                            }}\n                          >\n                            <TouchableOpacity\n                              style={{\n                                width: 120,\n                                height: 50,\n                                backgroundColor: \"#A9A9A9\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                flexDirection: \"row\",\n                                borderRadius: 10,\n                              }}\n                              onPress={() =>\n                                alert(\n                                  \"Click to chat feature helps you connect directly to this farmer in one click. Feature Coming soon !\"\n                                )\n                              }\n                            >\n                              <FontAwesome5\n                                name=\"whatsapp\"\n                                size={25}\n                                color=\"#fff\"\n                              />\n                              <Text\n                                style={{\n                                  fontSize: 20,\n                                  color: \"#fff\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                Chat\n                              </Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity\n                              style={{\n                                width: 120,\n                                height: 50,\n                                backgroundColor: \"#A9A9A9\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                flexDirection: \"row\",\n                                borderRadius: 10,\n                              }}\n                              onPress={() => alert(\"Feature Coming soon !\")}\n                            >\n                              <Text\n                                style={{\n                                  fontSize: 20,\n                                  color: \"#fff\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                Buy\n                              </Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity\n                              style={{\n                                width: 120,\n                                height: 50,\n                                backgroundColor: \"#fff\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                flexDirection: \"row\",\n                                borderRadius: 10,\n                                borderColor: \"#A9A9A9\",\n                                borderWidth: 2,\n                              }}\n                              onPress={() =>\n                                alert(\n                                  \"Support the farmer by any kind. Feature Coming Soon !\"\n                                )\n                              }\n                            >\n                              <FontAwesome\n                                name=\"handshake-o\"\n                                size={25}\n                                color=\"#A9A9A9\"\n                              />\n                              <Text\n                                style={{\n                                  fontSize: 20,\n                                  color: \"#A9A9A9\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                Support\n                              </Text>\n                            </TouchableOpacity>\n                          </View>\n                        </View>\n                      </View>\n                    </View>\n                  );\n                } else {\n                  null;\n                }\n              })}\n            </Modalize>\n\n            <Modalize\n              ref={modalizeFilterRef}\n              modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.95}\n              modalStyle={\n                winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n              }\n              threshold={100}\n              closeOnOverlayTap={true}\n              mod\n            >\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  padding: 5,\n                }}\n              >\n                <Text\n                  style={{\n                    padding: 5,\n                    fontWeight: \"500\",\n                    color: \"#6F6F6F\",\n                    fontSize: 20,\n                    marginLeft: 5,\n                  }}\n                >\n                  Filter resuts here\n                </Text>\n                {/* <TouchableOpacity onPress={() => onCloseFilter()}>\n                Close Filter\n              </TouchableOpacity> */}\n                <TouchableOpacity\n                  onPress={() => {\n                    onCloseFilter(), sethideFAB(false);\n                  }}\n                  style={{\n                    alignItems: \"center\",\n                    marginTop: 5,\n                    marginRight: 2,\n                    padding: 5,\n                    justifyContent: \"center\",\n                    alignSelf: \"flex-end\",\n                    backgroundColor: \"rgba(0,0,0,0.2)\",\n                    borderRadius: 10,\n                    height: 35,\n                    width: 70,\n                  }}\n                >\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 15,\n                        fontWeight: 500,\n                        color: \"#fff\",\n                        marginRight: 5,\n                      }}\n                    >\n                      Close\n                    </Text>\n                    <SimpleLineIcons\n                      name=\"close\"\n                      size={15}\n                      color=\"#fff\"\n                      onPress={() => {\n                        onCloseFilter(), sethideFAB(false);\n                      }}\n                    />\n                  </View>\n                </TouchableOpacity>\n              </View>\n              <View\n                style={{\n                  width: \"95%\",\n                  alignSelf: \"center\",\n                  height: 1,\n                  backgroundColor: \"#C0C0C0\",\n                  marginTop: 10,\n                  alignItems: \"center\",\n                }}\n              ></View>\n              <Text\n                style={{\n                  color: \"#6F6F6F\",\n                  fontSize: 15,\n                  marginTop: 3,\n                  marginLeft: 7,\n                }}\n              >\n                By gender\n              </Text>\n              <View\n                style={{\n                  width: \"60%\",\n                  marginTop: 10,\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-start\",\n                  padding: 5,\n\n                  alignSelf: \"flex-start\",\n                }}\n              >\n                {genderData.map((item) => {\n                  return (\n                    <View key={item.key} style={styles.buttonContainer}>\n                      <TouchableOpacity\n                        style={styles.circle}\n                        onPress={() => {\n                          setfilteractive(true);\n                          setval(item.key);\n                          // toggler(item.key);\n                          // let a = item.text;\n                          // let b = filteredFarmers.filter((i) => {\n                          //   return i.gender.toLowerCase() === a.toLowerCase();\n                          // });\n                          // console.log(item.text);\n                          // console.log(a);\n                          // console.log(b);\n                        }}\n                      >\n                        {val === item.key && (\n                          <View style={styles.checkedCircle} />\n                        )}\n                      </TouchableOpacity>\n                      <Text style={{ fontSize: 16, marginLeft: 5 }}>\n                        {item.text}\n                      </Text>\n                    </View>\n                  );\n                })}\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  marginTop: 10,\n                  flexDirection: \"column\",\n                  alignItems: \"flex-start\",\n                  justifyContent: \"space-evenly\",\n                  padding: 5,\n                  alignSelf: \"flex-start\",\n                }}\n              >\n                <View\n                  style={{\n                    width: \"95%\",\n                    alignSelf: \"center\",\n                    height: 1,\n                    backgroundColor: \"#C0C0C0\",\n                    marginTop: 10,\n                    alignItems: \"center\",\n                  }}\n                ></View>\n                <Text\n                  style={{\n                    color: \"#6F6F6F\",\n                    fontSize: 15,\n                    marginTop: 10,\n                    marginLeft: 0,\n                    marginBottom: 5,\n                  }}\n                >\n                  By States\n                </Text>\n\n                <TouchableOpacity\n                  onPress={() => setaddrToggle(!addrToggle)}\n                  style={{\n                    flexDirection: \"row\",\n                    backgroundColor: \"#d6d9ff\",\n                    borderWidth: 2,\n                    borderColor: \"#7b42ff\",\n                    borderRadius: 10,\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    padding: 5,\n                    minWidth: \"30%\",\n                    marginBottom: 10,\n                  }}\n                >\n                  <Text style={{ fontSize: 15 }}>\n                    {addr ? addr : \"All States\"}\n                  </Text>\n                  <AntDesign name=\"down\" size={12} />\n                </TouchableOpacity>\n                {addrToggle ? (\n                  <View style={{ marginTop: 10 }}>\n                    {States.map((item) => {\n                      return (\n                        <View key={item.code} style={styles.buttonnewContainer}>\n                          <TouchableOpacity\n                            style={styles.circle}\n                            onPress={() => {\n                              setfilteractive(true);\n                              setaddr(item.name);\n                              setaddrToggle(false);\n                              // toggler(item.key);\n                              // let a = item.text;\n                              // let b = filteredFarmers.filter((i) => {\n                              //   return i.gender.toLowerCase() === a.toLowerCase();\n                              // });\n                              // console.log(item.text);\n                              // console.log(a);\n                              // console.log(b);\n                            }}\n                          >\n                            {addr === item.name && (\n                              <View style={styles.checkedCircle} />\n                            )}\n                          </TouchableOpacity>\n                          <Text style={{ fontSize: 16, marginLeft: 5 }}>\n                            {item.name}\n                          </Text>\n                        </View>\n                      );\n                    })}\n                  </View>\n                ) : null}\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  marginTop: 10,\n                  flexDirection: \"column\",\n                  alignItems: \"flex-start\",\n                  justifyContent: \"space-evenly\",\n                  padding: 5,\n                  alignSelf: \"flex-start\",\n                }}\n              >\n                <View\n                  style={{\n                    width: \"95%\",\n                    alignSelf: \"center\",\n                    height: 1,\n                    backgroundColor: \"#C0C0C0\",\n                    marginTop: 10,\n                    alignItems: \"center\",\n                  }}\n                ></View>\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-evenly\",\n                  top: 5,\n                }}\n              >\n                <TouchableOpacity\n                  style={{\n                    width: 120,\n                    height: 50,\n                    backgroundColor: \"#fff\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n\n                    borderRadius: 10,\n                    borderColor: \"#3A48ED\",\n                    borderWidth: 2,\n                  }}\n                  onPress={() => {\n                    setmerge(false),\n                      setfilteractive(false),\n                      onCloseFilter(),\n                      setval(\"\"),\n                      setaddr(\"\");\n                    sethideFAB(!hideFAB);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 20,\n                      color: \"#3A48ED\",\n                    }}\n                  >\n                    Reset\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={{\n                    width: 120,\n                    height: 50,\n                    backgroundColor: \"#3ECF8E\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n\n                    borderRadius: 10,\n                    borderColor: \"#3ECF8E\",\n                    borderWidth: 2,\n                  }}\n                  onPress={() => {\n                    // !merge && filteractive ? setmerge(false) : setmerge(true);\n                    (!val && addr && !merge) || (val && !addr && !merge)\n                      ? setfilteractive(true)\n                      : !val && !addr && merge\n                      ? (setmerge(true), setfilteractive(false))\n                      : setmerge(true);\n                    onCloseFilter();\n                    sethideFAB(false);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 20,\n                      color: \"#fff\",\n                    }}\n                  >\n                    Apply\n                  </Text>\n                </TouchableOpacity>\n              </View>\n              <View\n                style={{\n                  height: 60,\n                  width: \"100%\",\n                  backgroundColor: \"#fff\",\n                  marginTop: 10,\n                }}\n              ></View>\n            </Modalize>\n          </View>\n        </View>\n      </View>\n      {blur ? (\n        <View\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n            position: \"absolute\",\n          }}\n        >\n          <BlurView\n            tint=\"dark\"\n            intensity={40}\n            style={[StyleSheet.absoluteFill, styles.nonBlurredContent]}\n          >\n            <View\n              style={{\n                marginTop: 20,\n                padding: 5,\n                height: \"100%\",\n              }}\n            >\n              <View\n                style={{\n                  backgroundColor: \"#fff\",\n                  height: 55,\n                  width: \"97%\",\n                  alignSelf: \"center\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  borderRadius: 8,\n                  padding: 20,\n                  shadowColor: \"#98A0FF\",\n                  shadowOffset: {\n                    width: 0,\n                    height: 4,\n                  },\n                  shadowOpacity: 0.32,\n                  shadowRadius: 5.46,\n\n                  elevation: 9,\n                }}\n              >\n                {/* <TextInput style={{height:40, backgroundColor:\"white\", width:\"75%\", padding:5, outline}} placeholder=\"Search for crops...\" autoFocus={true}/> */}\n                <TextInput\n                  style={\n                    Platform.OS === \"web\" && {\n                      outlineColor: \"#fff\",\n                      height: 40,\n                      backgroundColor: \"white\",\n                      width: \"95%\",\n                      padding: 5,\n                      fontSize: 20,\n                    }\n                  }\n                  placeholder=\"Search for Crops\"\n                  value={term}\n                  autoFocus={true}\n                  editable={blur}\n                  onChangeText={(text) => {\n                    console.log(text), setterm(text), setSearch(text);\n                  }}\n                />\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  {term ? (\n                    <TouchableOpacity\n                      onPress={() => {\n                        setterm(\"\");\n                      }}\n                    >\n                      <View\n                        style={{\n                          width: 25,\n                          height: 25,\n                          borderWidth: 2,\n                          borderColor: \"#A1C7FF\",\n                          alignItems: \"center\",\n                          alignSelf: \"flex-end\",\n                          justifyContent: \"center\",\n                          right: -10,\n                          backgroundColor: \"#A1C7FF\",\n                          borderRadius: 25,\n                        }}\n                      >\n                        <AntDesign name=\"close\" size={20} color=\"#3A48ED\" />\n                      </View>\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n              </View>\n              <View style={{ flex: 1, alignItems: \"center\", width: \"100%\" }}>\n                {/* <TouchableOpacity style={{width:\"100%\", height:30, alignItems:\"center\", justifyContent:\"center\", backgroundColor:\"transparent\"}} onPress={()=>{setplacer(true),setblur(!blur)}}>\n<Text>{term}</Text>\n</TouchableOpacity> */}\n                {term !== null ? (\n                  <View\n                    style={{\n                      width: \"97%\",\n                      alignItems: \"center\",\n                      backgroundColor: \"#fff\",\n                      borderRadius: 10,\n                      margin: 5,\n                    }}\n                  >\n                    <View\n                      style={{\n                        width: \"100%\",\n                        alignItems: \"flex-start\",\n                        padding: 5,\n                        marginBottom: 10,\n                        marginTop: 5,\n                      }}\n                    >\n                      {filteredCrops.length > 0 ? (\n                        <Text\n                          style={{\n                            marginLeft: 20,\n                            fontSize: 15,\n                            fontWeight: \"600\",\n                          }}\n                        >\n                          Available Crops\n                        </Text>\n                      ) : (\n                        <Text\n                          style={{\n                            marginLeft: 20,\n                            fontSize: 15,\n                            fontWeight: \"600\",\n                            alignSelf: \"center\",\n                          }}\n                        >\n                          🤔 ....That seems to be missing...\n                        </Text>\n                      )}\n                    </View>\n\n                    {filteredCrops.map((item, cIndex) => {\n                      return (\n                        <View\n                          style={{\n                            width:\n                              winWidth > 768 ? winWidth - 80 : winWidth - 50,\n                            height: 45,\n                            padding: 5,\n                            borderRadius: 8,\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                            backgroundColor: \"#fff\",\n                            margin: 2,\n                          }}\n                        >\n                          <TouchableOpacity\n                            onPress={() => {\n                              setplacer(true),\n                                setblur(!blur),\n                                setterm(item.name);\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                              }}\n                            >\n                              <Image\n                                source={{ uri: item.image }}\n                                style={{\n                                  height: 35,\n                                  width: 35,\n                                  borderColor: \"green\",\n                                  borderWidth: 1,\n                                  borderRadius: 35,\n                                }}\n                              />\n                              <Text style={{ fontSize: 20 }}> {item.name}</Text>\n                              <Text\n                                style={{\n                                  fontSize: 15,\n                                  alignSelf: \"center\",\n                                  color: \"#989898\",\n                                }}\n                              >\n                                {\" \"}\n                                in{\" \"}\n                              </Text>\n                              <Text style={{ fontSize: 15 }}>{item.type}</Text>\n                            </View>\n                          </TouchableOpacity>\n                          <TouchableOpacity\n                            style={{\n                              backgroundColor: \"#3ECF8E\",\n                              height: \"100%\",\n                              alignItems: \"center\",\n                              justifyContent: \"center\",\n                              padding: 5,\n                              borderRadius: 5,\n                              alignSelf: \"flex-end\",\n                            }}\n                            onPress={() => {\n                              setparent(!parent),\n                                setterm(item.type),\n                                setplacer(!placer),\n                                setblur(!blur);\n                            }} //true\n                          >\n                            <Text style={{ fontSize: 15, color: \"#fff\" }}>\n                              View {item.type}s\n                            </Text>\n                          </TouchableOpacity>\n                        </View>\n                      );\n                    })}\n                  </View>\n                ) : null}\n              </View>\n            </View>\n          </BlurView>\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default Search;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginRight: 5,\n  },\n  buttonnewContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    marginRight: 5,\n    marginTop: 2,\n  },\n\n  circle: {\n    height: 30,\n    width: 30,\n    borderRadius: 15,\n    borderWidth: 1,\n    borderColor: \"#3A48ED\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  checkedCircle: {\n    width: 15,\n    height: 15,\n    borderRadius: 7,\n    backgroundColor: \"#3A48ED\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { Button, StyleSheet, Text, View, Image } from \"react-native\";\n\nconst Welcome = ({ navigation }) => {\n  setTimeout(() => {\n    navigation.replace(\"Home\");\n  }, 2000);\n\n  return (\n    <View style={[styles.container, { backgroundColor: \"#fff\" }]}>\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <Image\n          source={{ uri: require(\"../../assets/icon1.png\") }}\n          style={{ height: 50, width: 50 }}\n        />\n        <Text style={{ color: \"#346beb\", fontSize: 34 }}>Krisearch</Text>\n      </View>\n\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n};\n\nexport default Welcome;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\nimport Header from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\n\nconst Profile = ({ navigation }) => {\n  return (\n    <View style={styles.container}>\n      <View style={{ marginTop: 40, width: \"100%\", elevation: 1000 }}>\n        <Header onTap={() => navigation.navigate(\"Search\")} />\n      </View>\n\n      <View\n        style={{\n          flexDirection: winWidth > 767 ? \"row\" : \"column\",\n          width: \"100%\",\n          backgroundColor: \"pink\",\n          height: \"100%\",\n        }}\n      >\n        {winWidth > 767 ? (\n          <View\n            style={{\n              backgroundColor: \"#8cbaff\",\n              width: \"30%\",\n              height: \"100%\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Button\n              title=\"GO to Home\"\n              onPress={() => navigation.navigate(\"Home\")}\n            />\n          </View>\n        ) : null}\n\n        <View\n          style={{\n            backgroundColor: \"#deebff\",\n            width: winWidth > 767 ? \"70%\" : \"100%\",\n            height: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Button\n            title=\"GO to Search\"\n            onPress={() => navigation.navigate(\"Search\")}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Profile;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import React from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { winWidth, winHeight } from \"./src/utils/window\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Home from \"./src/screens/HomeScreen\";\nimport Search from \"./src/screens/SearchScreen\";\nimport Welcome from \"./src/screens/SplashScreen\";\nimport Header from \"../claro_krisearch/src/components/header\";\nimport Profile from \"./src/screens/ProfileScreen\";\nimport { Feather } from \"@expo/vector-icons\";\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction MyTabBar({ state, descriptors, navigation }) {\n  const focusedOptions = descriptors[state.routes[state.index].key].options;\n\n  if (focusedOptions.tabBarVisible === false) {\n    return null;\n  }\n\n  return (\n    <KeyboardAvoidingView>\n      <View style={{ flexDirection: \"row\" }}>\n        {state.routes.map((route, index) => {\n          const { options } = descriptors[route.key];\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const isFocused = state.index === index;\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: \"tabPress\",\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!isFocused && !event.defaultPrevented) {\n              navigation.navigate(route.name);\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: \"tabLongPress\",\n              target: route.key,\n            });\n          };\n\n          if (index === 1) {\n            return (\n              <TouchableOpacity\n                accessibilityRole=\"button\"\n                accessibilityState={isFocused ? { selected: true } : {}}\n                accessibilityLabel={options.tabBarAccessibilityLabel}\n                testID={options.tabBarTestID}\n                onPress={onPress}\n                onLongPress={onLongPress}\n                style={{\n                  flex: 1,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: 65,\n                  width: 65,\n                  backgroundColor: isFocused ? \"#346beb\" : \"#fff\",\n                  position: \"absolute\",\n                  left: winWidth / 2 - 30,\n                  bottom: 15,\n                  margin: 5,\n                  borderRadius: 35,\n                  borderWidth: 2,\n                  borderColor: isFocused ? \"#fff\" : \"#deebff\",\n                }}\n              >\n                {/* <Text style={{ color: isFocused ? \"#673ab7\" : \"#222\" }}>\n                {label}\n              </Text> */}\n                <Feather\n                  name=\"search\"\n                  size={30}\n                  color={isFocused ? \"#fff\" : \"#346beb\"}\n                />\n              </TouchableOpacity>\n            );\n          }\n\n          return (\n            <TouchableOpacity\n              accessibilityRole=\"button\"\n              accessibilityState={isFocused ? { selected: true } : {}}\n              accessibilityLabel={options.tabBarAccessibilityLabel}\n              testID={options.tabBarTestID}\n              onPress={onPress}\n              onLongPress={onLongPress}\n              style={{\n                flex: 1,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: 56,\n              }}\n            >\n              {/* <Text style={{ color: isFocused ? \"#673ab7\" : \"#222\" }}>\n              {label}\n            </Text> */}\n\n              <View>\n                {index == 0 ? (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      borderWidth: 2,\n                      backgroundColor: isFocused ? \"#deebff\" : \"transparent\",\n                      borderColor: isFocused ? \"#deebff\" : \"transparent\",\n                      width: \"110%\",\n                      borderRadius: 20,\n                      padding: 5,\n                    }}\n                  >\n                    <Feather\n                      name=\"home\"\n                      size={20}\n                      color={isFocused ? \"#346beb\" : \"#222\"}\n                    />\n                    {isFocused ? (\n                      <Text\n                        style={{\n                          fontSize: 16,\n                          marginLeft: 15,\n                          color: \"#346beb\",\n                        }}\n                      >\n                        {label}\n                      </Text>\n                    ) : null}\n                  </View>\n                ) : (\n                  <View>\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        borderWidth: 2,\n                        backgroundColor: isFocused ? \"#deebff\" : \"transparent\",\n                        borderColor: isFocused ? \"#deebff\" : \"transparent\",\n                        width: \"110%\",\n                        borderRadius: 20,\n                        padding: 5,\n                      }}\n                    >\n                      <Feather\n                        name=\"user\"\n                        size={20}\n                        color={isFocused ? \"#346beb\" : \"#222\"}\n                      />\n                      {isFocused ? (\n                        <Text\n                          style={{\n                            fontSize: 16,\n                            marginLeft: 15,\n                            color: \"#346beb\",\n                          }}\n                        >\n                          {label}\n                        </Text>\n                      ) : null}\n                    </View>\n                  </View>\n                )}\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      {winWidth > 767 ? (\n        <Stack.Navigator\n          screenOptions={{\n            headerStyle: {\n              backgroundColor: \"#346beb\",\n            },\n            headerTintColor: \"#fff\",\n            headerTitleStyle: {\n              fontWeight: \"bold\",\n            },\n            headerShown: false,\n          }}\n          initialRouteName=\"Welcome\"\n        >\n          <Stack.Screen\n            name=\"Welcome\"\n            component={Welcome}\n            options={{ headerShown: false }}\n          />\n          <Stack.Screen\n            name=\"Home\"\n            component={Home}\n            options={{\n              title: \"Krisearch\",\n            }}\n          />\n          <Stack.Screen name=\"Search\" component={Search} />\n          <Stack.Screen\n            name=\"Profile\"\n            component={Profile}\n            options={{\n              title: \"Profile\",\n            }}\n          />\n        </Stack.Navigator>\n      ) : (\n        <Tab.Navigator tabBar={(props) => <MyTabBar {...props} />}>\n          <Tab.Screen name=\"Home\" component={Home} />\n          <Tab.Screen name=\"Search\" component={Search} />\n          <Tab.Screen name=\"Profile\" component={Profile} />\n        </Tab.Navigator>\n      )}\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/newlogo.a840e510.png\";","module.exports = __webpack_public_path__ + \"static/media/icon1.0fd4d1c9.png\";"],"sourceRoot":""}