{"version":3,"sources":["src/utils/window.ts","src/components/header.tsx","src/utils/getSmallString.ts","src/components/Card.tsx","src/utils/hideNumber.ts","src/screens/HomeScreen.tsx","src/components/SearchBar.tsx","src/components/ScrollHeader.tsx","src/screens/SearchScreen.tsx","src/screens/SplashScreen.tsx","src/screens/ProfileScreen.tsx","App.tsx","assets/newicon2.png","assets/newlogo.png","assets/icon1.png"],"names":["winHeight","Dimensions","get","height","winWidth","width","windowWidth","Header","props","onTap","View","style","styles","header","flexDirection","alignItems","justifyContent","top","Image","source","uri","require","Text","headerText","TextInput","fontSize","backgroundColor","outlineColor","borderRadius","padding","marginTop","placeholder","placeholderTextColor","onFocus","StyleSheet","create","color","fontWeight","marginLeft","getSmallString","str","length","substring","Card","name","avatar","crop","phone","address","onPress","cropAvatar","isCrop","TouchableOpacity","borderWidth","borderColor","margin","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","Entypo","size","hideNumber","a","toString","split","console","log","splice","Home","navigation","useState","farmer","setfarmer","modalizeRef","useRef","onClose","current","close","setcrop","farmers","setfarmers","setmodalName","useEffect","fetch","method","headers","Accept","body","JSON","stringify","gender","harvestDate","state","then","response","json","data","list","catch","error","container","navigate","alignSelf","ScrollView","showsVerticalScrollIndicator","SimpleLineIcons","flexWrap","map","item","cIndex","key","id","farmerName","farmerImage","crops","cropName","open","onOpen","image","ref","modalHeight","threshold","modalStyle","position","zIndex","closeOnOverlayTap","mod","marginRight","Feather","Crops","toLowerCase","b","localeCompare","land","quantity","alert","FontAwesome5","FontAwesome","flex","SearchBar","visible","onHit","tapper","holderValue","isFocused","newdata","Platform","OS","autoFocus","editable","onChangeText","text","setting","typer","Data","push","type","i","includes","ScrollHeader","headerTap","scrolled","headHolder","Search","blur","setblur","term","setterm","placer","setplacer","val","setval","addr","setaddr","hideFAB","sethideFAB","parent","setparent","filteractive","setfilteractive","addrToggle","setaddrToggle","merge","setmerge","filteredCrops","filter","toLocaleLowerCase","filteredParents","filteredFarmers","Farmers","genderFilter","addrFilter","flat","modalizeFilterRef","mergeResult","onOpenfilter","onCloseFilter","Button","title","AntDesign","bounces","area","buttonContainer","circle","checkedCircle","minWidth","States","code","buttonnewContainer","tint","intensity","absoluteFill","nonBlurredContent","value","dynamic","setSearch","right","Welcome","setTimeout","replace","StatusBar","Profile","Stack","createStackNavigator","Tab","createBottomTabNavigator","MyTabBar","descriptors","routes","index","options","tabBarVisible","KeyboardAvoidingView","route","label","undefined","tabBarLabel","event","emit","target","canPreventDefault","defaultPrevented","onLongPress","accessibilityRole","accessibilityState","selected","accessibilityLabel","tabBarAccessibilityLabel","testID","tabBarTestID","left","bottom","App","NavigationContainer","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","headerShown","Screen","component","tabBar","tabBarOptions","keyboardHidesTabBar","module","exports"],"mappings":"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","file":"static/js/app.ee306cda.chunk.js","sourcesContent":["import { Dimensions } from 'react-native';\nexport const winHeight = Dimensions.get(\"window\").height;\n\nexport const winWidth = Dimensions.get(\"window\").width;\n","import React from \"react\";\nimport {\n  Button,\n  TextInput,\n  Dimensions,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n} from \"react-native\";\nimport { winWidth } from \"../utils/window\";\n\nconst windowHeight = Dimensions.get(\"screen\").height;\nconst windowWidth = Dimensions.get(\"screen\").width;\n\nexport interface HeaderProps {\n  onTap(): any;\n}\n\nconst Header = (props: HeaderProps) => {\n  const { onTap } = props;\n  return (\n    <View style={styles.header}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          top: 5,\n        }}\n      >\n        <Image\n          source={{ uri: require(\"../../assets/newicon2.png\") }}\n          style={{ width: 20, height: 20 }}\n        />\n        <Text style={styles.headerText}>Krisearch</Text>\n      </View>\n\n      <TextInput\n        style={{\n          width: \"50%\",\n          height: winWidth > 767 ? 40 : 35,\n          fontSize: winWidth > 767 ? 20 : 16,\n          backgroundColor: windowWidth > 767 ? \"#fff\" : \"#003bc4\",\n          outlineColor: \"#fff\",\n          borderRadius: 10,\n          padding: 5,\n          marginTop: 10,\n        }}\n        placeholder=\"Search for Crops...\"\n        placeholderTextColor={winWidth > 767 ? \"#000\" : \"#fff\"}\n        onFocus={onTap}\n      />\n    </View>\n  );\n};\n\nexport default Header;\n\nconst styles = StyleSheet.create({\n  header: {\n    width: \"100%\",\n    height: 60,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    backgroundColor: \"#346beb\",\n    padding: 5,\n  },\n  headerText: {\n    fontSize: winWidth > 767 ? 22 : 20,\n    color: \"#fff\",\n    fontWeight: \"600\",\n    marginLeft: 2,\n  },\n});\n","const getSmallString=(str : string)=>{\n    if(str.length>20){\n        str =str.substring(0,19)+\"...\";\n        return str;\n    }\n    else{\n        return str\n    }\n}\n\nexport default getSmallString","import { Entypo, MaterialIcons, SimpleLineIcons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Dimensions,\n  Image,\n} from \"react-native\";\nimport getSmallString from \"../utils/getSmallString\";\n\nexport interface CardProps {\n  name: string;\n  avatar?: string;\n  crop?: string;\n  phone?: number;\n  address?: string;\n  onPress: any;\n  cropAvatar?: string;\n  isCrop?: boolean;\n}\n\nexport default function Card(props: CardProps) {\n  const {\n    name,\n    avatar,\n    crop,\n    phone,\n    address,\n    onPress,\n    cropAvatar,\n    isCrop,\n  } = props;\n\n  const windowWidth = Dimensions.get(\"window\").width;\n  const cardWidth = windowWidth / 2 - 30;\n\n  return (\n    <TouchableOpacity onPress={() => onPress()}>\n      <View\n        style={\n          windowWidth > 767\n            ? {\n                width: 200,\n                height: 185,\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderColor: \"#fff\",\n                borderRadius: 10,\n                alignItems: \"center\",\n                margin: 5,\n                marginBottom: 5,\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 3,\n                },\n                shadowOpacity: 0.15,\n                shadowRadius: 2.22,\n\n                elevation: 3,\n              }\n            : {\n                width: windowWidth * 0.45,\n                height: 185,\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderColor: \"#fff\",\n                borderRadius: 10,\n                alignItems: \"center\",\n                margin: 6,\n\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 3,\n                },\n                shadowOpacity: 0.15,\n                shadowRadius: 2.22,\n\n                elevation: 3,\n              }\n        }\n      >\n        <Image\n          source={{ uri: avatar }}\n          style={\n            !isCrop\n              ? {\n                  width: 100,\n                  height: 100,\n                  borderWidth: 1,\n                  borderColor: \"#fff\",\n                  borderRadius: 100,\n                }\n              : {\n                  width: 140,\n                  height: 140,\n                  borderWidth: 1,\n                  borderColor: \"#fff\",\n                  borderRadius: 100,\n                }\n          }\n        />\n        <Text style={{ fontWeight: \"500\", marginTop: 10 }}>\n          {getSmallString(name)}\n        </Text>\n\n        {!isCrop ? (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-evenly\",\n              alignItems: \"center\",\n              marginTop: 10,\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Image\n                source={{ uri: cropAvatar }}\n                style={{\n                  height: 15,\n                  width: 15,\n                  borderColor: \"green\",\n                  borderWidth: 1,\n                  borderRadius: 15,\n                }}\n              />\n              <Text> {crop}</Text>\n            </View>\n            <Entypo name=\"dot-single\" size={15} style={{ top: 10 }} />\n            <View>\n              <Text>{address}</Text>\n            </View>\n          </View>\n        ) : null}\n\n        {!isCrop ? (\n          <View>\n            <Text>{phone}</Text>\n          </View>\n        ) : null}\n      </View>\n    </TouchableOpacity>\n  );\n}\n","const hideNumber = (phone : number)=>{\n    var a=[];\n    var b;\n    var c;\n    var newString=[];\n    let i=0;\n\n    a = phone.toString().split('');\n    console.log(a)\n    a.splice(1,0,\"X\");\n    a.splice(3,2,\"X\");\n    a.splice(6,5,\"X\");\n    a.splice(1,0,\"X\");\n   \n    console.log('New A'+a)\n    return a;\n\n    \n\n\n}\n\nexport default hideNumber","import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  Dimensions,\n  ScrollView,\n  StyleSheet,\n  Text,\n  Image,\n  TouchableOpacity,\n  View,\n  ActivityIndicator,\n  FlatList,\n} from \"react-native\";\nimport Header, { HeaderProps } from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport Farmers from \"../data/farmers.json\";\nimport Crops from \"../data/items.json\";\nimport { Modalize } from \"react-native-modalize\";\nimport Card from \"../components/Card\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  FontAwesome5,\n  FontAwesome,\n} from \"@expo/vector-icons\";\nimport hideNumber from \"../utils/hideNumber\";\nimport getSmallString from \"../utils/getSmallString\";\n\nconst Home = ({ navigation }) => {\n  const [farmer, setfarmer] = useState(0);\n  const modalizeRef = useRef<Modalize>(null);\n\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onClose = () => {\n    modalizeRef.current?.close();\n  };\n\n  const [isLoading, setLoading] = useState(true);\n  const [sata, setSata] = useState([]);\n\n  const cropper = \"rice\";\n\n  const [crop, setcrop] = useState([]);\n  const [farmers, setfarmers] = useState([]);\n  const [modalName, setmodalName] = useState(\"\");\n\n  // useEffect(() => {\n  //   fetch(\"http://staging.clarolabs.in:7050/b2bRequirement/fetch/crops\", {\n  //     method: \"post\",\n  //     headers: {\n  //       Accept: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify({\n  //       name: cropper,\n  //     }),\n  //   })\n  //     .then((response) => console.log(response.json()))\n  //     .then((data) => console.log(data))\n  //     .catch((error) => console.error(error));\n  // }, []);\n  console.log(\"REACHING HOME\");\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/b2bRequirement/fetch/farmers\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        gender: null,\n        harvestDate: null,\n        state: \"Bihar\",\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => setfarmers(data.data.list))\n      .catch((error) => console.error(error));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/b2bRequirement/fetch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: cropper,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => setcrop(data.data.list))\n      .catch((error) => console.error(error));\n  }, []);\n\n  console.log(crop);\n  console.log(farmer);\n  return (\n    <View style={styles.container}>\n      <View style={{ marginTop: 40, width: \"100%\", elevation: 1000 }}>\n        <Header onTap={() => navigation.navigate(\"Search\")} />\n      </View>\n\n      <View\n        style={{\n          flexDirection: winWidth > 767 ? \"row\" : \"column\",\n          width: \"100%\",\n\n          height: \"100%\",\n        }}\n      >\n        {winWidth > 767 ? (\n          <View\n            style={{\n              backgroundColor: \"#8cbaff\",\n              width: \"30%\",\n              height: \"100%\",\n              alignItems: \"center\",\n\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 24, alignSelf: \"flex-start\" }}>\n              Welcome to Krisearch\n            </Text>\n            <Text\n              style={{\n                fontSize: 24,\n                marginBottom: 20,\n                alignSelf: \"flex-start\",\n              }}\n            >\n              Lets start discovering Farmers\n            </Text>\n\n            {/* <View style={{ flex: 1, padding: 24 }}>\n              {isLoading ? (\n                <ActivityIndicator />\n              ) : (\n                <FlatList\n                  data={sata}\n                  keyExtractor={({ id }, index) => id}\n                  renderItem={({ item }) => (\n                    <Text>\n                      {item.title}, {item.releaseYear}\n                    </Text>\n                  )}\n                />\n              )}\n            </View> */}\n            <View\n              style={{\n                flexDirection: \"row\",\n                width: \"100%\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            ></View>\n          </View>\n        ) : null}\n\n        <View\n          style={{\n            backgroundColor: \"#deebff\",\n            width: winWidth > 767 ? \"70%\" : \"100%\",\n            height: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          {/* <Button\n            title=\"GO to Search\"\n            onPress={() => navigation.navigate(\"Search\")}\n          /> */}\n          {/* {winWidth < 767 ? (\n            <View\n              style={{\n                width: \"100%\",\n                height: 50,\n                backgroundColor: \"#346beb\",\n                padding: 7,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 4,\n                },\n                shadowOpacity: 0.32,\n                shadowRadius: 5.46,\n\n                elevation: 9,\n              }}\n            >\n              <TextInput\n                style={{\n                  width: \"60%\",\n                  height: 40,\n                  fontSize: 20,\n                  backgroundColor: \"#fff\",\n                  outlineColor: \"#346beb\",\n                  borderRadius: 10,\n                  padding: 5,\n                }}\n                placeholder=\"Search for Crops\"\n                onFocus={() => navigation.navigate(\"Search\")}\n              />\n              <View\n                style={{\n                  width: 35,\n                  height: 35,\n                  borderColor: \"#fff\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  backgroundColor: \"#deebff\",\n                  borderRadius: 35,\n                }}\n              >\n                <SimpleLineIcons name=\"magnifier\" size={20} color=\"#346beb\" />\n              </View>\n            </View>\n          ) : null} */}\n\n          <ScrollView showsVerticalScrollIndicator={false}>\n            <View\n              style={{\n                width: \"100%\",\n                flexDirection: \"row\",\n                alignItems: \"flex-start\",\n                justifyContent: \"flex-start\",\n                height: 40,\n                padding: 10,\n              }}\n            >\n              <SimpleLineIcons name=\"compass\" size={22} color=\"#346beb\" />\n              <Text style={{ fontSize: 22, marginLeft: 5 }}>Discover</Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                width: \"100%\",\n                flexWrap: \"wrap\",\n                alignItems: \"flex-start\",\n                justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                padding: winWidth > 767 ? 10 : 2,\n              }}\n            >\n              {farmers.map((item, cIndex) => {\n                return (\n                  <Card\n                    key={item.id}\n                    name={item.farmerName}\n                    avatar={item.farmerImage}\n                    phone={item.phone}\n                    address={item.state}\n                    crop={item.crops.cropName}\n                    onPress={() => {\n                      console.log(item.farmerName), setfarmer(item.id);\n                      onOpen(), setmodalName(item.farmerName);\n                    }}\n                    cropAvatar={item.image}\n                  />\n                );\n              })}\n            </View>\n            {winWidth < 767 ? (\n              <View\n                style={{\n                  height: 60,\n                  width: \"100%\",\n                  backgroundColor: \"transparent\",\n                  marginTop: 10,\n                }}\n              ></View>\n            ) : null}\n          </ScrollView>\n        </View>\n      </View>\n      <Modalize\n        ref={modalizeRef}\n        modalHeight={winWidth > 767 ? winHeight : winHeight * 0.9}\n        threshold={100}\n        modalStyle={{ position: \"absolute\", width: \"100%\", zIndex: 999 }}\n        // modalStyle={\n        //   winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n        // }\n        closeOnOverlayTap={true}\n        mod\n      >\n        {farmers.map((item, cIndex) => {\n          if (farmer == item.id) {\n            return (\n              <View>\n                <View\n                  style={{\n                    backgroundColor: \"#3A48ED\",\n                    width: \"100%\",\n                    height: 170,\n                    borderWidth: 1,\n                    top: -2,\n                    borderRadius: 15,\n                    borderColor: \"#3A48ED\",\n                    shadowColor: \"#000\",\n                    shadowOffset: {\n                      width: 0,\n                      height: 4,\n                    },\n                    shadowOpacity: 0.32,\n                    shadowRadius: 5.46,\n\n                    elevation: 9,\n                  }}\n                >\n                  {/* <Text>{item.name}</Text>\n                        <Text>{item.address}</Text>\n                        <Image source={item.avatar} style={{height:50, width:50}}/>\n                   <Text>{farmer}</Text> */}\n                  <TouchableOpacity\n                    onPress={() => onClose()}\n                    style={{\n                      alignItems: \"center\",\n                      marginTop: 5,\n                      marginRight: 2,\n                      padding: 5,\n                      justifyContent: \"center\",\n                      alignSelf: \"flex-end\",\n                      backgroundColor: \"rgba(0,0,0,0.2)\",\n                      borderRadius: 10,\n                      height: 35,\n                      width: 70,\n                    }}\n                  >\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Text\n                        style={{\n                          fontSize: 15,\n                          fontWeight: 500,\n                          color: \"#fff\",\n                          marginRight: 5,\n                        }}\n                      >\n                        Close\n                      </Text>\n                      <SimpleLineIcons\n                        name=\"close\"\n                        size={15}\n                        color=\"#fff\"\n                        onPress={() => onClose()}\n                      />\n                    </View>\n                  </TouchableOpacity>\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      justifyContent: \"space-between\",\n                      padding: 2,\n                      top: -10,\n                    }}\n                  >\n                    <View style={{ width: \"40%\", height: \"100%\", padding: 5 }}>\n                      <Image\n                        source={{ uri: item.farmerImage }}\n                        style={{\n                          height: 120,\n                          width: 120,\n                          borderRadius: 120,\n                          borderColor: \"#fff\",\n                          borderWidth: 2,\n                        }}\n                      />\n                    </View>\n                    <View\n                      style={{\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-evenly\",\n                        width: \"60%\",\n                        height: \"100%\",\n                      }}\n                    >\n                      <View\n                        style={{\n                          flexDirection: \"column\",\n                          alignItems: \"flex-start\",\n                          width: \"100%\",\n                          height: \"100%\",\n                          justifyContent: \"space-evenly\",\n                        }}\n                      >\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Feather name=\"user\" size={20} color=\"#fff\" />\n                          <Text\n                            style={{\n                              fontSize: 20,\n                              color: \"#fff\",\n                              fontWeight: \"700\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            {getSmallString(item.farmerName)}\n                          </Text>\n                        </View>\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Feather name=\"map-pin\" size={20} color=\"#fff\" />\n                          <Text\n                            style={{\n                              fontSize: 20,\n                              color: \"#fff\",\n                              fontWeight: \"700\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            {item.state}\n                          </Text>\n                        </View>\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Feather name=\"user\" size={20} color=\"#fff\" />\n                          <Text\n                            style={{\n                              fontSize: 20,\n                              color: \"#fff\",\n                              fontWeight: \"700\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            {hideNumber(item.phone)}\n                          </Text>\n                        </View>\n                      </View>\n                    </View>\n                  </View>\n                  <View style={{ top: -40 }}>\n                    <Text\n                      style={{\n                        marginTop: winWidth < 400 ? 40 : 60,\n                        padding: 5,\n                        fontWeight: \"500\",\n                        color: \"#6F6F6F\",\n                        fontSize: 20,\n                        marginLeft: 5,\n                      }}\n                    >\n                      Farming Details\n                    </Text>\n                    <View\n                      style={{\n                        width: \"95%\",\n                        alignSelf: \"center\",\n                        height: 1,\n                        backgroundColor: \"#C0C0C0\",\n                      }}\n                    ></View>\n                    <View\n                      style={{\n                        flexDirection: \"column\",\n                        marginTop: 10,\n                        padding: 10,\n                        height: winWidth < 400 ? 100 : 180,\n                        justifyContent: \"space-between\",\n                      }}\n                    >\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          alignItems: \"center\",\n                          width: \"100%\",\n                          justifyContent: \"space-between\",\n                          marginBottom: 10,\n                        }}\n                      >\n                        <View style={{ flexDirection: \"column\", width: \"50%\" }}>\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <Entypo name=\"leaf\" size={20} color=\"#9F99FF\" />\n                            <Text\n                              style={{\n                                fontSize: 12,\n                                color: \"#6F6F6F\",\n                                fontWeight: \"600\",\n                              }}\n                            >\n                              Crop\n                            </Text>\n                          </View>\n                          <View>\n                            {Crops.map((cropName, cIndex) => {\n                              let a = cropName.name.toLowerCase();\n                              let b = item.crop?.toLowerCase();\n                              let result = a.localeCompare(b);\n\n                              if (a == b) {\n                                return (\n                                  <View\n                                    style={{\n                                      flexDirection: \"row\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <Image\n                                      source={{ uri: cropName.image }}\n                                      style={{\n                                        height: 30,\n                                        width: 30,\n                                        borderWidth: 1,\n                                        borderRadius: 30,\n                                        borderColor: \"#3ECF8E\",\n                                      }}\n                                    />\n                                    <Text\n                                      style={{\n                                        fontSize: 20,\n                                        marginLeft: 5,\n                                      }}\n                                    >\n                                      {cropName.name}\n                                    </Text>\n                                  </View>\n                                );\n                              } else {\n                                null;\n                              }\n                            })}\n                          </View>\n                        </View>\n\n                        <View\n                          style={{\n                            flexDirection: \"column\",\n                            width: \"50%\",\n                            alignItems: \"flex-end\",\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <SimpleLineIcons\n                              name=\"calendar\"\n                              size={20}\n                              color=\"#9F99FF\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 12,\n                                color: \"#6F6F6F\",\n                                marginLeft: 5,\n                                fontWeight: \"600\",\n                              }}\n                            >\n                              Harvest Date\n                            </Text>\n                          </View>\n                          <View>\n                            <Text style={{ fontSize: 20, marginLeft: 5 }}>\n                              {item.crops.harvestDate}\n                            </Text>\n                          </View>\n                        </View>\n                      </View>\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          alignItems: \"center\",\n                          width: \"100%\",\n                          justifyContent: \"space-between\",\n                          marginTop: 5,\n                        }}\n                      >\n                        <View style={{ flexDirection: \"column\", width: \"50%\" }}>\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <SimpleLineIcons\n                              name=\"size-fullscreen\"\n                              size={20}\n                              color=\"#9F99FF\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 12,\n                                color: \"#6F6F6F\",\n                                fontWeight: \"600\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              Farming Area\n                            </Text>\n                          </View>\n                          <View>\n                            <Text style={{ fontSize: 20 }}>\n                              {item.land} Kattha\n                            </Text>\n                          </View>\n                        </View>\n\n                        <View\n                          style={{\n                            flexDirection: \"column\",\n                            width: \"50%\",\n                            alignItems: \"flex-end\",\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <SimpleLineIcons\n                              name=\"speedometer\"\n                              size={20}\n                              color=\"#9F99FF\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 12,\n                                color: \"#6F6F6F\",\n                                marginLeft: 5,\n                                fontWeight: \"600\",\n                              }}\n                            >\n                              Quantity\n                            </Text>\n                          </View>\n                          <View>\n                            <Text style={{ fontSize: 20, marginLeft: 5 }}>\n                              {item.crops.quantity} quintal\n                            </Text>\n                          </View>\n                        </View>\n                      </View>\n                      <View></View>\n                    </View>\n                    <View\n                      style={{\n                        width: \"95%\",\n                        alignSelf: \"center\",\n                        height: 1,\n                        backgroundColor: \"#C0C0C0\",\n                        marginTop: winWidth < 400 ? 30 : 10,\n                      }}\n                    />\n                  </View>\n                  <View\n                    style={{\n                      width: \"100%\",\n                      flexDirection: \"column\",\n                      top: -29,\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 15,\n                        color: \"#808080\",\n                        marginLeft: 5,\n                      }}\n                    >\n                      Coming soon\n                    </Text>\n                    <View\n                      style={{\n                        width: \"100%\",\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-evenly\",\n                        top: 5,\n                      }}\n                    >\n                      <TouchableOpacity\n                        style={{\n                          width: winWidth < 400 ? 90 : 120,\n                          height: winWidth < 400 ? 30 : 50,\n                          backgroundColor: \"#A9A9A9\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          flexDirection: \"row\",\n                          borderRadius: 10,\n                        }}\n                        onPress={() =>\n                          alert(\n                            \"Click to chat feature helps you connect directly to this farmer in one click. Feature Coming soon !\"\n                          )\n                        }\n                      >\n                        <FontAwesome5 name=\"whatsapp\" size={20} color=\"#fff\" />\n                        <Text\n                          style={{\n                            fontSize: winWidth < 400 ? 16 : 20,\n                            color: \"#fff\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          Chat\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity\n                        style={{\n                          width: winWidth < 400 ? 90 : 120,\n                          height: winWidth < 400 ? 30 : 50,\n                          backgroundColor: \"#A9A9A9\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          flexDirection: \"row\",\n                          borderRadius: 10,\n                        }}\n                        onPress={() => alert(\"Feature Coming soon !\")}\n                      >\n                        <Text\n                          style={{\n                            fontSize: winWidth < 400 ? 16 : 20,\n                            color: \"#fff\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          Buy\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity\n                        style={{\n                          width: winWidth < 400 ? 90 : 120,\n                          height: winWidth < 400 ? 40 : 50,\n                          backgroundColor: \"#fff\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          flexDirection: \"row\",\n                          borderRadius: 10,\n                          borderColor: \"#A9A9A9\",\n                          borderWidth: 2,\n                        }}\n                        onPress={() =>\n                          alert(\n                            \"Support the farmer by any kind. Feature Coming Soon !\"\n                          )\n                        }\n                      >\n                        <FontAwesome\n                          name=\"handshake-o\"\n                          size={15}\n                          color=\"#A9A9A9\"\n                        />\n                        <Text\n                          style={{\n                            fontSize: winWidth < 400 ? 16 : 20,\n                            color: \"#A9A9A9\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          Support\n                        </Text>\n                      </TouchableOpacity>\n                    </View>\n                  </View>\n                </View>\n              </View>\n            );\n          } else {\n            null;\n          }\n        })}\n      </Modalize>\n    </View>\n  );\n};\n\nexport default Home;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import { SimpleLineIcons } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Platform,\n  FlatList,\n  ActivityIndicator,\n} from \"react-native\";\nimport Data from \"../data/items.json\";\nimport Farmer from \"../data/farmers.json\";\n\nexport interface SearchProps {\n  visible?: boolean;\n  tapper?: boolean;\n  onHit(): any;\n  isFocused?: boolean;\n  holderValue?: string;\n}\n\nfunction SearchBar(props: SearchProps) {\n  const { visible, onHit, tapper, isFocused, holderValue } = props;\n\n  const [sugg, setsugg] = useState(false);\n  const newdata = [];\n\n  function renderAll(a = []) {\n    for (let i = 0; i < a.length; i++) {\n      return (\n        <View style={{ width: \"100%\", height: 50, backgroundColor: \"yellow\" }}>\n          <Text>{a[i]}</Text>\n        </View>\n      );\n    }\n  }\n\n  return (\n    <View\n      style={{\n        backgroundColor: tapper ? \"#fff\" : \"transparent\",\n      }}\n    >\n      <View\n        style={{\n          backgroundColor: \"#fff\",\n          height: 40,\n          width: \"100%\",\n          alignSelf: \"center\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          borderRadius: 8,\n          padding: 5,\n          shadowColor: \"#98A0FF\",\n          shadowOffset: {\n            width: 0,\n            height: 4,\n          },\n          shadowOpacity: 0.32,\n          shadowRadius: 5.46,\n\n          elevation: 9,\n        }}\n      >\n        {/* <TextInput style={{height:40, backgroundColor:\"white\", width:\"75%\", padding:5, outline}} placeholder=\"Search for crops...\" autoFocus={true}/> */}\n        <TextInput\n          style={\n            Platform.OS === \"web\" && {\n              outlineColor: \"#fff\",\n              height: 40,\n              backgroundColor: \"white\",\n              width: \"85%\",\n              padding: 5,\n              fontSize: 20,\n            }\n          }\n          onFocus={onHit}\n          placeholder={holderValue}\n          autoFocus={visible}\n          editable={visible}\n          onChangeText={(text) => {\n            let a = text.toLowerCase();\n            console.log(a);\n            var setting = [];\n            var typer = [];\n\n            {\n              {\n                Data.map((item, cIndex) => setting.push(item.name));\n              }\n            }\n\n            {\n              {\n                Data.map((item, cIndex) => typer.push(item.type));\n              }\n            }\n            console.log(setting);\n            for (let i = 0; i < setting.length; i++) {\n              var b = setting[i].toLowerCase();\n              var c = typer[i].toLowerCase();\n              var result = b.includes(a);\n\n              if (result == true) {\n                newdata.push(setting[i]);\n                console.log(\"New Data : \" + newdata);\n              } else {\n                null;\n              }\n            }\n          }}\n        />\n\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n          <TouchableOpacity>\n            <View\n              style={{\n                width: 35,\n                height: 35,\n                borderColor: \"#8790FF\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"#3A48ED\",\n                borderRadius: 35,\n              }}\n            >\n              <SimpleLineIcons name=\"magnifier\" size={20} color=\"#fff\" />\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n      <View></View>\n    </View>\n  );\n}\n\nexport default SearchBar;\n","import { SimpleLineIcons } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Platform,\n  Image,\n  Dimensions,\n} from \"react-native\";\nimport SearchBar from \"./SearchBar\";\n\nexport interface ScrollHeaderProps {\n  scrolled?: boolean;\n  visible?: boolean;\n  headerTap(): any;\n  headHolder?: string;\n}\n\nfunction ScrollHeader(props: ScrollHeaderProps) {\n  const [sugg, setsugg] = useState(null);\n  const { scrolled, visible, headerTap, headHolder } = props;\n  const windowWidth = Dimensions.get(\"window\").width;\n\n  return (\n    <View\n      style={{\n        width: \"100%\",\n        marginTop: windowWidth > 767 ? 5 : 2,\n        alignItems: \"center\",\n        alignSelf: \"center\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n        marginLeft: windowWidth > 800 ? 50 : 0,\n        padding: 5,\n      }}\n    >\n      {windowWidth < 767 ? (\n        <View style={{ alignItems: \"center\" }}>\n          <Image\n            source={require(\"../../assets/newlogo.png\")}\n            style={{ width: 100, height: 50 }}\n          />\n        </View>\n      ) : null}\n\n      <View style={{ marginTop: -5, width: \"100%\" }}>\n        <SearchBar onHit={headerTap} holderValue={headHolder} />\n      </View>\n    </View>\n  );\n}\n\nexport default ScrollHeader;\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n  TextInput,\n  Platform,\n  ScrollView,\n} from \"react-native\";\nimport Header from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport Farmers from \"../data/farmers.json\";\nimport Data from \"../data/items.json\";\nimport { Modalize } from \"react-native-modalize\";\nimport hideNumber from \"../utils/hideNumber\";\nimport getSmallString from \"../utils/getSmallString\";\nimport {\n  AntDesign,\n  Entypo,\n  Feather,\n  FontAwesome,\n  FontAwesome5,\n  SimpleLineIcons,\n} from \"@expo/vector-icons\";\nimport { BlurView } from \"expo-blur\";\nimport States from \"../data/states.json\";\nimport ScrollHeader from \"../components/ScrollHeader\";\nimport Card from \"../components/Card\";\n\nconst Search = ({ navigation }) => {\n  const [blur, setblur] = useState(true);\n  const [term, setterm] = useState(\"\");\n  const [placer, setplacer] = useState(false);\n  const [farmer, setfarmer] = useState(0);\n  const [openFilter, setopenFilter] = useState(false);\n  const [toggleCheckBox, setToggleCheckBox] = useState(false);\n  const [val, setval] = useState(\"\");\n  const [addr, setaddr] = useState(\"\");\n  const [genFilterfinal, setgenFilterfinal] = useState([]);\n  const [hideFAB, sethideFAB] = useState(false);\n  const [parent, setparent] = useState(false);\n  const [genderSelected, setgenderSelected] = useState(false);\n  const [filteractive, setfilteractive] = useState(false);\n  const [addrToggle, setaddrToggle] = useState(false);\n  const [merge, setmerge] = useState(false);\n\n  const setSearch = (text: string) => {\n    let dynamic = text.toLowerCase();\n    console.log(\"dynamic: \" + dynamic);\n  };\n\n  const [crop, setcrop] = useState([]);\n  const [farmers, setfarmers] = useState([]);\n  const [modalName, setmodalName] = useState(\"\");\n  const cropper = \"rice\";\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/b2bRequirement/fetch/farmers\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        gender: null,\n        harvestDate: null,\n        state: \"Bihar\",\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => setfarmers(data.data.list))\n      .catch((error) => console.error(error));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/b2bRequirement/fetch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: cropper,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => setcrop(data.data.list))\n      .catch((error) => console.error(error));\n  }, []);\n\n  console.log(crop);\n  console.log(farmers);\n\n  const filteredCrops = Data.filter((item) => {\n    return item.name.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredParents = Data.filter((item) => {\n    return item.type.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredFarmers = Farmers.filter((item) => {\n    return item.crop.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const genderFilter = filteredFarmers.filter((item) => {\n    if (val) {\n      return item.gender.toLocaleLowerCase() === val.toLowerCase();\n    }\n  });\n\n  const addrFilter = filteredFarmers.filter((item) => {\n    if (addr) {\n      return item.address.toLocaleLowerCase() === addr.toLowerCase();\n    }\n  });\n\n  const applyFilterFinal = [genderFilter, addrFilter].flat();\n\n  const modalizeRef = useRef<Modalize>(null);\n\n  const modalizeFilterRef = useRef<Modalize>(null);\n\n  const mergeResult = (genderFilter && addrFilter).filter((item) => {\n    // if (val && addr) {\n\n    // }\n    // if (addr && !val) {\n    //   return item.address.toLocaleLowerCase() === addr.toLowerCase();\n    // }\n    // if (val && !addr) {\n    //   return item.gender.toLocaleLowerCase() === val.toLowerCase();\n    // }\n    return (\n      item.gender.toLocaleLowerCase() === val.toLowerCase() &&\n      item.address.toLocaleLowerCase() === addr.toLowerCase()\n    );\n  });\n\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onClose = () => {\n    modalizeRef.current?.close();\n  };\n\n  const onOpenfilter = () => {\n    modalizeFilterRef.current?.open();\n  };\n\n  const onCloseFilter = () => {\n    modalizeFilterRef.current?.close();\n  };\n\n  const genderData = [\n    {\n      key: \"male\",\n      text: \"Male\",\n    },\n    {\n      key: \"female\",\n      text: \"Female\",\n    },\n    {\n      key: \"other\",\n      text: \"Other\",\n    },\n  ];\n\n  return (\n    <View style={styles.container}>\n      {/* <View style={{ marginTop: 40, width: \"100%\", elevation: 1000 }}>\n        <Header onTap={() => navigation.navigate(\"Search\")} />\n      </View> */}\n      <View\n        style={{\n          flexDirection: winWidth > 767 ? \"row\" : \"column\",\n          width: \"100%\",\n\n          height: \"100%\",\n        }}\n      >\n        {winWidth > 767 ? (\n          <View\n            style={{\n              backgroundColor: \"#8cbaff\",\n              width: \"30%\",\n              height: \"100%\",\n              alignItems: \"center\",\n\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 24, alignSelf: \"flex-start\" }}>\n              Welcome to Krisearch\n            </Text>\n            <Text\n              style={{\n                fontSize: 24,\n                marginBottom: 20,\n                alignSelf: \"flex-start\",\n              }}\n            >\n              Lets start discovering Farmers\n            </Text>\n            <View\n              style={{\n                flexDirection: \"row\",\n                width: \"100%\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            >\n              <View style={{ marginTop: 20 }}>\n                <Button\n                  title=\"Go to Home\"\n                  onPress={() => navigation.navigate(\"Home\")}\n                />\n              </View>\n              <View style={{ marginTop: 20 }}>\n                <Button\n                  title=\"Go to Profile\"\n                  onPress={() => navigation.navigate(\"Profile\")}\n                />\n              </View>\n            </View>\n          </View>\n        ) : null}\n\n        <View\n          style={{\n            backgroundColor: \"#deebff\",\n            width: winWidth > 767 ? \"70%\" : \"100%\",\n            height: \"100%\",\n            alignItems: \"flex-start\",\n            justifyContent: \"center\",\n          }}\n        >\n          {/* <Button\n            title=\"Go to Home\"\n            onPress={() => navigation.navigate(\"Home\")}\n          />\n          <Button title=\"Set Blur\" onPress={() => setblur(!blur)} /> */}\n\n          <View\n            style={{\n              marginBottom: 10,\n              width: \"100%\",\n              alignItems: \"center\",\n              height: winHeight * 0.99,\n            }}\n          >\n            <View\n              style={{\n                width: winWidth > 767 ? winWidth * 0.45 : winWidth * 0.9,\n              }}\n            >\n              <ScrollHeader\n                headerTap={() => {\n                  setblur(!blur), setterm(\"\"), setparent(false);\n                }}\n                headHolder={\n                  placer && parent\n                    ? term\n                    : parent\n                    ? term\n                    : \"Search for crops...\"\n                }\n              />\n            </View>\n\n            <Text\n              style={{\n                marginTop: 10,\n                padding: 5,\n                fontWeight: \"500\",\n                color: \"#6F6F6F\",\n                fontSize: 18,\n              }}\n            >\n              Showing results for {term}\n            </Text>\n\n            {/* <View style={{ width: \"100%\", flexDirection: \"row\" }}>\n              <TouchableOpacity\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  marginRight: 5,\n                  backgroundColor: \"blue\",\n                }}\n              >\n                <Text>{val ? val : \"\"}</Text>\n                <AntDesign\n                  name=\"close\"\n                  size={20}\n                  color=\"#fff\"\n                  onPress={() => setval(\"\")}\n                />\n              </TouchableOpacity>\n              <TouchableOpacity>\n                <Text>{addr ? addr : \"\"}</Text>\n              </TouchableOpacity>\n            </View> */}\n            {placer ? (\n              !parent ? (\n                <View\n                  style={{\n                    width: winWidth > 767 ? \"80%\" : \"90%\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  {/* <Text\n                    style={{\n                      marginTop: 60,\n                      padding: 5,\n                      fontWeight: \"500\",\n                      color: \"#6F6F6F\",\n                      fontSize: 20,\n                    }}\n                  >\n                    {term}\n                  </Text> */}\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-start\",\n                    }}\n                  >\n                    <TouchableOpacity\n                      style={{\n                        top: 10,\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-between\",\n                        backgroundColor: \"#949cff\",\n                        height: 30,\n                        padding: 3,\n                        borderRadius: 5,\n                        marginBottom: 20,\n                        marginRight: 20,\n                      }}\n                      onPress={() => {\n                        console.log(\"Biharma\"),\n                          sethideFAB(true),\n                          onOpenfilter();\n                      }}\n                    >\n                      <AntDesign name=\"filter\" size={15} color=\"#3A48ED\" />\n                      <Text\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"500\",\n                          marginLeft: 2,\n                          color: \"#fff\",\n                        }}\n                      >\n                        {\" \"}\n                        Filter Results\n                      </Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: val ? \"#fff\" : \"#deebff\",\n                        padding: 5,\n                        height: 30,\n                        borderRadius: 10,\n                      }}\n                    >\n                      <Text style={{ color: \"#000\" }}>{val ? val : null}</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: addr ? \"#fff\" : \"#deebff\",\n                        padding: 5,\n                        height: 30,\n                        borderRadius: 10,\n                      }}\n                    >\n                      <Text style={{ color: \"#000\" }}>\n                        {addr ? addr : null}\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              ) : (\n                <View>\n                  <Text\n                    style={{\n                      marginTop: 60,\n                      padding: 5,\n                      fontWeight: \"500\",\n                      color: \"#6F6F6F\",\n                    }}\n                  >\n                    {term}\n                  </Text>\n                </View>\n              )\n            ) : parent ? (\n              <View>\n                <Text\n                  style={{\n                    marginTop: 60,\n                    padding: 5,\n                    fontWeight: \"500\",\n                    color: \"#6F6F6F\",\n                  }}\n                >\n                  {term}\n                </Text>\n              </View>\n            ) : (\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text\n                  style={{\n                    marginTop: 60,\n                    padding: 5,\n                    fontWeight: \"500\",\n                    color: \"#6F6F6F\",\n                  }}\n                >\n                  {term}\n                </Text>\n                <TouchableOpacity\n                  style={{\n                    top: 20,\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    backgroundColor: \"#949cff\",\n                    height: 30,\n                    padding: 3,\n                    borderRadius: 5,\n                  }}\n                  onPress={() => {\n                    console.log(\"Biharma\"), sethideFAB(true), onOpenfilter();\n                  }}\n                >\n                  <AntDesign name=\"filter\" size={15} color=\"#3A48ED\" />\n                  <Text\n                    style={{\n                      fontSize: 15,\n                      fontWeight: \"500\",\n                      marginLeft: 2,\n                      color: \"#fff\",\n                    }}\n                  >\n                    {\" \"}\n                    Filter Results\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            )}\n            {/* {placer ? (\n            <TouchableOpacity\n              style={{ alignSelf: \"flex-end\", top: -23, width: 50, height: 20 }}\n              onPress={() => {\n                onOpenfilter();\n              }}\n            >\n              Filter\n            </TouchableOpacity>\n          ) : null} */}\n            <View\n              style={{\n                width: \"100%\",\n                height: 1,\n                backgroundColor: \"#96c1ff\",\n              }}\n            ></View>\n            <ScrollView showsVerticalScrollIndicator={false} bounces={true}>\n              {parent ? (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n                    alignItems: \"flex-start\",\n                    justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                >\n                  {filteredParents.map((item, cIndex) => {\n                    return (\n                      <Card\n                        key={item.id}\n                        name={item.name}\n                        avatar={item.image}\n                        isCrop={true}\n                        onPress={() => {\n                          setparent(!parent), setterm(item.name);\n                        }}\n                      />\n                    );\n                  })}\n                </View>\n              ) : filteractive ? (\n                merge ? (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"flex-start\",\n                      justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                      padding: winWidth > 767 ? 10 : 2,\n                    }}\n                  >\n                    {mergeResult.map((item, cIndex) => {\n                      return (\n                        <Card\n                          key={item.id}\n                          name={item.name}\n                          avatar={item.avatar}\n                          phone={item.phone}\n                          address={item.address}\n                          crop={item.crop}\n                          onPress={() => {\n                            setfarmer(item.id), onOpen(), sethideFAB(true);\n                          }}\n                          cropAvatar={item.image}\n                        />\n                      );\n                    })}\n                  </View>\n                ) : val && !addr ? (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"flex-start\",\n                      justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                      padding: winWidth > 767 ? 10 : 2,\n                    }}\n                  >\n                    {genderFilter.map((item, cIndex) => {\n                      return (\n                        <Card\n                          key={item.id}\n                          name={item.name}\n                          avatar={item.avatar}\n                          phone={item.phone}\n                          address={item.address}\n                          crop={item.crop}\n                          onPress={() => {\n                            setfarmer(item.id), onOpen(), sethideFAB(true);\n                          }}\n                          cropAvatar={item.image}\n                        />\n                      );\n                    })}\n                  </View>\n                ) : !val && addr ? (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"flex-start\",\n                      justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                      padding: winWidth > 767 ? 10 : 2,\n                    }}\n                  >\n                    {addrFilter.map((item, cIndex) => {\n                      return (\n                        <Card\n                          key={item.id}\n                          name={item.name}\n                          avatar={item.avatar}\n                          phone={item.phone}\n                          address={item.address}\n                          crop={item.crop}\n                          onPress={() => {\n                            setfarmer(item.id), onOpen();\n                          }}\n                          cropAvatar={item.image}\n                        />\n                      );\n                    })}\n                  </View>\n                ) : (\n                  <Text>No Result Found</Text>\n                )\n              ) : (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n                    alignItems: \"flex-start\",\n                    justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                >\n                  {filteredFarmers.map((item, cIndex) => {\n                    return (\n                      <Card\n                        key={item.id}\n                        name={item.name}\n                        avatar={item.avatar}\n                        phone={item.phone}\n                        address={item.address}\n                        crop={item.crop}\n                        onPress={() => {\n                          setfarmer(item.id), onOpen(), sethideFAB(true);\n                        }}\n                        cropAvatar={item.image}\n                      />\n                    );\n                  })}\n                </View>\n              )}\n              <View\n                style={{\n                  height: 60,\n                  width: \"100%\",\n                  backgroundColor: \"transparent\",\n                  marginTop: 10,\n                }}\n              ></View>\n            </ScrollView>\n            <Modalize\n              ref={modalizeRef}\n              modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.95}\n              modalStyle={\n                winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n              }\n              threshold={100}\n              closeOnOverlayTap={true}\n              mod\n            >\n              {filteredFarmers.map((item, cIndex) => {\n                let kisan = farmer;\n                if (kisan == item.id) {\n                  return (\n                    <View>\n                      <View\n                        style={{\n                          backgroundColor: \"#3A48ED\",\n                          width: \"100%\",\n                          height: 170,\n                          borderWidth: 1,\n                          top: -2,\n                          borderRadius: 15,\n                          borderColor: \"#3A48ED\",\n                          shadowColor: \"#000\",\n                          shadowOffset: {\n                            width: 0,\n                            height: 4,\n                          },\n                          shadowOpacity: 0.32,\n                          shadowRadius: 5.46,\n\n                          elevation: 11,\n                        }}\n                      >\n                        {/* <Text>{item.name}</Text>\n                        <Text>{item.address}</Text>\n                        <Image source={item.avatar} style={{height:50, width:50}}/>\n                   <Text>{farmer}</Text> */}\n                        <TouchableOpacity\n                          onPress={() => {\n                            onClose(), sethideFAB(false);\n                          }}\n                          style={{\n                            alignItems: \"center\",\n                            marginTop: 5,\n                            marginRight: 2,\n                            padding: 5,\n                            justifyContent: \"center\",\n                            alignSelf: \"flex-end\",\n                            backgroundColor: \"rgba(0,0,0,0.2)\",\n                            borderRadius: 10,\n                            height: 35,\n                            width: 70,\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              justifyContent: \"space-between\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <Text\n                              style={{\n                                fontSize: 15,\n                                fontWeight: 500,\n                                color: \"#fff\",\n                                marginRight: 5,\n                              }}\n                            >\n                              Close\n                            </Text>\n                            <SimpleLineIcons\n                              name=\"close\"\n                              size={15}\n                              color=\"#fff\"\n                              onPress={() => {\n                                onClose(), sethideFAB(false);\n                              }}\n                            />\n                          </View>\n                        </TouchableOpacity>\n                        <View\n                          style={{\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                            padding: 2,\n                            top: -10,\n                          }}\n                        >\n                          <View\n                            style={{\n                              width: \"40%\",\n                              height: \"100%\",\n                              padding: 5,\n                            }}\n                          >\n                            <Image\n                              source={{ uri: item.avatar }}\n                              style={{\n                                height: 120,\n                                width: 120,\n                                borderRadius: 120,\n                                borderColor: \"#fff\",\n                                borderWidth: 2,\n                              }}\n                            />\n                          </View>\n                          <View\n                            style={{\n                              flexDirection: \"column\",\n                              alignItems: \"center\",\n                              justifyContent: \"space-evenly\",\n                              width: \"60%\",\n                              height: \"100%\",\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"column\",\n                                alignItems: \"flex-start\",\n                                width: \"100%\",\n                                height: \"100%\",\n                                justifyContent: \"space-evenly\",\n                              }}\n                            >\n                              <View style={{ flexDirection: \"row\" }}>\n                                <Feather name=\"user\" size={20} color=\"#fff\" />\n                                <Text\n                                  style={{\n                                    fontSize: 20,\n                                    color: \"#fff\",\n                                    fontWeight: \"700\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  {getSmallString(item.name)}\n                                </Text>\n                              </View>\n                              <View style={{ flexDirection: \"row\" }}>\n                                <Feather\n                                  name=\"map-pin\"\n                                  size={20}\n                                  color=\"#fff\"\n                                />\n                                <Text\n                                  style={{\n                                    fontSize: 20,\n                                    color: \"#fff\",\n                                    fontWeight: \"700\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  {item.address}\n                                </Text>\n                              </View>\n                              <View style={{ flexDirection: \"row\" }}>\n                                <Feather name=\"user\" size={20} color=\"#fff\" />\n                                <Text\n                                  style={{\n                                    fontSize: 20,\n                                    color: \"#fff\",\n                                    fontWeight: \"700\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  {hideNumber(item.phone)}\n                                </Text>\n                              </View>\n                            </View>\n                          </View>\n                        </View>\n                        <View style={{ top: -40 }}>\n                          <Text\n                            style={{\n                              marginTop: winWidth < 400 ? 40 : 60,\n                              padding: 5,\n                              fontWeight: \"500\",\n                              color: \"#6F6F6F\",\n                              fontSize: 20,\n                              marginLeft: 5,\n                            }}\n                          >\n                            Farming Details\n                          </Text>\n                          <View\n                            style={{\n                              width: \"95%\",\n                              alignSelf: \"center\",\n                              height: 1,\n                              backgroundColor: \"#C0C0C0\",\n                            }}\n                          ></View>\n                          <View\n                            style={{\n                              flexDirection: \"column\",\n                              marginTop: 10,\n                              padding: 10,\n                              height: winWidth < 400 ? 100 : 180,\n                              justifyContent: \"space-between\",\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                                width: \"100%\",\n                                justifyContent: \"space-between\",\n                                marginBottom: 10,\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <Entypo\n                                    name=\"leaf\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      fontWeight: \"600\",\n                                    }}\n                                  >\n                                    Crop\n                                  </Text>\n                                </View>\n                                <View>\n                                  {Data.map((cropName, cIndex) => {\n                                    let a = cropName.name.toLowerCase();\n                                    let b = item.crop?.toLowerCase();\n                                    let result = a.localeCompare(b);\n\n                                    if (a == b) {\n                                      return (\n                                        <View\n                                          style={{\n                                            flexDirection: \"row\",\n                                            alignItems: \"center\",\n                                          }}\n                                        >\n                                          <Image\n                                            source={{ uri: cropName.image }}\n                                            style={{\n                                              height: 30,\n                                              width: 30,\n                                              borderWidth: 1,\n                                              borderRadius: 30,\n                                              borderColor: \"#3ECF8E\",\n                                            }}\n                                          />\n                                          <Text\n                                            style={{\n                                              fontSize: 20,\n                                              marginLeft: 5,\n                                            }}\n                                          >\n                                            {cropName.name}\n                                          </Text>\n                                        </View>\n                                      );\n                                    } else {\n                                      null;\n                                    }\n                                  })}\n                                </View>\n                              </View>\n\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                  alignItems: \"flex-end\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <SimpleLineIcons\n                                    name=\"calendar\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      marginLeft: 5,\n                                      fontWeight: \"600\",\n                                    }}\n                                  >\n                                    Harvest Date\n                                  </Text>\n                                </View>\n                                <View>\n                                  <Text style={{ fontSize: 20, marginLeft: 5 }}>\n                                    {item.harvestDate}\n                                  </Text>\n                                </View>\n                              </View>\n                            </View>\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                                width: \"100%\",\n                                justifyContent: \"space-between\",\n                                marginTop: 5,\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <SimpleLineIcons\n                                    name=\"size-fullscreen\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      fontWeight: \"600\",\n                                      marginLeft: 5,\n                                    }}\n                                  >\n                                    Farming Area\n                                  </Text>\n                                </View>\n                                <View>\n                                  <Text style={{ fontSize: 20 }}>\n                                    {item.area} Kattha\n                                  </Text>\n                                </View>\n                              </View>\n\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                  alignItems: \"flex-end\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <SimpleLineIcons\n                                    name=\"speedometer\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      marginLeft: 5,\n                                      fontWeight: \"600\",\n                                    }}\n                                  >\n                                    Quantity\n                                  </Text>\n                                </View>\n                                <View>\n                                  <Text style={{ fontSize: 20, marginLeft: 5 }}>\n                                    {item.quantity} quintal\n                                  </Text>\n                                </View>\n                              </View>\n                            </View>\n                            <View></View>\n                          </View>\n                          <View\n                            style={{\n                              width: \"95%\",\n                              alignSelf: \"center\",\n                              height: 1,\n                              backgroundColor: \"#C0C0C0\",\n                              marginTop: winWidth < 400 ? 30 : 10,\n                            }}\n                          />\n                        </View>\n                        <View\n                          style={{\n                            width: \"100%\",\n                            flexDirection: \"column\",\n                            top: -29,\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <Text\n                            style={{\n                              fontSize: 15,\n                              color: \"#808080\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            Coming soon\n                          </Text>\n                          <View\n                            style={{\n                              width: \"100%\",\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                              justifyContent: \"space-evenly\",\n                              top: 5,\n                            }}\n                          >\n                            <TouchableOpacity\n                              style={{\n                                width: winWidth < 400 ? 90 : 120,\n                                height: winWidth < 400 ? 30 : 50,\n                                backgroundColor: \"#A9A9A9\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                flexDirection: \"row\",\n                                borderRadius: 10,\n                              }}\n                              onPress={() =>\n                                alert(\n                                  \"Click to chat feature helps you connect directly to this farmer in one click. Feature Coming soon !\"\n                                )\n                              }\n                            >\n                              <FontAwesome5\n                                name=\"whatsapp\"\n                                size={25}\n                                color=\"#fff\"\n                              />\n                              <Text\n                                style={{\n                                  fontSize: winWidth < 400 ? 16 : 20,\n                                  color: \"#fff\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                Chat\n                              </Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity\n                              style={{\n                                width: winWidth < 400 ? 90 : 120,\n                                height: winWidth < 400 ? 30 : 50,\n                                backgroundColor: \"#A9A9A9\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                flexDirection: \"row\",\n                                borderRadius: 10,\n                              }}\n                              onPress={() => alert(\"Feature Coming soon !\")}\n                            >\n                              <Text\n                                style={{\n                                  fontSize: winWidth < 400 ? 16 : 20,\n                                  color: \"#fff\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                Buy\n                              </Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity\n                              style={{\n                                width: winWidth < 400 ? 90 : 120,\n                                height: winWidth < 400 ? 30 : 50,\n                                backgroundColor: \"#fff\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                flexDirection: \"row\",\n                                borderRadius: 10,\n                                borderColor: \"#A9A9A9\",\n                                borderWidth: 2,\n                              }}\n                              onPress={() =>\n                                alert(\n                                  \"Support the farmer by any kind. Feature Coming Soon !\"\n                                )\n                              }\n                            >\n                              <FontAwesome\n                                name=\"handshake-o\"\n                                size={25}\n                                color=\"#A9A9A9\"\n                              />\n                              <Text\n                                style={{\n                                  fontSize: winWidth < 400 ? 16 : 20,\n                                  color: \"#A9A9A9\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                Support\n                              </Text>\n                            </TouchableOpacity>\n                          </View>\n                        </View>\n                      </View>\n                    </View>\n                  );\n                } else {\n                  null;\n                }\n              })}\n            </Modalize>\n\n            <Modalize\n              ref={modalizeFilterRef}\n              modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.95}\n              modalStyle={\n                winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n              }\n              threshold={100}\n              closeOnOverlayTap={true}\n              mod\n            >\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  padding: 5,\n                }}\n              >\n                <Text\n                  style={{\n                    padding: 5,\n                    fontWeight: \"500\",\n                    color: \"#6F6F6F\",\n                    fontSize: 20,\n                    marginLeft: 5,\n                  }}\n                >\n                  Filter resuts here\n                </Text>\n                {/* <TouchableOpacity onPress={() => onCloseFilter()}>\n                Close Filter\n              </TouchableOpacity> */}\n                <TouchableOpacity\n                  onPress={() => {\n                    onCloseFilter(), sethideFAB(false);\n                  }}\n                  style={{\n                    alignItems: \"center\",\n                    marginTop: 5,\n                    marginRight: 2,\n                    padding: 5,\n                    justifyContent: \"center\",\n                    alignSelf: \"flex-end\",\n                    backgroundColor: \"#000\",\n                    borderRadius: 10,\n                    height: 35,\n                    width: 70,\n                  }}\n                >\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 15,\n                        fontWeight: 500,\n                        color: \"#fff\",\n                        marginRight: 5,\n                      }}\n                    >\n                      Close\n                    </Text>\n                    <SimpleLineIcons\n                      name=\"close\"\n                      size={15}\n                      color=\"#fff\"\n                      onPress={() => {\n                        onCloseFilter(), sethideFAB(false);\n                      }}\n                    />\n                  </View>\n                </TouchableOpacity>\n              </View>\n              <View\n                style={{\n                  width: \"95%\",\n                  alignSelf: \"center\",\n                  height: 1,\n                  backgroundColor: \"#C0C0C0\",\n                  marginTop: 10,\n                  alignItems: \"center\",\n                }}\n              ></View>\n              <Text\n                style={{\n                  color: \"#6F6F6F\",\n                  fontSize: 15,\n                  marginTop: 3,\n                  marginLeft: 7,\n                }}\n              >\n                By gender\n              </Text>\n              <View\n                style={{\n                  width: \"60%\",\n                  marginTop: 10,\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-start\",\n                  padding: 5,\n\n                  alignSelf: \"flex-start\",\n                }}\n              >\n                {genderData.map((item) => {\n                  return (\n                    <View key={item.key} style={styles.buttonContainer}>\n                      <TouchableOpacity\n                        style={styles.circle}\n                        onPress={() => {\n                          setfilteractive(true);\n                          setval(item.key);\n                          // toggler(item.key);\n                          // let a = item.text;\n                          // let b = filteredFarmers.filter((i) => {\n                          //   return i.gender.toLowerCase() === a.toLowerCase();\n                          // });\n                          // console.log(item.text);\n                          // console.log(a);\n                          // console.log(b);\n                        }}\n                      >\n                        {val === item.key && (\n                          <View style={styles.checkedCircle} />\n                        )}\n                      </TouchableOpacity>\n                      <Text style={{ fontSize: 16, marginLeft: 5 }}>\n                        {item.text}\n                      </Text>\n                    </View>\n                  );\n                })}\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  marginTop: 10,\n                  flexDirection: \"column\",\n                  alignItems: \"flex-start\",\n                  justifyContent: \"space-evenly\",\n                  padding: 5,\n                  alignSelf: \"flex-start\",\n                }}\n              >\n                <View\n                  style={{\n                    width: \"95%\",\n                    alignSelf: \"center\",\n                    height: 1,\n                    backgroundColor: \"#C0C0C0\",\n                    marginTop: 10,\n                    alignItems: \"center\",\n                  }}\n                ></View>\n                <Text\n                  style={{\n                    color: \"#6F6F6F\",\n                    fontSize: 15,\n                    marginTop: 10,\n                    marginLeft: 0,\n                    marginBottom: 5,\n                  }}\n                >\n                  By States\n                </Text>\n\n                <TouchableOpacity\n                  onPress={() => setaddrToggle(!addrToggle)}\n                  style={{\n                    flexDirection: \"row\",\n                    backgroundColor: \"#d6d9ff\",\n                    borderWidth: 2,\n                    borderColor: \"#7b42ff\",\n                    borderRadius: 10,\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    padding: 5,\n                    minWidth: \"30%\",\n                    marginBottom: 10,\n                  }}\n                >\n                  <Text style={{ fontSize: 15 }}>\n                    {addr ? addr : \"All States\"}\n                  </Text>\n                  <AntDesign name=\"down\" size={12} />\n                </TouchableOpacity>\n                {addrToggle ? (\n                  <View style={{ marginTop: 10 }}>\n                    {States.map((item) => {\n                      return (\n                        <View key={item.code} style={styles.buttonnewContainer}>\n                          <TouchableOpacity\n                            style={styles.circle}\n                            onPress={() => {\n                              setfilteractive(true);\n                              setaddr(item.name);\n                              setaddrToggle(false);\n                              // toggler(item.key);\n                              // let a = item.text;\n                              // let b = filteredFarmers.filter((i) => {\n                              //   return i.gender.toLowerCase() === a.toLowerCase();\n                              // });\n                              // console.log(item.text);\n                              // console.log(a);\n                              // console.log(b);\n                            }}\n                          >\n                            {addr === item.name && (\n                              <View style={styles.checkedCircle} />\n                            )}\n                          </TouchableOpacity>\n                          <Text style={{ fontSize: 16, marginLeft: 5 }}>\n                            {item.name}\n                          </Text>\n                        </View>\n                      );\n                    })}\n                  </View>\n                ) : null}\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  marginTop: 10,\n                  flexDirection: \"column\",\n                  alignItems: \"flex-start\",\n                  justifyContent: \"space-evenly\",\n                  padding: 5,\n                  alignSelf: \"flex-start\",\n                }}\n              >\n                <View\n                  style={{\n                    width: \"95%\",\n                    alignSelf: \"center\",\n                    height: 1,\n                    backgroundColor: \"#C0C0C0\",\n                    marginTop: 10,\n                    alignItems: \"center\",\n                  }}\n                ></View>\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-evenly\",\n                  top: 5,\n                }}\n              >\n                <TouchableOpacity\n                  style={{\n                    width: 120,\n                    height: 50,\n                    backgroundColor: \"#fff\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n\n                    borderRadius: 10,\n                    borderColor: \"#3A48ED\",\n                    borderWidth: 2,\n                  }}\n                  onPress={() => {\n                    setmerge(false),\n                      setfilteractive(false),\n                      onCloseFilter(),\n                      setval(\"\"),\n                      setaddr(\"\");\n                    sethideFAB(!hideFAB);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 20,\n                      color: \"#3A48ED\",\n                    }}\n                  >\n                    Reset\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={{\n                    width: 120,\n                    height: 50,\n                    backgroundColor: \"#3ECF8E\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n\n                    borderRadius: 10,\n                    borderColor: \"#3ECF8E\",\n                    borderWidth: 2,\n                  }}\n                  onPress={() => {\n                    // !merge && filteractive ? setmerge(false) : setmerge(true);\n                    (!val && addr && !merge) || (val && !addr && !merge)\n                      ? setfilteractive(true)\n                      : !val && !addr && merge\n                      ? (setmerge(true), setfilteractive(false))\n                      : setmerge(true);\n                    onCloseFilter();\n                    sethideFAB(false);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 20,\n                      color: \"#fff\",\n                    }}\n                  >\n                    Apply\n                  </Text>\n                </TouchableOpacity>\n              </View>\n              <View\n                style={{\n                  height: 60,\n                  width: \"100%\",\n                  backgroundColor: \"#fff\",\n                  marginTop: 10,\n                }}\n              ></View>\n            </Modalize>\n          </View>\n        </View>\n      </View>\n      {blur ? (\n        <View\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n            position: \"absolute\",\n          }}\n        >\n          <BlurView\n            tint=\"dark\"\n            intensity={40}\n            style={[StyleSheet.absoluteFill, styles.nonBlurredContent]}\n          >\n            <View\n              style={{\n                marginTop: 20,\n                padding: 5,\n                height: \"100%\",\n              }}\n            >\n              <View\n                style={{\n                  backgroundColor: \"#fff\",\n                  height: 55,\n                  width: \"97%\",\n                  alignSelf: \"center\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  borderRadius: 8,\n                  padding: 20,\n                  shadowColor: \"#98A0FF\",\n                  shadowOffset: {\n                    width: 0,\n                    height: 4,\n                  },\n                  shadowOpacity: 0.32,\n                  shadowRadius: 5.46,\n\n                  elevation: 9,\n                }}\n              >\n                {/* <TextInput style={{height:40, backgroundColor:\"white\", width:\"75%\", padding:5, outline}} placeholder=\"Search for crops...\" autoFocus={true}/> */}\n                <TextInput\n                  style={\n                    Platform.OS === \"web\" && {\n                      outlineColor: \"#fff\",\n                      height: 40,\n                      backgroundColor: \"white\",\n                      width: \"95%\",\n                      padding: 5,\n                      fontSize: 20,\n                    }\n                  }\n                  placeholder=\"Search for Crops\"\n                  value={term}\n                  autoFocus={true}\n                  editable={blur}\n                  onChangeText={(text) => {\n                    console.log(text), setterm(text), setSearch(text);\n                  }}\n                />\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  {term ? (\n                    <TouchableOpacity\n                      onPress={() => {\n                        setterm(\"\");\n                      }}\n                    >\n                      <View\n                        style={{\n                          width: 25,\n                          height: 25,\n                          borderWidth: 2,\n                          borderColor: \"#A1C7FF\",\n                          alignItems: \"center\",\n                          alignSelf: \"flex-end\",\n                          justifyContent: \"center\",\n                          right: -10,\n                          backgroundColor: \"#A1C7FF\",\n                          borderRadius: 25,\n                        }}\n                      >\n                        <AntDesign name=\"close\" size={20} color=\"#3A48ED\" />\n                      </View>\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n              </View>\n              <View style={{ flex: 1, alignItems: \"center\", width: \"100%\" }}>\n                {/* <TouchableOpacity style={{width:\"100%\", height:30, alignItems:\"center\", justifyContent:\"center\", backgroundColor:\"transparent\"}} onPress={()=>{setplacer(true),setblur(!blur)}}>\n<Text>{term}</Text>\n</TouchableOpacity> */}\n                {term !== null ? (\n                  <View\n                    style={{\n                      width: \"97%\",\n                      alignItems: \"center\",\n                      backgroundColor: \"#fff\",\n                      borderRadius: 10,\n                      margin: 5,\n                    }}\n                  >\n                    <View\n                      style={{\n                        width: \"100%\",\n                        alignItems: \"flex-start\",\n                        padding: 5,\n                        marginBottom: 10,\n                        marginTop: 5,\n                      }}\n                    >\n                      {filteredCrops.length > 0 ? (\n                        <Text\n                          style={{\n                            marginLeft: 20,\n                            fontSize: 15,\n                            fontWeight: \"600\",\n                          }}\n                        >\n                          Available Crops\n                        </Text>\n                      ) : (\n                        <Text\n                          style={{\n                            marginLeft: 20,\n                            fontSize: 15,\n                            fontWeight: \"600\",\n                            alignSelf: \"center\",\n                          }}\n                        >\n                          🤔 ....That seems to be missing...\n                        </Text>\n                      )}\n                    </View>\n\n                    {filteredCrops.map((item, cIndex) => {\n                      return (\n                        <View\n                          style={{\n                            width:\n                              winWidth > 768 ? winWidth - 80 : winWidth - 50,\n                            height: 45,\n                            padding: 5,\n                            borderRadius: 8,\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                            backgroundColor: \"#fff\",\n                            margin: 2,\n                          }}\n                        >\n                          <TouchableOpacity\n                            onPress={() => {\n                              setplacer(true),\n                                setblur(!blur),\n                                setterm(item.name);\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                              }}\n                            >\n                              <Image\n                                source={{ uri: item.image }}\n                                style={{\n                                  height: 35,\n                                  width: 35,\n                                  borderColor: \"green\",\n                                  borderWidth: 1,\n                                  borderRadius: 35,\n                                }}\n                              />\n                              <Text style={{ fontSize: 20 }}> {item.name}</Text>\n                              <Text\n                                style={{\n                                  fontSize: 15,\n                                  alignSelf: \"center\",\n                                  color: \"#989898\",\n                                }}\n                              >\n                                {\" \"}\n                                in{\" \"}\n                              </Text>\n                              <Text style={{ fontSize: 15 }}>{item.type}</Text>\n                            </View>\n                          </TouchableOpacity>\n                          <TouchableOpacity\n                            style={{\n                              backgroundColor: \"#3ECF8E\",\n                              height: \"100%\",\n                              alignItems: \"center\",\n                              justifyContent: \"center\",\n                              padding: 5,\n                              borderRadius: 5,\n                              alignSelf: \"flex-end\",\n                            }}\n                            onPress={() => {\n                              setparent(!parent),\n                                setterm(item.type),\n                                setplacer(!placer),\n                                setblur(!blur);\n                            }} //true\n                          >\n                            <Text style={{ fontSize: 15, color: \"#fff\" }}>\n                              View {item.type}s\n                            </Text>\n                          </TouchableOpacity>\n                        </View>\n                      );\n                    })}\n                  </View>\n                ) : null}\n              </View>\n            </View>\n          </BlurView>\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default Search;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginRight: 5,\n  },\n  buttonnewContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    marginRight: 5,\n    marginTop: 2,\n  },\n\n  circle: {\n    height: 30,\n    width: 30,\n    borderRadius: 15,\n    borderWidth: 1,\n    borderColor: \"#3A48ED\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  checkedCircle: {\n    width: 15,\n    height: 15,\n    borderRadius: 7,\n    backgroundColor: \"#3A48ED\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { Button, StyleSheet, Text, View, Image } from \"react-native\";\n\nconst Welcome = ({ navigation }) => {\n  setTimeout(() => {\n    navigation.replace(\"Home\");\n  }, 2000);\n\n  return (\n    <View style={[styles.container, { backgroundColor: \"#fff\" }]}>\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <Image\n          source={{ uri: require(\"../../assets/icon1.png\") }}\n          style={{ height: 50, width: 50 }}\n        />\n        <Text style={{ color: \"#346beb\", fontSize: 34 }}>Krisearch</Text>\n      </View>\n\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n};\n\nexport default Welcome;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\nimport Header from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\n\nconst Profile = ({ navigation }) => {\n  return (\n    <View style={styles.container}>\n      <View style={{ marginTop: 40, width: \"100%\", elevation: 1000 }}>\n        <Header onTap={() => navigation.navigate(\"Search\")} />\n      </View>\n\n      <View\n        style={{\n          flexDirection: winWidth > 767 ? \"row\" : \"column\",\n          width: \"100%\",\n          backgroundColor: \"pink\",\n          height: \"100%\",\n        }}\n      >\n        {winWidth > 767 ? (\n          <View\n            style={{\n              backgroundColor: \"#8cbaff\",\n              width: \"30%\",\n              height: \"100%\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Button\n              title=\"GO to Home\"\n              onPress={() => navigation.navigate(\"Home\")}\n            />\n          </View>\n        ) : null}\n\n        <View\n          style={{\n            backgroundColor: \"#deebff\",\n            width: winWidth > 767 ? \"70%\" : \"100%\",\n            height: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Button\n            title=\"GO to Search\"\n            onPress={() => navigation.navigate(\"Search\")}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Profile;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import React from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { winWidth, winHeight } from \"./src/utils/window\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Home from \"./src/screens/HomeScreen\";\nimport Search from \"./src/screens/SearchScreen\";\nimport Welcome from \"./src/screens/SplashScreen\";\nimport Header from \"../claro_krisearch/src/components/header\";\nimport Profile from \"./src/screens/ProfileScreen\";\nimport { Feather } from \"@expo/vector-icons\";\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction MyTabBar({ state, descriptors, navigation }) {\n  const focusedOptions = descriptors[state.routes[state.index].key].options;\n\n  if (focusedOptions.tabBarVisible === false) {\n    return null;\n  }\n\n  return (\n    <KeyboardAvoidingView>\n      <View style={{ flexDirection: \"row\" }}>\n        {state.routes.map((route, index) => {\n          const { options } = descriptors[route.key];\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const isFocused = state.index === index;\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: \"tabPress\",\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!isFocused && !event.defaultPrevented) {\n              navigation.navigate(route.name);\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: \"tabLongPress\",\n              target: route.key,\n            });\n          };\n\n          if (index === 1) {\n            return (\n              <TouchableOpacity\n                accessibilityRole=\"button\"\n                accessibilityState={isFocused ? { selected: true } : {}}\n                accessibilityLabel={options.tabBarAccessibilityLabel}\n                testID={options.tabBarTestID}\n                onPress={onPress}\n                onLongPress={onLongPress}\n                style={{\n                  flex: 1,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: 65,\n                  width: 65,\n                  backgroundColor: isFocused ? \"#346beb\" : \"#fff\",\n                  position: \"absolute\",\n                  left: winWidth / 2 - 30,\n                  bottom: 15,\n                  margin: 5,\n                  borderRadius: 35,\n                  borderWidth: 2,\n                  borderColor: isFocused ? \"#fff\" : \"#deebff\",\n                }}\n              >\n                {/* <Text style={{ color: isFocused ? \"#673ab7\" : \"#222\" }}>\n                {label}\n              </Text> */}\n                <Feather\n                  name=\"search\"\n                  size={30}\n                  color={isFocused ? \"#fff\" : \"#346beb\"}\n                />\n              </TouchableOpacity>\n            );\n          }\n\n          return (\n            <TouchableOpacity\n              accessibilityRole=\"button\"\n              accessibilityState={isFocused ? { selected: true } : {}}\n              accessibilityLabel={options.tabBarAccessibilityLabel}\n              testID={options.tabBarTestID}\n              onPress={onPress}\n              onLongPress={onLongPress}\n              style={{\n                flex: 1,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: 56,\n              }}\n            >\n              {/* <Text style={{ color: isFocused ? \"#673ab7\" : \"#222\" }}>\n              {label}\n            </Text> */}\n\n              <View>\n                {index == 0 ? (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      borderWidth: 2,\n                      backgroundColor: isFocused ? \"#deebff\" : \"transparent\",\n                      borderColor: isFocused ? \"#deebff\" : \"transparent\",\n                      width: \"110%\",\n                      borderRadius: 20,\n                      padding: 5,\n                    }}\n                  >\n                    <Feather\n                      name=\"home\"\n                      size={20}\n                      color={isFocused ? \"#346beb\" : \"#222\"}\n                    />\n                    {isFocused ? (\n                      <Text\n                        style={{\n                          fontSize: 16,\n                          marginLeft: 15,\n                          color: \"#346beb\",\n                        }}\n                      >\n                        {label}\n                      </Text>\n                    ) : null}\n                  </View>\n                ) : (\n                  <View>\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        borderWidth: 2,\n                        backgroundColor: isFocused ? \"#deebff\" : \"transparent\",\n                        borderColor: isFocused ? \"#deebff\" : \"transparent\",\n                        width: \"110%\",\n                        borderRadius: 20,\n                        padding: 5,\n                      }}\n                    >\n                      <Feather\n                        name=\"user\"\n                        size={20}\n                        color={isFocused ? \"#346beb\" : \"#222\"}\n                      />\n                      {isFocused ? (\n                        <Text\n                          style={{\n                            fontSize: 16,\n                            marginLeft: 15,\n                            color: \"#346beb\",\n                          }}\n                        >\n                          {label}\n                        </Text>\n                      ) : null}\n                    </View>\n                  </View>\n                )}\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      {winWidth > 767 ? (\n        <Stack.Navigator\n          screenOptions={{\n            headerStyle: {\n              backgroundColor: \"#346beb\",\n            },\n            headerTintColor: \"#fff\",\n            headerTitleStyle: {\n              fontWeight: \"bold\",\n            },\n            headerShown: false,\n          }}\n        >\n          <Stack.Screen\n            name=\"Welcome\"\n            component={Welcome}\n            options={{ headerShown: false }}\n          />\n          <Stack.Screen\n            name=\"Home\"\n            component={Home}\n            options={{\n              title: \"Krisearch\",\n            }}\n          />\n          <Stack.Screen name=\"Search\" component={Search} />\n          <Stack.Screen\n            name=\"Profile\"\n            component={Profile}\n            options={{\n              title: \"Profile\",\n            }}\n          />\n        </Stack.Navigator>\n      ) : (\n        <Tab.Navigator\n          tabBar={(props) => <MyTabBar {...props} />}\n          tabBarOptions={{\n            keyboardHidesTabBar: true,\n          }}\n        >\n          <Tab.Screen name=\"Home\" component={Home} />\n          <Tab.Screen name=\"Search\" component={Search} />\n          <Tab.Screen name=\"Profile\" component={Profile} />\n        </Tab.Navigator>\n      )}\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/newicon2.43b8ac0c.png\";","module.exports = __webpack_public_path__ + \"static/media/newlogo.a840e510.png\";","module.exports = __webpack_public_path__ + \"static/media/icon1.0fd4d1c9.png\";"],"sourceRoot":""}