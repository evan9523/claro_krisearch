{"version":3,"sources":["src/utils/window.ts","src/components/header.tsx","src/utils/hideNumber.ts","src/components/Card.tsx","src/utils/getSmallString.ts","src/screens/HomeScreen.tsx","src/screens/SearchScreen.tsx","src/screens/SplashScreen.tsx","src/screens/ProfileScreen.tsx","App.tsx","assets/newicon2.png","assets/icon1.png"],"names":["winHeight","Dimensions","get","height","winWidth","width","Header","props","onTap","onLogoTap","catTap","View","style","styles","header","top","flexDirection","alignSelf","alignItems","justifyContent","onPress","Image","source","uri","require","Text","headerText","TextInput","fontSize","backgroundColor","outlineColor","borderRadius","padding","marginTop","placeholder","placeholderTextColor","onFocus","flex","marginRight","color","AntDesign","name","size","StyleSheet","create","fontWeight","marginLeft","hideNumber","phone","a","toString","split","splice","Card","avatar","crop","address","isCrop","cropAvatar","windowWidth","TouchableOpacity","borderWidth","borderColor","margin","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","Entypo","getSmallString","str","length","substring","Home","navigation","useState","farmer","setfarmer","modalizeRef","useRef","onClose","current","close","setcrop","farmers","setfarmers","setmodalName","firstScroll","setfirstScroll","selectedState","cats","setcats","console","log","useEffect","fetch","method","headers","Accept","body","JSON","stringify","gender","harvestDate","state","then","response","json","data","list","slice","catch","error","container","navigate","FlatList","showsVerticalScrollIndicator","renderItem","item","key","id","farmerName","farmerImage","crops","map","i","cropName","quantity","open","onOpen","ListEmptyComponent","ActivityIndicator","contentContainerStyle","flexWrap","onEndReached","ref","modalHeight","threshold","modalStyle","closeOnOverlayTap","mod","cIndex","SimpleLineIcons","Feather","land","alert","FontAwesome5","FontAwesome","Search","blur","setblur","term","setterm","placer","setplacer","val","setval","addr","setaddr","hideFAB","sethideFAB","parent","setparent","filteractive","setfilteractive","addrToggle","setaddrToggle","merge","setmerge","Date","value","onChange","renderFarmers","filteredCrops","Data","filter","toLocaleLowerCase","includes","toLowerCase","filteredParents","type","filteredFarmers","genderFilter","addrFilter","flat","modalizeFilterRef","mergeResult","onOpenfilter","onCloseFilter","left","Ionicons","bottom","ScrollView","bounces","image","text","buttonContainer","circle","checkedCircle","minWidth","States","code","buttonnewContainer","position","tint","intensity","absoluteFill","nonBlurredContent","Platform","OS","autoFocus","editable","onChangeText","dynamic","setSearch","right","Welcome","setTimeout","replace","StatusBar","Profile","Button","title","Stack","createStackNavigator","Tab","createBottomTabNavigator","MyTabBar","descriptors","routes","index","options","tabBarVisible","KeyboardAvoidingView","route","label","undefined","tabBarLabel","isFocused","event","emit","target","canPreventDefault","defaultPrevented","onLongPress","accessibilityRole","accessibilityState","selected","accessibilityLabel","tabBarAccessibilityLabel","testID","tabBarTestID","App","NavigationContainer","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","headerShown","Screen","component","tabBar","tabBarOptions","keyboardHidesTabBar","module","exports"],"mappings":"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","file":"static/js/app.6f9c4e7d.chunk.js","sourcesContent":["import { Dimensions } from 'react-native';\nexport const winHeight = Dimensions.get(\"window\").height;\n\nexport const winWidth = Dimensions.get(\"window\").width;\n","import React from \"react\";\nimport {\n  Button,\n  TextInput,\n  Dimensions,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n} from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { winWidth } from \"../utils/window\";\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  FontAwesome5,\n  FontAwesome,\n  AntDesign,\n} from \"@expo/vector-icons\";\n\nconst windowHeight = Dimensions.get(\"screen\").height;\nconst windowWidth = Dimensions.get(\"screen\").width;\n\nexport interface HeaderProps {\n  onTap(): any;\n  onLogoTap(): any;\n  catTap(): any;\n}\n\nconst Header = (props: HeaderProps) => {\n  const { onTap, onLogoTap, catTap } = props;\n  return (\n    <View style={styles.header}>\n      <View\n        style={{\n          width: winWidth < 767 ? \"100%\" : \"70%\",\n          top: winWidth > 767 ? 5 : 10,\n          height: \"100%\",\n          flexDirection: \"row\",\n          alignSelf: \"flex-start\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <TouchableOpacity\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"flex-start\",\n            justifyContent: \"flex-start\",\n            top: winWidth > 767 ? 5 : 10,\n          }}\n          onPress={onLogoTap}\n        >\n          <Image\n            source={{ uri: require(\"../../assets/newicon2.png\") }}\n            style={{ width: 30, height: 30, top: -2 }}\n          />\n          <Text style={styles.headerText}>Krisearch</Text>\n        </TouchableOpacity>\n\n        <TextInput\n          style={{\n            width: \"50%\",\n            height: winWidth > 767 ? 40 : 35,\n            fontSize: winWidth > 767 ? 20 : 16,\n            backgroundColor: \"#fff\",\n            outlineColor: \"#fff\",\n            borderRadius: 10,\n            padding: 5,\n            marginTop: 10,\n          }}\n          placeholder=\"Search for Crops...\"\n          placeholderTextColor=\"#000\"\n          onFocus={onTap}\n        />\n      </View>\n      <View\n        style={{\n          alignSelf: \"center\",\n          alignItems: \"flex-end\",\n          flex: 1,\n\n          top: 10,\n          justifyContent: \"flex-end\",\n        }}\n      >\n        <TouchableOpacity\n          style={{\n            alignSelf: \"center\",\n            alignItems: \"flex-end\",\n            justifyContent: \"flex-end\",\n            backgroundColor: \"#03329e\",\n            flexDirection: \"row\",\n            padding: 5,\n            borderRadius: 20,\n          }}\n          onPress={catTap}\n        >\n          <Text style={{ fontSize: 20, marginRight: 5, color: \"#fff\" }}>\n            Categories\n          </Text>\n          <AntDesign name=\"downcircleo\" size={20} color=\"#fff\" />\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nexport default Header;\n\nconst styles = StyleSheet.create({\n  header: {\n    width: \"100%\",\n    height: 90,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"#346beb\",\n    padding: 5,\n  },\n  headerText: {\n    fontSize: winWidth > 767 ? 22 : 20,\n    color: \"#fff\",\n    fontWeight: \"600\",\n    marginLeft: 2,\n    alignSelf: \"flex-start\",\n  },\n});\n","const hideNumber = (phone : number)=>{\n    var a=[];\n    var b;\n    var c;\n    var newString=[];\n    let i=0;\n\n    a = phone.toString().split('');\n   \n    a.splice(1,0,\"X\");\n    a.splice(3,2,\"X\");\n    a.splice(6,5,\"X\");\n    a.splice(1,0,\"X\");\n   \n    \n    return a;\n\n    \n\n\n}\n\nexport default hideNumber","import { Entypo, MaterialIcons, SimpleLineIcons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Dimensions,\n  Image,\n} from \"react-native\";\nimport getSmallString from \"../utils/getSmallString\";\nimport hideNumber from \"../utils/hideNumber\";\n\nexport interface CardProps {\n  name: string;\n  avatar?: string;\n  crop?: string;\n  phone?: number;\n  address?: string;\n  onPress: any;\n  cropAvatar?: string;\n  isCrop?: boolean;\n}\n\nexport default function Card(props: CardProps) {\n  const {\n    name,\n    avatar,\n    crop,\n    phone,\n    address,\n    onPress,\n    cropAvatar,\n    isCrop,\n  } = props;\n\n  const windowWidth = Dimensions.get(\"window\").width;\n  const cardWidth = windowWidth / 2 - 30;\n\n  return (\n    <TouchableOpacity onPress={() => onPress()}>\n      <View\n        style={\n          windowWidth > 767\n            ? {\n                width: 200,\n                height: 185,\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderColor: \"#fff\",\n                borderRadius: 10,\n                alignItems: \"center\",\n                margin: 5,\n                marginBottom: 5,\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 3,\n                },\n                shadowOpacity: 0.15,\n                shadowRadius: 2.22,\n\n                elevation: 3,\n              }\n            : {\n                width: windowWidth * 0.45,\n                height: 185,\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderColor: \"#fff\",\n                borderRadius: 10,\n                alignItems: \"center\",\n                margin: 6,\n\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 3,\n                },\n                shadowOpacity: 0.15,\n                shadowRadius: 2.22,\n\n                elevation: 3,\n              }\n        }\n      >\n        <Image\n          source={{ uri: avatar }}\n          style={\n            !isCrop\n              ? {\n                  width: 100,\n                  height: 100,\n                  borderWidth: 1,\n                  borderColor: \"#fff\",\n                  borderRadius: 100,\n                }\n              : {\n                  width: 140,\n                  height: 140,\n                  borderWidth: 1,\n                  borderColor: \"#fff\",\n                  borderRadius: 100,\n                }\n          }\n        />\n        <Text style={{ fontWeight: \"500\", marginTop: 10 }}>{name}</Text>\n\n        {!isCrop ? (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-evenly\",\n              alignItems: \"center\",\n              marginTop: 10,\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Text> {crop}</Text>\n            </View>\n            <Entypo name=\"dot-single\" size={15} style={{ top: 10 }} />\n            <View>\n              <Text>{address}</Text>\n            </View>\n          </View>\n        ) : null}\n\n        {!isCrop ? (\n          <View>\n            <Text>{phone ? hideNumber(phone) : \"Not available\"}</Text>\n          </View>\n        ) : null}\n      </View>\n    </TouchableOpacity>\n  );\n}\n","const getSmallString=(str : string)=>{\n    if(str.length>20){\n        str =str.substring(0,19)+\"...\";\n        return str;\n    }\n    else{\n        return str\n    }\n}\n\nexport default getSmallString","import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  Dimensions,\n  ScrollView,\n  StyleSheet,\n  Text,\n  Image,\n  TouchableOpacity,\n  View,\n  ActivityIndicator,\n  FlatList,\n} from \"react-native\";\nimport Header, { HeaderProps } from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport Farmers from \"../data/farmers.json\";\nimport Crops from \"../data/items.json\";\nimport { Modalize } from \"react-native-modalize\";\nimport Card from \"../components/Card\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  FontAwesome5,\n  FontAwesome,\n} from \"@expo/vector-icons\";\nimport hideNumber from \"../utils/hideNumber\";\nimport getSmallString from \"../utils/getSmallString\";\nimport States from \"../data/states.json\";\nimport Data from \"../data/items.json\";\n\nconst Home = ({ navigation }) => {\n  const [farmer, setfarmer] = useState(0);\n  const modalizeRef = useRef<Modalize>(null);\n\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onClose = () => {\n    modalizeRef.current?.close();\n  };\n\n  const [isLoading, setLoading] = useState(true);\n  const [sata, setSata] = useState([]);\n\n  const cropper = \"rice\";\n\n  const [crop, setcrop] = useState([]);\n  const [farmers, setfarmers] = useState([]);\n  const [modalName, setmodalName] = useState(\"\");\n  const [firstScroll, setfirstScroll] = useState(0);\n  const [selectedState, setselectedState] = useState(\"\");\n  const [cats, setcats] = useState(false);\n\n  // useEffect(() => {\n  //   fetch(\"http://staging.clarolabs.in:7050/b2bRequirement/fetch/crops\", {\n  //     method: \"post\",\n  //     headers: {\n  //       Accept: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify({\n  //       name: cropper,\n  //     }),\n  //   })\n  //     .then((response) => console.log(response.json()))\n  //     .then((data) => console.log(data))\n  //     .catch((error) => console.error(error));\n  // }, []);\n  console.log(\"REACHING HOME\");\n\n  useEffect(() => {\n    fetch(\"https://maps.claroenergy.in/Ksearch/fetch/farmers\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        gender: null,\n        harvestDate: null,\n        state: selectedState,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => setfarmers(data.data.list.slice(0, firstScroll + 24)))\n      .catch((error) => console.error(error));\n  }, [firstScroll]);\n\n  useEffect(() => {\n    fetch(\"https://maps.claroenergy.in/Ksearch/fetch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: cropper,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => setcrop(data.data.list))\n      .catch((error) => console.error(error));\n  }, []);\n\n  console.log(crop);\n  console.log(farmers);\n\n  const selectState = () => {\n    States.map((item) => {\n      console.log(item.name);\n      farmers.map((i) => {\n        console.log(i.state);\n        if (\n          item.name.toString().toLowerCase() ===\n          i.state.toString().toLowerCase()\n        ) {\n          setselectedState(item.name);\n        }\n      });\n    });\n  };\n\n  const selectCrop = () => {};\n\n  const handleLoad = () => {\n    setfirstScroll(firstScroll + 18);\n  };\n\n  const renderItems = ({ item }) => (\n    <Card\n      key={item.id}\n      name={item.farmerName}\n      avatar={item.farmerImage}\n      phone={item.phone}\n      address={item.state}\n      crop={item.crops.map((i) => i.cropName)}\n      onPress={() => {\n        console.log(item.farmerName),\n          setfarmer(item.id),\n          console.log(item.crops.map((i) => i.quantity));\n        onOpen(), setmodalName(item.farmerName);\n      }}\n    />\n  );\n\n  return (\n    <View style={styles.container}>\n      {/* <View\n        style={{\n          marginTop: 40,\n          width: \"100%\",\n          elevation: 1000,\n        }}\n      >\n        <Header onTap={() => navigation.navigate(\"Search\")} />\n      </View> */}\n\n      <View\n        style={{\n          flexDirection: winWidth > 767 ? \"row\" : \"column\",\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      >\n        <View\n          style={{\n            backgroundColor: \"#deebff\",\n            width: winWidth > 767 ? \"100%\" : \"100%\",\n            height: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Header\n            onTap={() => navigation.navigate(\"Search\")}\n            onLogoTap={() => console.log(\"Home active\")}\n            catTap={() => setcats(!cats)}\n          />\n\n          {/* <Button\n            title=\"GO to Search\"\n            onPress={() => navigation.navigate(\"Search\")}\n          /> */}\n          {/* {winWidth < 767 ? (\n            <View\n              style={{\n                width: \"100%\",\n                height: 50,\n                backgroundColor: \"#346beb\",\n                padding: 7,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 4,\n                },\n                shadowOpacity: 0.32,\n                shadowRadius: 5.46,\n\n                elevation: 9,\n              }}\n            >\n              <TextInput\n                style={{\n                  width: \"60%\",\n                  height: 40,\n                  fontSize: 20,\n                  backgroundColor: \"#fff\",\n                  outlineColor: \"#346beb\",\n                  borderRadius: 10,\n                  padding: 5,\n                }}\n                placeholder=\"Search for Crops\"\n                onFocus={() => navigation.navigate(\"Search\")}\n              />\n              <View\n                style={{\n                  width: 35,\n                  height: 35,\n                  borderColor: \"#fff\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  backgroundColor: \"#deebff\",\n                  borderRadius: 35,\n                }}\n              >\n                <SimpleLineIcons name=\"magnifier\" size={20} color=\"#346beb\" />\n              </View>\n            </View>\n          ) : null} */}\n\n          {/* <Button\n            title=\"Loadmore\"\n            onPress={() => setfirstScroll(firstScroll + 5)}\n          /> */}\n\n          <View style={{ width: \"100%\", height: 25, backgroundColor: \"red\" }}>\n            <Text>See by category</Text>\n          </View>\n          <View\n            style={{\n              width: \"100%\",\n              height: winHeight * 0.86,\n            }}\n          >\n            {farmers.length > 10 ? (\n              <FlatList\n                showsVerticalScrollIndicator={false}\n                data={farmers}\n                renderItem={renderItems}\n                ListEmptyComponent={() => (\n                  <View style={styles.container}>\n                    <ActivityIndicator size=\"large\" />\n                  </View>\n                )}\n                contentContainerStyle={{\n                  flexDirection: \"row\",\n                  width: \"100%\",\n                  flexWrap: \"wrap\",\n                  alignItems: \"center\",\n                  justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                  padding: winWidth > 767 ? 10 : 2,\n                }}\n                onEndReached={handleLoad}\n              />\n            ) : null}\n          </View>\n          {/* <ScrollView\n            showsVerticalScrollIndicator={false}\n            onScrollEndDrag={() => setfirstScroll(firstScroll + 5)}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                width: \"100%\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                padding: winWidth > 767 ? 10 : 2,\n              }}\n            >\n              {farmers.map((item, cIndex) => {\n                return (\n                  <Card\n                    key={item.id}\n                    name={item.farmerName}\n                    avatar={item.farmerImage}\n                    phone={item.phone}\n                    address={item.state}\n                    crop={item.crops.map((i) => i.cropName)}\n                    onPress={() => {\n                      console.log(item.farmerName),\n                        setfarmer(item.id),\n                        console.log(item.crops.map((i) => i.quantity));\n                      onOpen(), setmodalName(item.farmerName);\n                    }}\n                  />\n                );\n              })}\n            </View>\n            {winWidth < 767 ? (\n              <View\n                style={{\n                  height: 60,\n                  width: \"100%\",\n                  backgroundColor: \"transparent\",\n                  marginTop: 10,\n                }}\n              ></View>\n            ) : null}\n          </ScrollView> */}\n        </View>\n      </View>\n      <Modalize\n        ref={modalizeRef}\n        modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.95}\n        threshold={100}\n        modalStyle={winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null}\n        // modalStyle={{ position: \"absolute\", width: \"100%\", zIndex: 999 }}\n        // modalStyle={\n        //   winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n        // }\n        closeOnOverlayTap={true}\n        mod\n      >\n        {farmers.map((item, cIndex) => {\n          if (farmer == item.id) {\n            return (\n              <View>\n                <View\n                  style={{\n                    backgroundColor: \"#3A48ED\",\n                    width: \"100%\",\n                    height: 170,\n                    borderWidth: 1,\n                    top: -2,\n                    borderRadius: 15,\n                    borderColor: \"#3A48ED\",\n                    shadowColor: \"#000\",\n                    shadowOffset: {\n                      width: 0,\n                      height: 4,\n                    },\n                    shadowOpacity: 0.32,\n                    shadowRadius: 5.46,\n\n                    elevation: 9,\n                  }}\n                >\n                  {/* <Text>{item.name}</Text>\n                        <Text>{item.address}</Text>\n                        <Image source={item.avatar} style={{height:50, width:50}}/>\n                   <Text>{farmer}</Text> */}\n                  <TouchableOpacity\n                    onPress={() => onClose()}\n                    style={{\n                      alignItems: \"center\",\n                      marginTop: 5,\n                      marginRight: 2,\n                      padding: 5,\n                      justifyContent: \"center\",\n                      alignSelf: \"flex-end\",\n                      backgroundColor: \"rgba(0,0,0,0.2)\",\n                      borderRadius: 10,\n                      height: 35,\n                      width: 70,\n                    }}\n                  >\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Text\n                        style={{\n                          fontSize: 15,\n                          fontWeight: 500,\n                          color: \"#fff\",\n                          marginRight: 5,\n                        }}\n                      >\n                        Close\n                      </Text>\n                      <SimpleLineIcons\n                        name=\"close\"\n                        size={15}\n                        color=\"#fff\"\n                        onPress={() => onClose()}\n                      />\n                    </View>\n                  </TouchableOpacity>\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      justifyContent: \"space-between\",\n                      padding: 2,\n                      top: -10,\n                    }}\n                  >\n                    <View style={{ width: \"40%\", height: \"100%\", padding: 5 }}>\n                      <Image\n                        source={{ uri: item.farmerImage }}\n                        style={{\n                          height: 120,\n                          width: 120,\n                          borderRadius: 120,\n                          borderColor: \"#fff\",\n                          borderWidth: 2,\n                        }}\n                      />\n                    </View>\n                    <View\n                      style={{\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-evenly\",\n                        width: \"60%\",\n                        height: \"100%\",\n                      }}\n                    >\n                      <View\n                        style={{\n                          flexDirection: \"column\",\n                          alignItems: \"flex-start\",\n                          width: \"100%\",\n                          height: \"100%\",\n                          justifyContent: \"space-evenly\",\n                        }}\n                      >\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Feather name=\"user\" size={20} color=\"#fff\" />\n                          <Text\n                            style={{\n                              fontSize: 20,\n                              color: \"#fff\",\n                              fontWeight: \"700\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            {getSmallString(item.farmerName)}\n                          </Text>\n                        </View>\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Feather name=\"map-pin\" size={20} color=\"#fff\" />\n                          <Text\n                            style={{\n                              fontSize: 20,\n                              color: \"#fff\",\n                              fontWeight: \"700\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            {item.state}\n                          </Text>\n                        </View>\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Feather name=\"user\" size={20} color=\"#fff\" />\n                          <Text\n                            style={{\n                              fontSize: 20,\n                              color: \"#fff\",\n                              fontWeight: \"700\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            {hideNumber(item.phone)}\n                          </Text>\n                        </View>\n                      </View>\n                    </View>\n                  </View>\n                  <View style={{ top: -40 }}>\n                    <Text\n                      style={{\n                        marginTop: winWidth < 400 ? 40 : 60,\n                        padding: 5,\n                        fontWeight: \"500\",\n                        color: \"#6F6F6F\",\n                        fontSize: 20,\n                        marginLeft: 5,\n                      }}\n                    >\n                      Farming Details\n                    </Text>\n                    <View\n                      style={{\n                        width: \"95%\",\n                        alignSelf: \"center\",\n                        height: 1,\n                        backgroundColor: \"#C0C0C0\",\n                      }}\n                    ></View>\n                    <View\n                      style={{\n                        flexDirection: \"column\",\n                        marginTop: 10,\n                        padding: 10,\n                        height: winWidth < 400 ? 100 : 180,\n                        justifyContent: \"space-between\",\n                      }}\n                    >\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          alignItems: \"center\",\n                          width: \"100%\",\n                          justifyContent: \"space-between\",\n                          marginBottom: 10,\n                        }}\n                      >\n                        <View style={{ flexDirection: \"column\", width: \"50%\" }}>\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <Entypo name=\"leaf\" size={20} color=\"#9F99FF\" />\n                            <Text\n                              style={{\n                                fontSize: 12,\n                                color: \"#6F6F6F\",\n                                fontWeight: \"600\",\n                              }}\n                            >\n                              Crop\n                            </Text>\n                          </View>\n                          <View>\n                            <Text style={{ fontSize: 20 }}>\n                              {item.crops.map((i) => i.cropName)}\n                            </Text>\n                          </View>\n                        </View>\n\n                        <View\n                          style={{\n                            flexDirection: \"column\",\n                            width: \"50%\",\n                            alignItems: \"flex-end\",\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <SimpleLineIcons\n                              name=\"calendar\"\n                              size={20}\n                              color=\"#9F99FF\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 12,\n                                color: \"#6F6F6F\",\n                                marginLeft: 5,\n                                fontWeight: \"600\",\n                              }}\n                            >\n                              Harvest Date\n                            </Text>\n                          </View>\n                          <View>\n                            <Text style={{ fontSize: 20 }}>\n                              {item.crops.map((i) => i.harvestDate)}\n                            </Text>\n                          </View>\n                        </View>\n                      </View>\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          alignItems: \"center\",\n                          width: \"100%\",\n                          justifyContent: \"space-between\",\n                          marginTop: 5,\n                        }}\n                      >\n                        <View style={{ flexDirection: \"column\", width: \"50%\" }}>\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <SimpleLineIcons\n                              name=\"size-fullscreen\"\n                              size={20}\n                              color=\"#9F99FF\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 12,\n                                color: \"#6F6F6F\",\n                                fontWeight: \"600\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              Farming Area\n                            </Text>\n                          </View>\n                          <View>\n                            <Text style={{ fontSize: 20 }}>\n                              {item.land} Kattha\n                            </Text>\n                          </View>\n                        </View>\n\n                        <View\n                          style={{\n                            flexDirection: \"column\",\n                            width: \"50%\",\n                            alignItems: \"flex-end\",\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <SimpleLineIcons\n                              name=\"speedometer\"\n                              size={20}\n                              color=\"#9F99FF\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 12,\n                                color: \"#6F6F6F\",\n                                marginLeft: 5,\n                                fontWeight: \"600\",\n                              }}\n                            >\n                              Quantity\n                            </Text>\n                          </View>\n                          <View>\n                            <Text style={{ fontSize: 20, marginLeft: 5 }}>\n                              {item.crops.map((i) => i.quantity) / 100} q\n                            </Text>\n                          </View>\n                        </View>\n                      </View>\n                      <View></View>\n                    </View>\n                    <View\n                      style={{\n                        width: \"95%\",\n                        alignSelf: \"center\",\n                        height: 1,\n                        backgroundColor: \"#C0C0C0\",\n                        marginTop: winWidth < 400 ? 30 : 10,\n                      }}\n                    />\n                  </View>\n                  <View\n                    style={{\n                      width: \"100%\",\n                      flexDirection: \"column\",\n                      top: -29,\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 15,\n                        color: \"#808080\",\n                        marginLeft: 5,\n                      }}\n                    >\n                      Coming soon\n                    </Text>\n                    <View\n                      style={{\n                        width: \"100%\",\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-evenly\",\n                        top: 5,\n                      }}\n                    >\n                      <TouchableOpacity\n                        style={{\n                          width: winWidth < 400 ? 90 : 120,\n                          height: winWidth < 400 ? 30 : 50,\n                          backgroundColor: \"#A9A9A9\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          flexDirection: \"row\",\n                          borderRadius: 10,\n                        }}\n                        onPress={() =>\n                          alert(\n                            \"Click to chat feature helps you connect directly to this farmer in one click. Feature Coming soon !\"\n                          )\n                        }\n                      >\n                        <FontAwesome5 name=\"whatsapp\" size={20} color=\"#fff\" />\n                        <Text\n                          style={{\n                            fontSize: winWidth < 400 ? 16 : 20,\n                            color: \"#fff\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          Chat\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity\n                        style={{\n                          width: winWidth < 400 ? 90 : 120,\n                          height: winWidth < 400 ? 30 : 50,\n                          backgroundColor: \"#A9A9A9\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          flexDirection: \"row\",\n                          borderRadius: 10,\n                        }}\n                        onPress={() => alert(\"Feature Coming soon !\")}\n                      >\n                        <Text\n                          style={{\n                            fontSize: winWidth < 400 ? 16 : 20,\n                            color: \"#fff\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          Buy\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity\n                        style={{\n                          width: winWidth < 400 ? 90 : 120,\n                          height: winWidth < 400 ? 40 : 50,\n                          backgroundColor: \"#fff\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          flexDirection: \"row\",\n                          borderRadius: 10,\n                          borderColor: \"#A9A9A9\",\n                          borderWidth: 2,\n                        }}\n                        onPress={() =>\n                          alert(\n                            \"Support the farmer by any kind. Feature Coming Soon !\"\n                          )\n                        }\n                      >\n                        <FontAwesome\n                          name=\"handshake-o\"\n                          size={15}\n                          color=\"#A9A9A9\"\n                        />\n                        <Text\n                          style={{\n                            fontSize: winWidth < 400 ? 16 : 20,\n                            color: \"#A9A9A9\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          Support\n                        </Text>\n                      </TouchableOpacity>\n                    </View>\n                  </View>\n                </View>\n              </View>\n            );\n          } else {\n            null;\n          }\n        })}\n      </Modalize>\n    </View>\n  );\n};\n\nexport default Home;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: winHeight,\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n  TextInput,\n  Platform,\n  ScrollView,\n  ActivityIndicator,\n  FlatList,\n} from \"react-native\";\nimport Header from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport Farmers from \"../data/farmers.json\";\nimport Data from \"../data/items.json\";\nimport { Modalize } from \"react-native-modalize\";\nimport hideNumber from \"../utils/hideNumber\";\nimport getSmallString from \"../utils/getSmallString\";\nimport {\n  AntDesign,\n  Entypo,\n  Feather,\n  FontAwesome,\n  FontAwesome5,\n  SimpleLineIcons,\n  Ionicons,\n} from \"@expo/vector-icons\";\nimport { BlurView } from \"expo-blur\";\nimport States from \"../data/states.json\";\nimport ScrollHeader from \"../components/ScrollHeader\";\nimport Card from \"../components/Card\";\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\n\nconst Search = ({ navigation }) => {\n  const [blur, setblur] = useState(true);\n  const [term, setterm] = useState(\"\");\n  const [placer, setplacer] = useState(false);\n  const [farmer, setfarmer] = useState(0);\n  const [openFilter, setopenFilter] = useState(false);\n  const [toggleCheckBox, setToggleCheckBox] = useState(false);\n  const [val, setval] = useState(\"\");\n  const [addr, setaddr] = useState(\"\");\n  const [genFilterfinal, setgenFilterfinal] = useState([]);\n  const [hideFAB, sethideFAB] = useState(false);\n  const [parent, setparent] = useState(false);\n  const [genderSelected, setgenderSelected] = useState(false);\n  const [filteractive, setfilteractive] = useState(false);\n  const [addrToggle, setaddrToggle] = useState(false);\n  const [merge, setmerge] = useState(false);\n\n  const setSearch = (text: string) => {\n    let dynamic = text.toLowerCase();\n    console.log(\"dynamic: \" + dynamic);\n  };\n\n  const [crop, setcrop] = useState([]);\n  const [farmers, setfarmers] = useState([]);\n  const [modalName, setmodalName] = useState(\"\");\n  const [selectedState, setselectedState] = useState(\"\");\n  const [value, onChange] = useState([new Date(), new Date()]);\n  const cropper = \"\";\n\n  useEffect(() => {\n    fetch(\"https://maps.claroenergy.in/Ksearch/fetch/farmers\", {\n      method: \"post\",\n\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        gender: null,\n        harvestDate: null,\n        state: selectedState,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => setfarmers(data.data.list))\n      .catch((error) => console.error(error));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"https://maps.claroenergy.in/Ksearch/fetch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: cropper,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => setcrop(data.data.list))\n      .catch((error) => console.error(error));\n  }, []);\n\n  console.log(crop);\n  console.log(farmers);\n\n  const selectState = () => {\n    States.map((item) => {\n      console.log(item.name);\n      farmers.map((i) => {\n        console.log(i.state);\n        if (\n          item.name.toString().toLowerCase() ===\n          i.state.toString().toLowerCase()\n        ) {\n          setselectedState(item.name);\n        }\n      });\n    });\n  };\n\n  const renderFarmers = ({ item }) => (\n    <Card\n      key={item.id}\n      name={item.farmerName}\n      avatar={item.farmerImage}\n      phone={item.phone}\n      address={item.state}\n      crop={item.crops.map((i) => i.cropName)}\n      onPress={() => {\n        console.log(item.farmerName),\n          setfarmer(item.id),\n          console.log(item.crops.map((i) => i.quantity));\n        onOpen(), setmodalName(item.farmerName);\n      }}\n    />\n  );\n\n  const filteredCrops = Data.filter((item) => {\n    return item.name.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredParents = Data.filter((item) => {\n    return item.type.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredFarmers = farmers.filter((item) => {\n    let a = item.crops.map((i) => i.cropName);\n    return a.toString().toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const genderFilter = filteredFarmers.filter((item) => {\n    if (val) {\n      return item.gender.toLocaleLowerCase() === val.toLowerCase();\n    }\n  });\n\n  const addrFilter = filteredFarmers.filter((item) => {\n    if (addr) {\n      return item.state.toLocaleLowerCase() === addr.toLowerCase();\n    }\n  });\n\n  console.log(filteredFarmers);\n\n  const applyFilterFinal = [genderFilter, addrFilter].flat();\n\n  const modalizeRef = useRef<Modalize>(null);\n\n  const modalizeFilterRef = useRef<Modalize>(null);\n\n  console.log(genderFilter);\n\n  const mergeResult = filteredFarmers.filter((item) => {\n    // if (val && addr) {\n    // }\n    // if (addr && !val) {\n    //   return item.address.toLocaleLowerCase() === addr.toLowerCase();\n    // }\n    // if (val && !addr) {\n    //   return item.gender.toLocaleLowerCase() === val.toLowerCase();\n    // }\n    return (\n      item.gender.toLowerCase() === val.toLowerCase() &&\n      item.state.toLowerCase() === addr.toLowerCase()\n    );\n  });\n\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onClose = () => {\n    modalizeRef.current?.close();\n  };\n\n  const onOpenfilter = () => {\n    modalizeFilterRef.current?.open();\n  };\n\n  const onCloseFilter = () => {\n    modalizeFilterRef.current?.close();\n  };\n\n  const genderData = [\n    {\n      key: \"m\",\n      text: \"Male\",\n    },\n    {\n      key: \"f\",\n      text: \"Female\",\n    },\n    {\n      key: \"o\",\n      text: \"Other\",\n    },\n  ];\n\n  const renderItems = ({ item }) => (\n    <TouchableOpacity\n      onPress={() => {\n        setplacer(true), setblur(!blur), setterm(item.name);\n      }}\n      style={{ marginBottom: 2 }}\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n        }}\n      >\n        {/* <Image\n          source={{ uri: item.image }}\n          style={{\n            height: 35,\n            width: 35,\n            borderColor: \"green\",\n            borderWidth: 1,\n            borderRadius: 35,\n          }}\n        /> */}\n        <Text style={{ fontSize: 20 }}> {item.name}</Text>\n        <Text\n          style={{\n            fontSize: 15,\n            alignSelf: \"center\",\n            color: \"#989898\",\n          }}\n        >\n          {\" \"}\n          in{\" \"}\n        </Text>\n        <TouchableOpacity\n          onPress={() => {\n            setparent(!parent),\n              setterm(item.type),\n              setplacer(!placer),\n              setblur(!blur);\n          }}\n        >\n          <Text style={{ fontSize: 15, color: \"#346beb\", marginLeft: 10 }}>\n            {item.type}\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </TouchableOpacity>\n  );\n\n  return (\n    <View style={styles.container}>\n      {/* <View style={{ marginTop: 40, width: \"100%\", elevation: 1000 }}>\n        <Header onTap={() => navigation.navigate(\"Search\")} />\n      </View> */}\n      <View\n        style={{\n          flexDirection: winWidth > 767 ? \"row\" : \"column\",\n          width: \"100%\",\n\n          height: \"100%\",\n        }}\n      >\n        <View\n          style={{\n            backgroundColor: \"#deebff\",\n            width: \"100%\",\n            height: \"100%\",\n            alignItems: \"flex-start\",\n            justifyContent: \"center\",\n          }}\n        >\n          {/* <Button\n            title=\"Go to Home\"\n            onPress={() => navigation.navigate(\"Home\")}\n          />\n          <Button title=\"Set Blur\" onPress={() => setblur(!blur)} /> */}\n\n          <View\n            style={{\n              marginBottom: 10,\n              width: \"100%\",\n              alignItems: \"center\",\n              height: winHeight * 0.99,\n            }}\n          >\n            <Header\n              onTap={() => setblur(true)}\n              onLogoTap={() => navigation.navigate(\"Home\")}\n            />\n\n            {/* <View\n              style={{\n                width: winWidth > 767 ? winWidth * 0.45 : winWidth * 0.9,\n                top: winWidth > 767 ? 25 : 0,\n                flexDirection: \"row\",\n              }}\n            >\n              {winWidth > 767 ? (\n                <TouchableOpacity\n                  style={{\n                    width: 120,\n                    height: 40,\n                    backgroundColor: \"#346beb\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flexDirection: \"row\",\n                    borderRadius: 10,\n                  }}\n                  onPress={() => navigation.navigate(\"Home\")}\n                >\n                  <FontAwesome5 name=\"home\" size={20} color=\"#fff\" />\n                  <Text\n                    style={{\n                      fontSize: 16,\n                      color: \"#fff\",\n                      marginLeft: 5,\n                    }}\n                  >\n                    Go home\n                  </Text>\n                </TouchableOpacity>\n              ) : null}\n              <ScrollHeader\n                headerTap={() => {\n                  setblur(!blur), setterm(\"\"), setparent(false);\n                }}\n                headHolder={\n                  placer && parent\n                    ? term\n                    : parent\n                    ? term\n                    : \"Search for crops...\"\n                }\n              />\n            </View> */}\n            {/* \n            {term ? (\n              <Text\n                style={{\n                  marginTop: 20,\n                  padding: 5,\n                  fontWeight: \"500\",\n                  color: \"#6F6F6F\",\n                  fontSize: 18,\n                  fontStyle: \"italic\",\n                }}\n              >\n                Showing results for {term}\n              </Text>\n            ) : (\n              <Text\n                style={{\n                  marginTop: 20,\n                  padding: 5,\n                  fontWeight: \"500\",\n                  color: \"#6F6F6F\",\n                  fontSize: 18,\n                }}\n              >\n                Showing all results\n              </Text>\n            )} */}\n\n            {/* <View style={{ width: \"100%\", flexDirection: \"row\" }}>\n              <TouchableOpacity\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  marginRight: 5,\n                  backgroundColor: \"blue\",\n                }}\n              >\n                <Text>{val ? val : \"\"}</Text>\n                <AntDesign\n                  name=\"close\"\n                  size={20}\n                  color=\"#fff\"\n                  onPress={() => setval(\"\")}\n                />\n              </TouchableOpacity>\n              <TouchableOpacity>\n                <Text>{addr ? addr : \"\"}</Text>\n              </TouchableOpacity>\n            </View> */}\n            {placer ? (\n              !parent ? (\n                <View\n                  style={{\n                    width: winWidth > 767 ? \"80%\" : \"90%\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    alignSelf: \"flex-start\",\n                  }}\n                >\n                  {/* <Text\n                    style={{\n                      marginTop: 60,\n                      padding: 5,\n                      fontWeight: \"500\",\n                      color: \"#6F6F6F\",\n                      fontSize: 20,\n                    }}\n                  >\n                    {term}\n                  </Text> */}\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-start\",\n\n                      padding: 5,\n                    }}\n                  >\n                    {winWidth > 767 ? (\n                      <TouchableOpacity\n                        style={{\n                          alignItems: \"center\",\n                          marginRight: 25,\n                          left: 5,\n                          backgroundColor: \"transparent\",\n                          padding: 5,\n                          height: 30,\n                          borderWidth: 2,\n                          borderColor: \"#346beb\",\n                          borderRadius: 5,\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                        }}\n                        onPress={() => {\n                          setfilteractive(false), navigation.navigate(\"Home\");\n                        }}\n                      >\n                        <Ionicons\n                          name=\"ios-arrow-dropleft\"\n                          size={20}\n                          color=\"#346beb\"\n                        />\n                        <Text\n                          style={{\n                            color: \"#346beb\",\n                            fontWeight: \"700\",\n                            marginLeft: 5,\n                            bottom: 2,\n                          }}\n                        >\n                          Back to Home\n                        </Text>\n                      </TouchableOpacity>\n                    ) : null}\n\n                    {/* <Button\n                      title=\"GO Home\"\n                      onPress={() => navigation.navigate(\"Home\")}\n                    /> */}\n                    <TouchableOpacity\n                      style={{\n                        top: 10,\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-between\",\n                        backgroundColor: \"#949cff\",\n                        height: 30,\n                        padding: 3,\n                        borderRadius: 5,\n                        marginBottom: 20,\n                        marginRight: 20,\n                      }}\n                      onPress={() => {\n                        console.log(\"Biharma\"),\n                          sethideFAB(true),\n                          onOpenfilter();\n                      }}\n                    >\n                      <AntDesign name=\"filter\" size={15} color=\"#3A48ED\" />\n                      <Text\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"500\",\n                          marginLeft: 2,\n                          color: \"#fff\",\n                        }}\n                      >\n                        {\" \"}\n                        Filter Results\n                      </Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: term ? \"#3ECF8E\" : \"#deebff\",\n                        padding: 5,\n                        height: 30,\n                        borderRadius: 5,\n                      }}\n                    >\n                      <Text style={{ color: \"#fff\", fontWeight: \"700\" }}>\n                        {term ? term : null}\n                      </Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: val ? \"#fff\" : \"#deebff\",\n                        padding: 5,\n                        height: 30,\n                        borderRadius: 5,\n                      }}\n                    >\n                      <Text style={{ color: \"#000\" }}>{val ? val : null}</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: addr ? \"#fff\" : \"#deebff\",\n                        padding: 5,\n                        height: 30,\n                        borderRadius: 5,\n                      }}\n                    >\n                      <Text style={{ color: \"#000\" }}>\n                        {addr ? addr : null}\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              ) : (\n                <View>\n                  <Text\n                    style={{\n                      marginTop: 60,\n                      padding: 5,\n                      fontWeight: \"500\",\n                      color: \"#6F6F6F\",\n                    }}\n                  >\n                    {term}\n                  </Text>\n                </View>\n              )\n            ) : parent ? (\n              <View>\n                <Text\n                  style={{\n                    marginTop: 60,\n                    padding: 5,\n                    fontWeight: \"500\",\n                    color: \"#6F6F6F\",\n                  }}\n                >\n                  {term}\n                </Text>\n              </View>\n            ) : (\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text\n                  style={{\n                    padding: 5,\n                    fontWeight: \"500\",\n                    color: \"#6F6F6F\",\n                  }}\n                >\n                  {term}\n                </Text>\n                <TouchableOpacity\n                  style={{\n                    top: 20,\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    backgroundColor: \"#949cff\",\n                    height: 30,\n                    padding: 3,\n                    borderRadius: 5,\n                  }}\n                  onPress={() => {\n                    console.log(\"Biharma\"), sethideFAB(true), onOpenfilter();\n                  }}\n                >\n                  <AntDesign name=\"filter\" size={15} color=\"#3A48ED\" />\n                  <Text\n                    style={{\n                      fontSize: 15,\n                      fontWeight: \"500\",\n                      marginLeft: 2,\n                      color: \"#fff\",\n                    }}\n                  >\n                    {\" \"}\n                    Filter Results\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            )}\n            {/* {placer ? (\n            <TouchableOpacity\n              style={{ alignSelf: \"flex-end\", top: -23, width: 50, height: 20 }}\n              onPress={() => {\n                onOpenfilter();\n              }}\n            >\n              Filter\n            </TouchableOpacity>\n          ) : null} */}\n            <View\n              style={{\n                width: \"100%\",\n                height: 1,\n                backgroundColor: \"#96c1ff\",\n              }}\n            ></View>\n            <ScrollView showsVerticalScrollIndicator={false} bounces={true}>\n              {parent ? (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n                    alignItems: \"flex-start\",\n                    justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                >\n                  {filteredParents.map((item, cIndex) => {\n                    return (\n                      <Card\n                        key={item.id}\n                        name={item.name}\n                        avatar={item.image}\n                        isCrop={true}\n                        onPress={() => {\n                          setparent(!parent), setterm(item.name);\n                        }}\n                      />\n                    );\n                  })}\n                </View>\n              ) : filteractive ? (\n                merge ? (\n                  // <View\n                  //   style={{\n                  //     flexDirection: \"row\",\n                  //     width: \"100%\",\n                  //     flexWrap: \"wrap\",\n                  //     alignItems: \"flex-start\",\n                  //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                  //     padding: winWidth > 767 ? 10 : 2,\n                  //   }}\n                  // >\n                  //   {mergeResult.map((item, cIndex) => {\n                  //     return (\n                  //       <Card\n                  //         key={item.id}\n                  //         name={item.farmerName}\n                  //         avatar={item.farmerImage}\n                  //         phone={item.phone}\n                  //         address={item.state}\n                  //         crop={item.crops.map((i) => i.cropName)}\n                  //         onPress={() => {\n                  //           setfarmer(item.id), onOpen(), sethideFAB(true);\n                  //         }}\n                  //         cropAvatar={item.image}\n                  //       />\n                  //     );\n                  //   })}\n                  // </View>\n                  <View\n                    style={{\n                      width: \"100%\",\n                      height: winHeight * 0.89,\n                    }}\n                  >\n                    <FlatList\n                      showsVerticalScrollIndicator={false}\n                      data={mergeResult}\n                      renderItem={renderFarmers}\n                      ListEmptyComponent={() => (\n                        <View style={styles.container}>\n                          <Text style={{ fontSize: 30 }}>\n                            {\" \"}\n                            Oops ! Didnt find that\n                          </Text>\n                        </View>\n                      )}\n                      contentContainerStyle={{\n                        flexDirection: \"row\",\n                        width: \"100%\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                        padding: winWidth > 767 ? 10 : 2,\n                      }}\n                    />\n                  </View>\n                ) : val && !addr ? (\n                  // <View\n                  //   style={{\n                  //     flexDirection: \"row\",\n                  //     width: \"100%\",\n                  //     flexWrap: \"wrap\",\n                  //     alignItems: \"flex-start\",\n                  //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                  //     padding: winWidth > 767 ? 10 : 2,\n                  //   }}\n                  // >\n                  //   {genderFilter.map((item, cIndex) => {\n                  //     return (\n                  //       <Card\n                  //         key={item.id}\n                  //         name={item.farmerName}\n                  //         avatar={item.farmerImage}\n                  //         phone={item.phone}\n                  //         address={item.state}\n                  //         crop={item.crops.map((i) => i.cropName)}\n                  //         onPress={() => {\n                  //           setfarmer(item.id), onOpen(), sethideFAB(true);\n                  //         }}\n                  //       />\n                  //     );\n                  //   })}\n                  // </View>\n                  <View\n                    style={{\n                      width: \"100%\",\n                      height: winHeight * 0.89,\n                    }}\n                  >\n                    <FlatList\n                      showsVerticalScrollIndicator={false}\n                      data={genderFilter}\n                      renderItem={renderFarmers}\n                      ListEmptyComponent={() => (\n                        <View style={styles.container}>\n                          <Text style={{ fontSize: 30 }}>\n                            {\" \"}\n                            Oops ! Didnt find that\n                          </Text>\n                        </View>\n                      )}\n                      contentContainerStyle={{\n                        flexDirection: \"row\",\n                        width: \"100%\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                        padding: winWidth > 767 ? 10 : 2,\n                      }}\n                    />\n                  </View>\n                ) : !val && addr ? (\n                  // <View\n                  //   style={{\n                  //     flexDirection: \"row\",\n                  //     width: \"100%\",\n                  //     flexWrap: \"wrap\",\n                  //     alignItems: \"flex-start\",\n                  //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                  //     padding: winWidth > 767 ? 10 : 2,\n                  //   }}\n                  // >\n                  //   {addrFilter.map((item, cIndex) => {\n                  //     return (\n                  //       <Card\n                  //         key={item.id}\n                  //         name={item.farmerName}\n                  //         avatar={item.farmerImage}\n                  //         phone={item.phone}\n                  //         address={item.state}\n                  //         crop={item.crops.map((i) => i.cropName)}\n                  //         onPress={() => {\n                  //           setfarmer(item.id), onOpen();\n                  //         }}\n                  //         cropAvatar={item.image}\n                  //       />\n                  //     );\n                  //   })}\n                  // </View>\n                  <View\n                    style={{\n                      width: \"100%\",\n                      height: winHeight * 0.89,\n                    }}\n                  >\n                    <FlatList\n                      showsVerticalScrollIndicator={false}\n                      data={addrFilter}\n                      renderItem={renderFarmers}\n                      ListEmptyComponent={() => (\n                        <View style={styles.container}>\n                          <Text style={{ fontSize: 30 }}>\n                            {\" \"}\n                            Oops ! Didnt find that\n                          </Text>\n                        </View>\n                      )}\n                      contentContainerStyle={{\n                        flexDirection: \"row\",\n                        width: \"100%\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                        padding: winWidth > 767 ? 10 : 2,\n                      }}\n                    />\n                  </View>\n                ) : (\n                  <Text>No Result Found</Text>\n                )\n              ) : (\n                // <View\n                //   style={{\n                //     flexDirection: \"row\",\n                //     width: \"100%\",\n                //     flexWrap: \"wrap\",\n                //     alignItems: \"flex-start\",\n                //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                //     padding: winWidth > 767 ? 10 : 2,\n                //   }}\n                // >\n                //   {filteredFarmers.map((item, cIndex) => {\n                //     return (\n                //       <Card\n                //         key={item.id}\n                //         name={item.name}\n                //         avatar={item.avatar}\n                //         phone={item.phone}\n                //         address={item.address}\n                //         crop={item.crop}\n                //         onPress={() => {\n                //           setfarmer(item.id), onOpen(), sethideFAB(true);\n                //         }}\n                //         cropAvatar={item.image}\n                //       />\n                //     );\n                //   })}\n                // </View>\n                <View\n                  style={{\n                    width: \"100%\",\n                    height: winHeight * 0.89,\n                  }}\n                >\n                  <FlatList\n                    showsVerticalScrollIndicator={false}\n                    data={filteredFarmers}\n                    renderItem={renderFarmers}\n                    ListEmptyComponent={() => (\n                      <View style={styles.container}>\n                        <Text style={{ fontSize: 30 }}>\n                          {\" \"}\n                          Oops ! Didnt find that\n                        </Text>\n                      </View>\n                    )}\n                    contentContainerStyle={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"center\",\n                      justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                      padding: winWidth > 767 ? 10 : 2,\n                    }}\n                  />\n                </View>\n              )}\n            </ScrollView>\n            <Modalize\n              ref={modalizeRef}\n              modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.95}\n              modalStyle={\n                winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n              }\n              threshold={100}\n              closeOnOverlayTap={true}\n              mod\n            >\n              {farmers.map((item, cIndex) => {\n                if (farmer == item.id) {\n                  return (\n                    <View>\n                      <View\n                        style={{\n                          backgroundColor: \"#3A48ED\",\n                          width: \"100%\",\n                          height: 170,\n                          borderWidth: 1,\n                          top: -2,\n                          borderRadius: 15,\n                          borderColor: \"#3A48ED\",\n                          shadowColor: \"#000\",\n                          shadowOffset: {\n                            width: 0,\n                            height: 4,\n                          },\n                          shadowOpacity: 0.32,\n                          shadowRadius: 5.46,\n\n                          elevation: 11,\n                        }}\n                      >\n                        {/* <Text>{item.name}</Text>\n                        <Text>{item.address}</Text>\n                        <Image source={item.avatar} style={{height:50, width:50}}/>\n                   <Text>{farmer}</Text> */}\n                        <TouchableOpacity\n                          onPress={() => {\n                            onClose(), sethideFAB(false);\n                          }}\n                          style={{\n                            alignItems: \"center\",\n                            marginTop: 5,\n                            marginRight: 2,\n                            padding: 5,\n                            justifyContent: \"center\",\n                            alignSelf: \"flex-end\",\n                            backgroundColor: \"rgba(0,0,0,0.2)\",\n                            borderRadius: 10,\n                            height: 35,\n                            width: 70,\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              justifyContent: \"space-between\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <Text\n                              style={{\n                                fontSize: 15,\n                                fontWeight: 500,\n                                color: \"#fff\",\n                                marginRight: 5,\n                              }}\n                            >\n                              Close\n                            </Text>\n                            <SimpleLineIcons\n                              name=\"close\"\n                              size={15}\n                              color=\"#fff\"\n                              onPress={() => {\n                                onClose(), sethideFAB(false);\n                              }}\n                            />\n                          </View>\n                        </TouchableOpacity>\n                        <View\n                          style={{\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                            padding: 2,\n                            top: -10,\n                          }}\n                        >\n                          <View\n                            style={{\n                              width: \"40%\",\n                              height: \"100%\",\n                              padding: 5,\n                            }}\n                          >\n                            <Image\n                              source={{ uri: item.farmerImage }}\n                              style={{\n                                height: 120,\n                                width: 120,\n                                borderRadius: 120,\n                                borderColor: \"#fff\",\n                                borderWidth: 2,\n                              }}\n                            />\n                          </View>\n                          <View\n                            style={{\n                              flexDirection: \"column\",\n                              alignItems: \"center\",\n                              justifyContent: \"space-evenly\",\n                              width: \"60%\",\n                              height: \"100%\",\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"column\",\n                                alignItems: \"flex-start\",\n                                width: \"100%\",\n                                height: \"100%\",\n                                justifyContent: \"space-evenly\",\n                              }}\n                            >\n                              <View style={{ flexDirection: \"row\" }}>\n                                <Feather name=\"user\" size={20} color=\"#fff\" />\n                                <Text\n                                  style={{\n                                    fontSize: 20,\n                                    color: \"#fff\",\n                                    fontWeight: \"700\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  {getSmallString(item.farmerName)}\n                                </Text>\n                              </View>\n                              <View style={{ flexDirection: \"row\" }}>\n                                <Feather\n                                  name=\"map-pin\"\n                                  size={20}\n                                  color=\"#fff\"\n                                />\n                                <Text\n                                  style={{\n                                    fontSize: 20,\n                                    color: \"#fff\",\n                                    fontWeight: \"700\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  {item.state}\n                                </Text>\n                              </View>\n                              <View style={{ flexDirection: \"row\" }}>\n                                <Feather name=\"user\" size={20} color=\"#fff\" />\n                                <Text\n                                  style={{\n                                    fontSize: 20,\n                                    color: \"#fff\",\n                                    fontWeight: \"700\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  {hideNumber(item.phone)}\n                                </Text>\n                              </View>\n                            </View>\n                          </View>\n                        </View>\n                        <View style={{ top: -40 }}>\n                          <Text\n                            style={{\n                              marginTop: winWidth < 400 ? 40 : 60,\n                              padding: 5,\n                              fontWeight: \"500\",\n                              color: \"#6F6F6F\",\n                              fontSize: 20,\n                              marginLeft: 5,\n                            }}\n                          >\n                            Farming Details\n                          </Text>\n                          <View\n                            style={{\n                              width: \"95%\",\n                              alignSelf: \"center\",\n                              height: 1,\n                              backgroundColor: \"#C0C0C0\",\n                            }}\n                          ></View>\n                          <View\n                            style={{\n                              flexDirection: \"column\",\n                              marginTop: 10,\n                              padding: 10,\n                              height: winWidth < 400 ? 100 : 180,\n                              justifyContent: \"space-between\",\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                                width: \"100%\",\n                                justifyContent: \"space-between\",\n                                marginBottom: 10,\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <Entypo\n                                    name=\"leaf\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      fontWeight: \"600\",\n                                    }}\n                                  >\n                                    Crop\n                                  </Text>\n                                </View>\n                                <View>\n                                  <View>\n                                    <Text style={{ fontSize: 20 }}>\n                                      {item.crops.map((i) => i.cropName)}\n                                    </Text>\n                                  </View>\n\n                                  {/* {Data.map((cropName, cIndex) => {\n                                    let a = cropName.name.toLowerCase();\n                                    let b = item.crop?.toLowerCase();\n                                    let result = a.localeCompare(b);\n\n                                    if (a == b) {\n                                      return (\n                                        <View\n                                          style={{\n                                            flexDirection: \"row\",\n                                            alignItems: \"center\",\n                                          }}\n                                        >\n                                          <Image\n                                            source={{ uri: cropName.image }}\n                                            style={{\n                                              height: 30,\n                                              width: 30,\n                                              borderWidth: 1,\n                                              borderRadius: 30,\n                                              borderColor: \"#3ECF8E\",\n                                            }}\n                                          />\n                                          <Text\n                                            style={{\n                                              fontSize: 20,\n                                              marginLeft: 5,\n                                            }}\n                                          >\n                                            {cropName.name}\n                                          </Text>\n                                        </View>\n                                      );\n                                    } else {\n                                      null;\n                                    }\n                                  })} */}\n                                </View>\n                              </View>\n\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                  alignItems: \"flex-end\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <SimpleLineIcons\n                                    name=\"calendar\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      marginLeft: 5,\n                                      fontWeight: \"600\",\n                                    }}\n                                  >\n                                    Harvest Date\n                                  </Text>\n                                </View>\n                                <View>\n                                  <Text style={{ fontSize: 20 }}>\n                                    {item.crops.map((i) => i.harvestDate)}\n                                  </Text>\n                                </View>\n                              </View>\n                            </View>\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                                width: \"100%\",\n                                justifyContent: \"space-between\",\n                                marginTop: 5,\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <SimpleLineIcons\n                                    name=\"size-fullscreen\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      fontWeight: \"600\",\n                                      marginLeft: 5,\n                                    }}\n                                  >\n                                    Farming Area\n                                  </Text>\n                                </View>\n                                <View>\n                                  <Text style={{ fontSize: 20 }}>\n                                    {item.land} Kattha\n                                  </Text>\n                                </View>\n                              </View>\n\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                  alignItems: \"flex-end\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <SimpleLineIcons\n                                    name=\"speedometer\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      marginLeft: 5,\n                                      fontWeight: \"600\",\n                                    }}\n                                  >\n                                    Quantity\n                                  </Text>\n                                </View>\n                                <View>\n                                  <Text style={{ fontSize: 20, marginLeft: 5 }}>\n                                    {item.crops.map((i) => i.quantity) / 100} q\n                                  </Text>\n                                </View>\n                              </View>\n                            </View>\n                            <View></View>\n                          </View>\n                          <View\n                            style={{\n                              width: \"95%\",\n                              alignSelf: \"center\",\n                              height: 1,\n                              backgroundColor: \"#C0C0C0\",\n                              marginTop: winWidth < 400 ? 30 : 10,\n                            }}\n                          />\n                        </View>\n                        <View\n                          style={{\n                            width: \"100%\",\n                            flexDirection: \"column\",\n                            top: -29,\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <Text\n                            style={{\n                              fontSize: 15,\n                              color: \"#808080\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            Coming soon\n                          </Text>\n                          <View\n                            style={{\n                              width: \"100%\",\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                              justifyContent: \"space-evenly\",\n                              top: 5,\n                            }}\n                          >\n                            <TouchableOpacity\n                              style={{\n                                width: winWidth < 400 ? 90 : 120,\n                                height: winWidth < 400 ? 30 : 50,\n                                backgroundColor: \"#A9A9A9\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                flexDirection: \"row\",\n                                borderRadius: 10,\n                              }}\n                              onPress={() =>\n                                alert(\n                                  \"Click to chat feature helps you connect directly to this farmer in one click. Feature Coming soon !\"\n                                )\n                              }\n                            >\n                              <FontAwesome5\n                                name=\"whatsapp\"\n                                size={25}\n                                color=\"#fff\"\n                              />\n                              <Text\n                                style={{\n                                  fontSize: winWidth < 400 ? 16 : 20,\n                                  color: \"#fff\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                Chat\n                              </Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity\n                              style={{\n                                width: winWidth < 400 ? 90 : 120,\n                                height: winWidth < 400 ? 30 : 50,\n                                backgroundColor: \"#A9A9A9\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                flexDirection: \"row\",\n                                borderRadius: 10,\n                              }}\n                              onPress={() => alert(\"Feature Coming soon !\")}\n                            >\n                              <Text\n                                style={{\n                                  fontSize: winWidth < 400 ? 16 : 20,\n                                  color: \"#fff\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                Buy\n                              </Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity\n                              style={{\n                                width: winWidth < 400 ? 90 : 120,\n                                height: winWidth < 400 ? 30 : 50,\n                                backgroundColor: \"#fff\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                flexDirection: \"row\",\n                                borderRadius: 10,\n                                borderColor: \"#A9A9A9\",\n                                borderWidth: 2,\n                              }}\n                              onPress={() =>\n                                alert(\n                                  \"Support the farmer by any kind. Feature Coming Soon !\"\n                                )\n                              }\n                            >\n                              <FontAwesome\n                                name=\"handshake-o\"\n                                size={25}\n                                color=\"#A9A9A9\"\n                              />\n                              <Text\n                                style={{\n                                  fontSize: winWidth < 400 ? 16 : 20,\n                                  color: \"#A9A9A9\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                Support\n                              </Text>\n                            </TouchableOpacity>\n                          </View>\n                        </View>\n                      </View>\n                    </View>\n                  );\n                } else {\n                  null;\n                }\n              })}\n            </Modalize>\n\n            <Modalize\n              ref={modalizeFilterRef}\n              modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.95}\n              modalStyle={\n                winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n              }\n              threshold={100}\n              closeOnOverlayTap={true}\n              mod\n            >\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  padding: 5,\n                }}\n              >\n                <Text\n                  style={{\n                    padding: 5,\n                    fontWeight: \"500\",\n                    color: \"#6F6F6F\",\n                    fontSize: 20,\n                    marginLeft: 5,\n                  }}\n                >\n                  Filter resuts here\n                </Text>\n                {/* <TouchableOpacity onPress={() => onCloseFilter()}>\n                Close Filter\n              </TouchableOpacity> */}\n                <TouchableOpacity\n                  onPress={() => {\n                    onCloseFilter(), sethideFAB(false);\n                  }}\n                  style={{\n                    alignItems: \"center\",\n                    marginTop: 5,\n                    marginRight: 2,\n                    padding: 5,\n                    justifyContent: \"center\",\n                    alignSelf: \"flex-end\",\n                    backgroundColor: \"#000\",\n                    borderRadius: 10,\n                    height: 35,\n                    width: 70,\n                  }}\n                >\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 15,\n                        fontWeight: 500,\n                        color: \"#fff\",\n                        marginRight: 5,\n                      }}\n                    >\n                      Close\n                    </Text>\n                    <SimpleLineIcons\n                      name=\"close\"\n                      size={15}\n                      color=\"#fff\"\n                      onPress={() => {\n                        onCloseFilter(), sethideFAB(false);\n                      }}\n                    />\n                  </View>\n                </TouchableOpacity>\n              </View>\n              <View\n                style={{\n                  width: \"95%\",\n                  alignSelf: \"center\",\n                  height: 1,\n                  backgroundColor: \"#C0C0C0\",\n                  marginTop: 10,\n                  alignItems: \"center\",\n                }}\n              ></View>\n              <Text\n                style={{\n                  color: \"#6F6F6F\",\n                  fontSize: 15,\n                  marginTop: 3,\n                  marginLeft: 7,\n                }}\n              >\n                By gender\n              </Text>\n              <View\n                style={{\n                  width: \"60%\",\n                  marginTop: 10,\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-start\",\n                  padding: 5,\n\n                  alignSelf: \"flex-start\",\n                }}\n              >\n                {genderData.map((item) => {\n                  return (\n                    <View key={item.key} style={styles.buttonContainer}>\n                      <TouchableOpacity\n                        style={styles.circle}\n                        onPress={() => {\n                          setfilteractive(true);\n                          setval(item.key);\n                          // toggler(item.key);\n                          // let a = item.text;\n                          // let b = filteredFarmers.filter((i) => {\n                          //   return i.gender.toLowerCase() === a.toLowerCase();\n                          // });\n                          // console.log(item.text);\n                          // console.log(a);\n                          // console.log(b);\n                        }}\n                      >\n                        {val === item.key && (\n                          <View style={styles.checkedCircle} />\n                        )}\n                      </TouchableOpacity>\n                      <Text style={{ fontSize: 16, marginLeft: 5 }}>\n                        {item.text}\n                      </Text>\n                    </View>\n                  );\n                })}\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  marginTop: 10,\n                  flexDirection: \"column\",\n                  alignItems: \"flex-start\",\n                  justifyContent: \"space-evenly\",\n                  padding: 5,\n                  alignSelf: \"flex-start\",\n                }}\n              >\n                <View\n                  style={{\n                    width: \"95%\",\n                    alignSelf: \"center\",\n                    height: 1,\n                    backgroundColor: \"#C0C0C0\",\n                    marginTop: 10,\n                    alignItems: \"center\",\n                  }}\n                ></View>\n                <Text\n                  style={{\n                    color: \"#6F6F6F\",\n                    fontSize: 15,\n                    marginTop: 10,\n                    marginLeft: 0,\n                    marginBottom: 5,\n                  }}\n                >\n                  By States\n                </Text>\n\n                <TouchableOpacity\n                  onPress={() => setaddrToggle(!addrToggle)}\n                  style={{\n                    flexDirection: \"row\",\n                    backgroundColor: \"#d6d9ff\",\n                    borderWidth: 2,\n                    borderColor: \"#7b42ff\",\n                    borderRadius: 10,\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    padding: 5,\n                    minWidth: \"30%\",\n                    marginBottom: 10,\n                  }}\n                >\n                  <Text style={{ fontSize: 15 }}>\n                    {addr ? addr : \"All States\"}\n                  </Text>\n                  <AntDesign name=\"down\" size={12} />\n                </TouchableOpacity>\n                {addrToggle ? (\n                  <View style={{ marginTop: 10 }}>\n                    {States.map((item) => {\n                      return (\n                        <View key={item.code} style={styles.buttonnewContainer}>\n                          <TouchableOpacity\n                            style={styles.circle}\n                            onPress={() => {\n                              setfilteractive(true);\n                              setaddr(item.name);\n                              setaddrToggle(false);\n                              // toggler(item.key);\n                              // let a = item.text;\n                              // let b = filteredFarmers.filter((i) => {\n                              //   return i.gender.toLowerCase() === a.toLowerCase();\n                              // });\n                              // console.log(item.text);\n                              // console.log(a);\n                              // console.log(b);\n                            }}\n                          >\n                            {addr === item.name && (\n                              <View style={styles.checkedCircle} />\n                            )}\n                          </TouchableOpacity>\n                          <Text style={{ fontSize: 16, marginLeft: 5 }}>\n                            {item.name}\n                          </Text>\n                        </View>\n                      );\n                    })}\n                  </View>\n                ) : null}\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  marginTop: 10,\n                  flexDirection: \"column\",\n                  alignItems: \"flex-start\",\n                  justifyContent: \"space-evenly\",\n                  padding: 5,\n                  alignSelf: \"flex-start\",\n                }}\n              >\n                <View\n                  style={{\n                    width: \"95%\",\n                    alignSelf: \"center\",\n                    height: 1,\n                    backgroundColor: \"#C0C0C0\",\n                    marginTop: 10,\n                    alignItems: \"center\",\n                  }}\n                ></View>\n                <View>\n                  <Text\n                    style={{\n                      color: \"#6F6F6F\",\n                      fontSize: 15,\n                      marginTop: 10,\n                      marginLeft: 0,\n                      marginBottom: 5,\n                    }}\n                  >\n                    By Harvest Date\n                  </Text>\n                  <DateRangePicker onChange={onChange} value={value} />\n                </View>\n                <View\n                  style={{\n                    width: \"95%\",\n                    alignSelf: \"center\",\n                    height: 1,\n                    backgroundColor: \"#C0C0C0\",\n                    marginTop: 10,\n                    alignItems: \"center\",\n                  }}\n                ></View>\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-evenly\",\n                }}\n              >\n                <TouchableOpacity\n                  style={{\n                    width: 120,\n                    height: 50,\n                    backgroundColor: \"#fff\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n\n                    borderRadius: 10,\n                    borderColor: \"#3A48ED\",\n                    borderWidth: 2,\n                  }}\n                  onPress={() => {\n                    setmerge(false),\n                      setfilteractive(false),\n                      onCloseFilter(),\n                      setval(\"\"),\n                      setaddr(\"\");\n                    sethideFAB(!hideFAB);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 20,\n                      color: \"#3A48ED\",\n                    }}\n                  >\n                    Reset\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={{\n                    width: 120,\n                    height: 50,\n                    backgroundColor: \"#3ECF8E\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n\n                    borderRadius: 10,\n                    borderColor: \"#3ECF8E\",\n                    borderWidth: 2,\n                  }}\n                  onPress={() => {\n                    // !merge && filteractive ? setmerge(false) : setmerge(true);\n                    (!val && addr && !merge) || (val && !addr && !merge)\n                      ? setfilteractive(true)\n                      : !val && !addr && merge\n                      ? (setmerge(true), setfilteractive(false))\n                      : setmerge(true);\n                    onCloseFilter();\n                    sethideFAB(false);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 20,\n                      color: \"#fff\",\n                    }}\n                  >\n                    Apply\n                  </Text>\n                </TouchableOpacity>\n              </View>\n              <View\n                style={{\n                  height: 60,\n                  width: \"100%\",\n                  backgroundColor: \"#fff\",\n                  marginTop: 10,\n                }}\n              ></View>\n            </Modalize>\n          </View>\n        </View>\n      </View>\n      {blur ? (\n        <View\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n            position: \"absolute\",\n          }}\n        >\n          <BlurView\n            tint=\"dark\"\n            intensity={40}\n            style={[StyleSheet.absoluteFill, styles.nonBlurredContent]}\n          >\n            <View\n              style={{\n                marginTop: 20,\n                padding: 5,\n                height: \"100%\",\n              }}\n            >\n              <View\n                style={{\n                  backgroundColor: \"#fff\",\n                  height: 55,\n                  width: winWidth > 767 ? \"50%\" : \"97%\",\n                  alignSelf: \"center\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  borderRadius: 8,\n                  padding: 20,\n                  shadowColor: \"#98A0FF\",\n                  shadowOffset: {\n                    width: 0,\n                    height: 4,\n                  },\n                  shadowOpacity: 0.32,\n                  shadowRadius: 5.46,\n\n                  elevation: 9,\n                }}\n              >\n                {/* <TextInput style={{height:40, backgroundColor:\"white\", width:\"75%\", padding:5, outline}} placeholder=\"Search for crops...\" autoFocus={true}/> */}\n                <TextInput\n                  style={\n                    Platform.OS === \"web\" && {\n                      outlineColor: \"#fff\",\n                      height: 40,\n                      backgroundColor: \"white\",\n                      width: \"95%\",\n                      padding: 5,\n                      fontSize: 20,\n                    }\n                  }\n                  placeholder=\"Search for Crops\"\n                  value={term}\n                  autoFocus={true}\n                  editable={blur}\n                  onChangeText={(text) => {\n                    console.log(text), setterm(text), setSearch(text);\n                  }}\n                />\n\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  {/* {term ? (\n                    <TouchableOpacity\n                      onPress={() => {\n                        setterm(\"\");\n                      }}\n                    >\n                      <View\n                        style={{\n                          width: 50,\n                          height: 35,\n                          borderWidth: 2,\n                          borderColor: \"#3d3f40\",\n                          alignItems: \"center\",\n                          alignSelf: \"flex-end\",\n                          justifyContent: \"center\",\n                          marginRight: 5,\n                          backgroundColor: \"#3d3f40\",\n                          borderRadius: 5,\n                        }}\n                      >\n                        <Text style={{ fontSize: 15, color: \"#fff\" }}>\n                          Clear\n                        </Text>\n                      </View>\n                    </TouchableOpacity>\n                  ) : null} */}\n                </View>\n                <TouchableOpacity\n                  onPress={() => {\n                    // setblur(false);\n                    term ? setblur(false) : navigation.navigate(\"Home\");\n                  }}\n                >\n                  <View\n                    style={{\n                      width: 25,\n                      height: 25,\n                      borderWidth: 2,\n                      borderColor: \"#A1C7FF\",\n                      alignItems: \"center\",\n                      alignSelf: \"flex-end\",\n                      justifyContent: \"center\",\n                      right: -10,\n                      backgroundColor: \"#A1C7FF\",\n                      borderRadius: 25,\n                    }}\n                  >\n                    <AntDesign name=\"close\" size={20} color=\"#3A48ED\" />\n                  </View>\n                </TouchableOpacity>\n              </View>\n              <View style={{ flex: 1, alignItems: \"center\", width: \"100%\" }}>\n                {/* <TouchableOpacity style={{width:\"100%\", height:30, alignItems:\"center\", justifyContent:\"center\", backgroundColor:\"transparent\"}} onPress={()=>{setplacer(true),setblur(!blur)}}>\n<Text>{term}</Text>\n</TouchableOpacity> */}\n                {term !== null ? (\n                  <View\n                    style={{\n                      width: winWidth > 767 ? \"50%\" : \"97%\",\n                      alignItems: \"center\",\n                      backgroundColor: \"#fff\",\n                      borderRadius: 10,\n                      margin: 5,\n                    }}\n                  >\n                    <View\n                      style={{\n                        width: \"100%\",\n                        alignItems: \"flex-start\",\n                        padding: 10,\n                        marginBottom: 10,\n                        marginTop: 5,\n                      }}\n                    >\n                      {filteredCrops.length > 0 ? (\n                        <Text\n                          style={{\n                            marginLeft: 20,\n                            fontSize: 15,\n                            fontWeight: \"600\",\n                          }}\n                        >\n                          Available Crops\n                        </Text>\n                      ) : (\n                        <Text\n                          style={{\n                            marginLeft: 20,\n                            fontSize: 15,\n                            fontWeight: \"600\",\n                            alignSelf: \"center\",\n                          }}\n                        >\n                          🤔 ....That seems to be missing...\n                        </Text>\n                      )}\n                    </View>\n\n                    <View\n                      style={{\n                        width: \"100%\",\n                        height: winHeight * 0.5,\n                      }}\n                    >\n                      <FlatList\n                        showsVerticalScrollIndicator={false}\n                        data={filteredCrops}\n                        renderItem={renderItems}\n                        ListEmptyComponent={() => (\n                          <View style={styles.container}>\n                            <Text style={{ fontSize: 30 }}>\n                              {\" \"}\n                              Oops ! Didnt find that\n                            </Text>\n                          </View>\n                        )}\n                        contentContainerStyle={{\n                          // flexDirection: \"row\",\n                          // width: \"100%\",\n                          // flexWrap: \"wrap\",\n                          // alignItems: \"center\",\n                          // justifyContent:\n                          //   winWidth > 767 ? \"center\" : \"center\",\n                          // padding: winWidth > 767 ? 10 : 2,\n                          width: \"100%\",\n                        }}\n                      />\n                    </View>\n\n                    {/* \n                    {filteredCrops.map((item, cIndex) => {\n                      return (\n                        <View\n                          style={{\n                            width:\n                              winWidth > 768 ? winWidth - 80 : winWidth - 50,\n                            height: 45,\n                            padding: 5,\n                            borderRadius: 8,\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                            backgroundColor: \"#fff\",\n                            margin: 2,\n                          }}\n                        >\n                          <TouchableOpacity\n                            onPress={() => {\n                              setplacer(true),\n                                setblur(!blur),\n                                setterm(item.name);\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                              }}\n                            >\n                              <Image\n                                source={{ uri: item.image }}\n                                style={{\n                                  height: 35,\n                                  width: 35,\n                                  borderColor: \"green\",\n                                  borderWidth: 1,\n                                  borderRadius: 35,\n                                }}\n                              />\n                              <Text style={{ fontSize: 20 }}> {item.name}</Text>\n                              <Text\n                                style={{\n                                  fontSize: 15,\n                                  alignSelf: \"center\",\n                                  color: \"#989898\",\n                                }}\n                              >\n                                {\" \"}\n                                in{\" \"}\n                              </Text>\n                              <Text style={{ fontSize: 15 }}>{item.type}</Text>\n                            </View>\n                          </TouchableOpacity>\n                          <TouchableOpacity\n                            style={{\n                              backgroundColor: \"#3ECF8E\",\n                              height: \"100%\",\n                              alignItems: \"center\",\n                              justifyContent: \"center\",\n                              padding: 5,\n                              borderRadius: 5,\n                              alignSelf: \"flex-end\",\n                            }}\n                            onPress={() => {\n                              setparent(!parent),\n                                setterm(item.type),\n                                setplacer(!placer),\n                                setblur(!blur);\n                            }} //true\n                          >\n                            <Text style={{ fontSize: 15, color: \"#fff\" }}>\n                              View {item.type}s\n                            </Text>\n                          </TouchableOpacity>\n                        </View>\n                      );\n                    })} */}\n                  </View>\n                ) : null}\n\n                <TouchableOpacity\n                  style={{\n                    width: \"100%\",\n                    flex: 1,\n                    backgroundColor: \"transparent\",\n                  }}\n                  onPress={() => navigation.navigate(\"Home\")}\n                ></TouchableOpacity>\n              </View>\n            </View>\n          </BlurView>\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default Search;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: winHeight,\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginRight: 5,\n  },\n  buttonnewContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    marginRight: 5,\n    marginTop: 2,\n  },\n\n  circle: {\n    height: 30,\n    width: 30,\n    borderRadius: 15,\n    borderWidth: 1,\n    borderColor: \"#3A48ED\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  checkedCircle: {\n    width: 15,\n    height: 15,\n    borderRadius: 7,\n    backgroundColor: \"#3A48ED\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { Button, StyleSheet, Text, View, Image } from \"react-native\";\n\nconst Welcome = ({ navigation }) => {\n  setTimeout(() => {\n    navigation.replace(\"Home\");\n  }, 2000);\n\n  return (\n    <View style={[styles.container, { backgroundColor: \"#fff\" }]}>\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <Image\n          source={{ uri: require(\"../../assets/icon1.png\") }}\n          style={{ height: 50, width: 50 }}\n        />\n        <Text style={{ color: \"#346beb\", fontSize: 34 }}>Krisearch</Text>\n      </View>\n\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n};\n\nexport default Welcome;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\nimport Header from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\n\nconst Profile = ({ navigation }) => {\n  return (\n    <View style={styles.container}>\n      <View style={{ marginTop: 40, width: \"100%\", elevation: 1000 }}>\n        <Header onTap={() => navigation.navigate(\"Search\")} />\n      </View>\n\n      <View\n        style={{\n          flexDirection: winWidth > 767 ? \"row\" : \"column\",\n          width: \"100%\",\n          backgroundColor: \"pink\",\n          height: \"100%\",\n        }}\n      >\n        {winWidth > 767 ? (\n          <View\n            style={{\n              backgroundColor: \"#8cbaff\",\n              width: \"30%\",\n              height: \"100%\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Button\n              title=\"GO to Home\"\n              onPress={() => navigation.navigate(\"Home\")}\n            />\n          </View>\n        ) : null}\n\n        <View\n          style={{\n            backgroundColor: \"#deebff\",\n            width: winWidth > 767 ? \"70%\" : \"100%\",\n            height: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Button\n            title=\"GO to Search\"\n            onPress={() => navigation.navigate(\"Search\")}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Profile;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import React from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { winWidth, winHeight } from \"./src/utils/window\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Home from \"./src/screens/HomeScreen\";\nimport Search from \"./src/screens/SearchScreen\";\nimport Welcome from \"./src/screens/SplashScreen\";\nimport Header from \"../claro_krisearch/src/components/header\";\nimport Profile from \"./src/screens/ProfileScreen\";\nimport { Feather } from \"@expo/vector-icons\";\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction MyTabBar({ state, descriptors, navigation }) {\n  const focusedOptions = descriptors[state.routes[state.index].key].options;\n\n  if (focusedOptions.tabBarVisible === false) {\n    return null;\n  }\n\n  return (\n    <KeyboardAvoidingView>\n      <View style={{ flexDirection: \"row\" }}>\n        {state.routes.map((route, index) => {\n          const { options } = descriptors[route.key];\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const isFocused = state.index === index;\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: \"tabPress\",\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!isFocused && !event.defaultPrevented) {\n              navigation.navigate(route.name);\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: \"tabLongPress\",\n              target: route.key,\n            });\n          };\n\n          if (index === 1) {\n            return (\n              <TouchableOpacity\n                accessibilityRole=\"button\"\n                accessibilityState={isFocused ? { selected: true } : {}}\n                accessibilityLabel={options.tabBarAccessibilityLabel}\n                testID={options.tabBarTestID}\n                onPress={onPress}\n                onLongPress={onLongPress}\n                style={{\n                  flex: 1,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: 65,\n                  width: 65,\n                  backgroundColor: isFocused ? \"#346beb\" : \"#fff\",\n                  position: \"absolute\",\n                  left: winWidth / 2 - 30,\n                  bottom: 15,\n                  margin: 5,\n                  borderRadius: 35,\n                  borderWidth: 2,\n                  borderColor: isFocused ? \"#fff\" : \"#deebff\",\n                }}\n              >\n                {/* <Text style={{ color: isFocused ? \"#673ab7\" : \"#222\" }}>\n                {label}\n              </Text> */}\n                <Feather\n                  name=\"search\"\n                  size={30}\n                  color={isFocused ? \"#fff\" : \"#346beb\"}\n                />\n              </TouchableOpacity>\n            );\n          }\n\n          return (\n            <TouchableOpacity\n              accessibilityRole=\"button\"\n              accessibilityState={isFocused ? { selected: true } : {}}\n              accessibilityLabel={options.tabBarAccessibilityLabel}\n              testID={options.tabBarTestID}\n              onPress={onPress}\n              onLongPress={onLongPress}\n              style={{\n                flex: 1,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: 56,\n              }}\n            >\n              {/* <Text style={{ color: isFocused ? \"#673ab7\" : \"#222\" }}>\n              {label}\n            </Text> */}\n\n              <View>\n                {index == 0 ? (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      borderWidth: 2,\n                      backgroundColor: isFocused ? \"#deebff\" : \"transparent\",\n                      borderColor: isFocused ? \"#deebff\" : \"transparent\",\n                      width: \"110%\",\n                      borderRadius: 20,\n                      padding: 5,\n                    }}\n                  >\n                    <Feather\n                      name=\"home\"\n                      size={20}\n                      color={isFocused ? \"#346beb\" : \"#222\"}\n                    />\n                    {isFocused ? (\n                      <Text\n                        style={{\n                          fontSize: 16,\n                          marginLeft: 15,\n                          color: \"#346beb\",\n                        }}\n                      >\n                        {label}\n                      </Text>\n                    ) : null}\n                  </View>\n                ) : (\n                  <View>\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        borderWidth: 2,\n                        backgroundColor: isFocused ? \"#deebff\" : \"transparent\",\n                        borderColor: isFocused ? \"#deebff\" : \"transparent\",\n                        width: \"110%\",\n                        borderRadius: 20,\n                        padding: 5,\n                      }}\n                    >\n                      <Feather\n                        name=\"user\"\n                        size={20}\n                        color={isFocused ? \"#346beb\" : \"#222\"}\n                      />\n                      {isFocused ? (\n                        <Text\n                          style={{\n                            fontSize: 16,\n                            marginLeft: 15,\n                            color: \"#346beb\",\n                          }}\n                        >\n                          {label}\n                        </Text>\n                      ) : null}\n                    </View>\n                  </View>\n                )}\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      {winWidth > 767 ? (\n        <Stack.Navigator\n          screenOptions={{\n            headerStyle: {\n              backgroundColor: \"#346beb\",\n            },\n            headerTintColor: \"#fff\",\n            headerTitleStyle: {\n              fontWeight: \"bold\",\n            },\n            headerShown: false,\n          }}\n        >\n          <Stack.Screen\n            name=\"Welcome\"\n            component={Welcome}\n            options={{ headerShown: false }}\n          />\n          <Stack.Screen\n            name=\"Home\"\n            component={Home}\n            options={{\n              title: \"Krisearch\",\n            }}\n          />\n          <Stack.Screen name=\"Search\" component={Search} />\n          <Stack.Screen\n            name=\"Profile\"\n            component={Profile}\n            options={{\n              title: \"Profile\",\n            }}\n          />\n        </Stack.Navigator>\n      ) : (\n        <Tab.Navigator\n          tabBar={(props) => <MyTabBar {...props} />}\n          tabBarOptions={{\n            keyboardHidesTabBar: true,\n          }}\n        >\n          <Tab.Screen name=\"Home\" component={Home} />\n          <Tab.Screen name=\"Search\" component={Search} />\n          <Tab.Screen name=\"Profile\" component={Profile} />\n        </Tab.Navigator>\n      )}\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/newicon2.43b8ac0c.png\";","module.exports = __webpack_public_path__ + \"static/media/icon1.0fd4d1c9.png\";"],"sourceRoot":""}