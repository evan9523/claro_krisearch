{"version":3,"sources":["assets/newicon4.png","src/utils/window.ts","src/components/header.tsx","src/utils/hideNumber.ts","src/components/Card.tsx","src/screens/HomeScreen.tsx","src/utils/getSmallString.ts","src/screens/SearchScreen.tsx","src/screens/SplashScreen.tsx","src/screens/ProfileScreen.tsx","App.tsx"],"names":["module","exports","winHeight","Dimensions","get","height","winWidth","width","Header","props","onTap","onLogoTap","filterShown","onFilter","View","style","styles","header","top","flexDirection","alignSelf","alignItems","justifyContent","padding","Image","source","uri","require","Text","headerText","left","backgroundColor","borderRadius","TextInput","fontSize","outlineColor","placeholder","placeholderTextColor","onFocus","AntDesign","name","size","color","StyleSheet","create","fontWeight","marginLeft","marginTop","hideNumber","phone","a","toString","split","splice","Card","phrase","avatar","crop","address","onPress","isCrop","cropAvatar","windowWidth","TouchableOpacity","borderWidth","borderColor","margin","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","resizeMode","length","substring","toLowerCase","map","word","charAt","toUpperCase","slice","join","Entypo","Home","navigation","useState","farmer","setfarmer","modalizeRef","useRef","onClose","current","close","blur","setblur","setplacer","setcrop","parent","setparent","farmers","setfarmers","setmodalName","selectedState","val","setval","addr","setaddr","parenter","setparenter","term","setterm","filteractive","setfilteractive","addrToggle","setaddrToggle","setmerge","dater","setdater","Date","startDate","setStartDate","endDate","setEndDate","show","setshow","applied","setapplied","console","log","container","useEffect","lottie","loadAnimation","renderer","loop","autoplay","animationData","fetch","method","headers","Accept","body","JSON","stringify","gender","harvestDate","state","then","response","json","data","list","catch","error","farmerData","renderMatch","item","Data","i","image","type","renderItems","key","id","farmerName","farmerImage","crops","cropName","quantity","open","onOpen","bgdata","filter","toLocaleLowerCase","includes","filteredParents","filteredFarmers","filteredBlur","multiTo","cropType","str","temp","Array","dt","parseInt","modalizeFilterRef","onOpenfilter","onCloseFilter","borderTopLeftRadius","borderTopRightRadius","borderBottomWidth","borderBottomColor","marginRight","ScrollView","horizontal","contentContainerStyle","showsHorizontalScrollIndicator","Button","title","toDateString","showsVerticalScrollIndicator","bounces","flexWrap","cIndex","FlatList","renderItem","ListEmptyComponent","ref","modalHeight","threshold","modalStyle","closeOnOverlayTap","mod","SimpleLineIcons","Feather","land","alert","FontAwesome5","FontAwesome","text","buttonContainer","circle","checkedCircle","minWidth","States","code","buttonnewContainer","zIndex","flex","dateFormat","selected","onChange","date","customInput","popperPlacement","position","tint","intensity","absoluteFill","nonBlurredContent","Platform","OS","autoFocus","editable","onChangeText","right","sort","getSmallString","Search","placer","hideFAB","sethideFAB","merge","renderFarmers","genderFilter","addrFilter","flat","harvestResult","mergeResult","navigate","dynamic","setSearch","Welcome","setTimeout","replace","StatusBar","Profile","Stack","createStackNavigator","createBottomTabNavigator","App","NavigationContainer","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","headerShown","Screen","component","options"],"mappings":"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","file":"static/js/app.94a002e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/newicon4.57719745.png\";","import { Dimensions } from 'react-native';\nexport const winHeight = Dimensions.get(\"window\").height;\n\nexport const winWidth = Dimensions.get(\"window\").width;\n","import React from \"react\";\nimport {\n  Button,\n  TextInput,\n  Dimensions,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n} from \"react-native\";\n\nimport { winWidth } from \"../utils/window\";\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  FontAwesome5,\n  FontAwesome,\n  AntDesign,\n} from \"@expo/vector-icons\";\n\nconst windowHeight = Dimensions.get(\"screen\").height;\nconst windowWidth = Dimensions.get(\"screen\").width;\n\nexport interface HeaderProps {\n  onTap(): any;\n  onLogoTap(): any;\n  filterShown?: boolean;\n  onFilter(): any;\n  // catTap(): any;\n}\n\nconst Header = (props: HeaderProps) => {\n  const { onTap, onLogoTap, filterShown, onFilter } = props;\n  return (\n    <View style={styles.header}>\n      <View\n        style={{\n          width: \"100%\",\n          top: 0,\n          height: \"100%\",\n          flexDirection: \"row\",\n          alignSelf: \"flex-start\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          padding: winWidth > 767 ? 5 : 1,\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"flex-start\",\n            justifyContent: \"flex-start\",\n            top: winWidth > 767 ? 5 : 10,\n          }}\n          // onFocus={onLogoTap}\n        >\n          <Image\n            source={{ uri: require(\"../../assets/newicon4.png\") }}\n            style={{ width: 35, height: 35, top: winWidth > 767 ? -2 : -5 }}\n          />\n          <Text style={styles.headerText}>Krisearch</Text>\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: winWidth > 767 ? \"flex-start\" : \"flex-end\",\n            width: \"69%\",\n            justifyContent: winWidth > 767 ? \"flex-start\" : \"flex-end\",\n            left: -15,\n          }}\n        >\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              backgroundColor: \"#fff\",\n              width: winWidth > 767 ? \"55%\" : \"65%\",\n              height: 40,\n              padding: 5,\n              justifyContent: \"space-between\",\n              borderRadius: 10,\n              top: winWidth > 767 ? null : 3,\n            }}\n          >\n            <TextInput\n              style={{\n                width: winWidth > 767 ? \"90%\" : \"95%\",\n                height: winWidth > 767 ? 40 : 35,\n                fontSize: winWidth > 767 ? 16 : 16,\n                backgroundColor: \"#fff\",\n                outlineColor: \"#fff\",\n                borderRadius: 10,\n                padding: 5,\n              }}\n              placeholder=\"Search for Crops\"\n              placeholderTextColor=\"\t#808080\"\n              onFocus={onTap}\n            />\n            <AntDesign name=\"search1\" size={20} color=\"#808080\" />\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Header;\n\nconst styles = StyleSheet.create({\n  header: {\n    width: \"100%\",\n    height: 70,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"#346beb\",\n    padding: 5,\n  },\n  headerText: {\n    fontSize: winWidth > 767 ? 25 : 20,\n    color: \"#fff\",\n    fontWeight: \"600\",\n    marginLeft: 2,\n    alignSelf: \"flex-start\",\n    marginTop: winWidth < 767 ? 0 : 0,\n  },\n});\n","const hideNumber = (phone : number)=>{\n    var a=[];\n    var b;\n    var c;\n    var newString=[];\n    let i=0;\n\n    a = phone.toString().split('');\n   \n    a.splice(1,0,\"X\");\n    a.splice(3,2,\"X\");\n    a.splice(6,5,\"X\");\n    a.splice(1,0,\"X\");\n   \n    \n    return a;\n\n    \n\n\n}\n\nexport default hideNumber","import { Entypo, MaterialIcons, SimpleLineIcons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Dimensions,\n  Image,\n} from \"react-native\";\nimport getSmallString from \"../utils/getSmallString\";\nimport hideNumber from \"../utils/hideNumber\";\n\nexport interface CardProps {\n  name: string;\n  avatar?: string;\n  crop?: string;\n  phone?: number;\n  address?: string;\n  onPress: any;\n  cropAvatar?: string;\n  isCrop?: boolean;\n}\n\nexport default function Card(props: CardProps) {\n  const {\n    name,\n    avatar,\n    crop,\n    phone,\n    address,\n    onPress,\n    cropAvatar,\n    isCrop,\n  } = props;\n\n  const windowWidth = Dimensions.get(\"window\").width;\n  const cardWidth = windowWidth / 2 - 30;\n\n  const toTitleCase = (phrase: string) => {\n    // if(str.length>20){\n    //     str =str.substring(0,19)+\"...\";\n    //     return str;\n    // }\n    // else{\n    //     return str\n    // }\n\n    if (phrase.length > 15) {\n      phrase = phrase.substring(0, 14) + \"...\";\n    }\n    return phrase\n      .toLowerCase()\n      .split(\" \")\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(\" \");\n  };\n\n  return (\n    <TouchableOpacity onPress={() => onPress()}>\n      <View\n        style={\n          windowWidth > 767\n            ? {\n                width: 190,\n                height: 190,\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderColor: \"#fff\",\n                borderRadius: 10,\n                alignItems: \"center\",\n                margin: 5,\n                marginBottom: 5,\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 3,\n                },\n                shadowOpacity: 0.15,\n                shadowRadius: 2.22,\n\n                elevation: 3,\n              }\n            : {\n                width: windowWidth * 0.45,\n                height: 185,\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderColor: \"#fff\",\n                borderRadius: 10,\n                alignItems: \"center\",\n                margin: 6,\n\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: -2,\n                  height: 4,\n                },\n                shadowOpacity: 0.15,\n                shadowRadius: 2.22,\n\n                elevation: 3,\n              }\n        }\n      >\n        <Image\n          source={{ uri: avatar }}\n          style={\n            !isCrop\n              ? {\n                  width: 105,\n                  height: 105,\n                  borderWidth: 1,\n                  borderColor: \"#fff\",\n                  borderRadius: 105,\n                }\n              : {\n                  width: 105,\n                  height: 105,\n                  resizeMode: \"contain\",\n                  borderWidth: 1,\n                  borderColor: \"#fff\",\n                }\n          }\n        />\n        <Text style={{ fontWeight: \"500\", fontSize: 16, marginTop: 10 }}>\n          {toTitleCase(name)}\n        </Text>\n\n        {!isCrop ? (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-evenly\",\n              alignItems: \"center\",\n\n              padding: 5,\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Text> {crop}</Text>\n            </View>\n            <Entypo name=\"dot-single\" size={15} style={{ marginTop: 5 }} />\n            <View>\n              <Text>{address}</Text>\n            </View>\n          </View>\n        ) : null}\n\n        {!isCrop ? (\n          <View>\n            <Text>{phone ? hideNumber(phone) : \"Not available\"}</Text>\n          </View>\n        ) : null}\n      </View>\n    </TouchableOpacity>\n  );\n}\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  Dimensions,\n  ScrollView,\n  StyleSheet,\n  Text,\n  Image,\n  TouchableOpacity,\n  View,\n  ActivityIndicator,\n  FlatList,\n  Platform,\n} from \"react-native\";\nimport Header, { HeaderProps } from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport Farmers from \"../data/farmers.json\";\nimport Crops from \"../data/items.json\";\nimport { Modalize } from \"react-native-modalize\";\nimport Card from \"../components/Card\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  AntDesign,\n  FontAwesome5,\n  FontAwesome,\n} from \"@expo/vector-icons\";\nimport hideNumber from \"../utils/hideNumber\";\nimport getSmallString from \"../utils/getSmallString\";\nimport States from \"../data/states.json\";\nimport Data from \"../data/items.json\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { render } from \"react-dom\";\nimport lottie from \"lottie-web\";\nimport { BlurView } from \"expo-blur\";\nimport { add } from \"date-fns\";\n\nconst Home = ({ navigation }) => {\n  const [farmer, setfarmer] = useState(0);\n  const modalizeRef = useRef<Modalize>(null);\n\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onClose = () => {\n    modalizeRef.current?.close();\n  };\n\n  const genderData = [\n    {\n      key: \"m\",\n      text: \"Men\",\n    },\n    {\n      key: \"f\",\n      text: \"Women\",\n    },\n  ];\n\n  const [isLoading, setLoading] = useState(true);\n  const [sata, setSata] = useState([]);\n\n  const cropper = \"\";\n  const [blur, setblur] = useState(false);\n  const [placer, setplacer] = useState(false);\n  const [crop, setcrop] = useState([]);\n  const [parent, setparent] = useState(false);\n  const [farmers, setfarmers] = useState([]);\n  const [modalName, setmodalName] = useState(\"\");\n  const [firstScroll, setfirstScroll] = useState(0);\n  const [selectedState, setselectedState] = useState(\"\");\n  const [cats, setcats] = useState(false);\n  const [val, setval] = useState(\"\");\n  const [addr, setaddr] = useState(\"\");\n  const [parenter, setparenter] = useState(\"\");\n  const [term, setterm] = useState(\"\");\n  const [filteractive, setfilteractive] = useState(false);\n  const [addrToggle, setaddrToggle] = useState(false);\n  const [cropToggle, setcropToggle] = useState(false);\n  const [merge, setmerge] = useState(false);\n  const [dater, setdater] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [show, setshow] = useState(\"\");\n  const [applied, setapplied] = useState(false);\n\n  // useEffect(() => {\n  //   fetch(\"http://staging.clarolabs.in:7050/b2bRequirement/fetch/crops\", {\n  //     method: \"post\",\n  //     headers: {\n  //       Accept: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify({\n  //       name: cropper,\n  //     }),\n  //   })\n  //     .then((response) => console.log(response.json()))\n  //     .then((data) => console.log(data))\n  //     .catch((error) => console.error(error));\n  // }, []);\n  console.log(\"REACHING HOME\");\n  const container = useRef(null);\n\n  useEffect(() => {\n    lottie.loadAnimation({\n      container: container.current,\n      renderer: \"svg\",\n      loop: true,\n      autoplay: true,\n      animationData: require(\"../../assets/wheat.json\"),\n    });\n  });\n\n  useEffect(() => {\n    fetch(\"https://maps.claroenergy.in/Ksearch/fetch/farmers\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        gender: null,\n        harvestDate: null,\n        state: selectedState,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => setfarmers(data.data.list))\n      .catch((error) => console.error(error));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"https://maps.claroenergy.in/Ksearch/fetch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: cropper,\n        farmerData: true,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => setcrop(data.data.list))\n      .catch((error) => console.error(error));\n  }, []);\n\n  console.log(crop);\n  console.log(farmers);\n\n  const selectState = () => {\n    States.map((item) => {\n      console.log(item.name);\n      farmers.map((i) => {\n        console.log(i.state);\n        if (\n          item.name.toString().toLowerCase() ===\n          i.state.toString().toLowerCase()\n        ) {\n          setselectedState(item.name);\n        }\n      });\n    });\n  };\n\n  const selectCrop = () => {};\n\n  // const handleLoad = () => {\n  //   setfirstScroll(firstScroll + 18);\n  // };\n\n  const renderMatch = ({ item }) => (\n    <View\n      style={{\n        height: 55,\n        width: winWidth > 767 ? winWidth * 0.49 : winWidth * 0.95,\n        padding: 2,\n      }}\n    >\n      <TouchableOpacity\n        onPress={() => {\n          setplacer(true), setblur(!blur), setterm(item.name);\n          setapplied(true);\n        }}\n        style={{\n          marginBottom: 2,\n          width: \"100%\",\n          backgroundColor: \"#fff\",\n          height: \"100%\",\n          padding: 5,\n          borderRadius: 10,\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          {Data.map((i) =>\n            i.name.toLowerCase() === item.name.toLowerCase() ? (\n              <Image\n                source={{ uri: i.image }}\n                style={{\n                  height: 35,\n                  width: 35,\n                  borderColor: \"green\",\n                  borderWidth: 1,\n                  borderRadius: 35,\n                }}\n              />\n            ) : null\n          )}\n\n          <Text style={{ fontSize: 20 }}> {item.name}</Text>\n          <Text\n            style={{\n              fontSize: 15,\n              alignSelf: \"center\",\n              color: \"#989898\",\n              margin: 5,\n            }}\n          >\n            in\n          </Text>\n          <TouchableOpacity\n            onPress={() => {\n              setparent(true),\n                setterm(item.type),\n                setplacer(true),\n                setapplied(false);\n              setblur(!blur);\n            }}\n          >\n            <Text style={{ fontSize: 15, color: \"#346beb\", marginLeft: 0 }}>\n              {item.type}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </TouchableOpacity>\n    </View>\n  );\n\n  const renderItems = ({ item }) => (\n    <Card\n      key={item.id}\n      name={item.farmerName}\n      avatar={item.farmerImage}\n      phone={item.phone}\n      address={item.state}\n      crop={item.crops.map((i) => i.cropName).slice(0, 1)}\n      onPress={() => {\n        console.log(item.farmerName),\n          setfarmer(item.id),\n          console.log(item.crops.map((i) => i.quantity));\n        onOpen(), setmodalName(item.farmerName);\n      }}\n    />\n  );\n\n  const toTitleCase = (phrase: string) => {\n    return phrase\n      .toLowerCase()\n      .split(\" \")\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(\" \");\n  };\n\n  const showFilter = [val, addr, dater];\n\n  const bgdata = crop.filter((item) => {\n    console.log(item.farmers);\n  });\n\n  console.log(bgdata);\n  const filteredCrops = Data.filter((item) => {\n    return item.name.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredParents = crop.filter((item) => {\n    return item.type.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredFarmers = farmers.filter((item) => {\n    let a = item.crops.map((i) => i.cropName);\n    return a.toString().toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredBlur = crop.filter((item) => {\n    return item.name.toLocaleLowerCase().includes(show.toLowerCase());\n  });\n\n  const suggested = [];\n  const showSugg = () => {\n    for (let i = 0; i <= 3; i++) {\n      filteredBlur.map((item) => {\n        suggested.push(item.name);\n      });\n    }\n  };\n\n  const genderFilter = filteredFarmers.filter((item) => {\n    if (val) {\n      return item.gender.toLocaleLowerCase() === val.toLowerCase();\n    }\n  });\n\n  const parentFilter = farmers.filter((item) => {\n    let a = item.crops.map((i) => i.cropType);\n    return a.toString().toLocaleLowerCase() === parenter.toLowerCase();\n  });\n\n  // const addrFilter = crop.filter((item) => {\n  //   console.log(item.farmers);\n  //   let resultaddr = item.farmers.map((i) => {\n  //     console.log(i.state);\n  //     if (addr) {\n  //       return i.state.toLocaleLowerCase() === addr.toLowerCase();\n  //     }\n  //   });\n  //   // if (addr) {\n  //   //   return item.state.toLocaleLowerCase() === addr.toLowerCase();\n  //   // }\n  // });\n\n  const addrFilter = filteredFarmers.filter((item) => {\n    if (addr) {\n      return item.state.toLocaleLowerCase() === addr.toLowerCase();\n    }\n  });\n\n  const harvestResult = filteredFarmers.filter((item) => {\n    let str = item.crops.map((i) => i.harvestDate).toString();\n    console.log(str);\n    var temp = new Array();\n    temp = str.split(\"/\");\n    console.log(temp);\n    let dt = new Date(temp[2], temp[1], temp[0]);\n    console.log(dt);\n    return dt >= startDate && dt <= endDate;\n  });\n  const mergeResult = filteredFarmers.filter((item) => {\n    // if (val && addr) {\n    // }\n    // if (addr && !val) {\n    //   return item.address.toLocaleLowerCase() === addr.toLowerCase();\n    // }\n    // if (val && !addr) {\n    //   return item.gender.toLocaleLowerCase() === val.toLowerCase();\n    // }\n    // let str = item.crops.map((i) => i.harvestDate).toString();\n    // console.log(str);\n    // var temp = new Array();\n    // temp = str.split(\"/\");\n    // console.log(temp);\n    // let dt = new Date(temp[2], temp[1], temp[0]);\n    // console.log(dt);\n    // return (\n    //   item.gender.toLowerCase() === val.toLowerCase() &&\n    //   item.state.toLowerCase() === addr.toLowerCase() &&\n    //   dt >= startDate &&\n    //   dt <= endDate\n    // );\n  });\n\n  const multiTo = filteredFarmers.filter((item) => {\n    let str = item.crops.map((i) => i.harvestDate).toString();\n    console.log(str);\n    var temp = new Array();\n    temp = str.split(\"/\");\n    console.log(temp);\n    let dt = new Date(temp[2], parseInt(temp[1]) - 1, temp[0]);\n    console.log(dt);\n    console.log(startDate);\n    if (applied) {\n      if (val && addr === \"\") {\n        return item.gender.toLowerCase() === val.toLowerCase();\n      }\n      if (addr && val === \"\") {\n        return item.state.toLowerCase() === addr.toLowerCase();\n      }\n      if (dater && addr === \"\" && val === \"\") {\n        return dt > startDate && dt < endDate;\n      }\n      if (val && addr) {\n        return (\n          item.gender.toLowerCase() === val.toLowerCase() &&\n          item.state.toLowerCase() === addr.toLowerCase()\n        );\n      }\n      if (val && dater) {\n        return (\n          item.gender.toLowerCase() === val.toLowerCase() &&\n          dt >= startDate &&\n          dt <= endDate\n        );\n      }\n\n      if (addr && dater) {\n        return (\n          item.state.toLowerCase() === addr.toLowerCase() &&\n          dt >= startDate &&\n          dt <= endDate\n        );\n      }\n      if (val && addr && dater) {\n        return (\n          item.gender.toLowerCase() === val.toLowerCase() &&\n          item.state.toLowerCase() === addr.toLowerCase() &&\n          dt > startDate &&\n          dt < endDate\n        );\n      } else {\n        return filteredFarmers;\n      }\n    }\n  });\n  // const multiFilter = filteredFarmers.filter((item) => {\n  //   let str = item.crops.map((i) => i.harvestDate).toString();\n  //   console.log(str);\n  //   var temp = new Array();\n  //   temp = str.split(\"/\");\n  //   console.log(temp);\n  //   let dt = new Date(temp[2], temp[1], temp[0]);\n  //   console.log(dt);\n  //   if (val) {\n  //     return item.gender.toLocaleLowerCase() === val.toLowerCase();\n  //   }\n  //   if (addr) {\n  //     return item.state.toLocaleLowerCase() === addr.toLowerCase();\n  //   }\n  //   if (dater) {\n  //     return dt >= startDate && dt <= endDate;\n  //   }\n  //   if (val && addr && !dater) {\n  //     return (\n  //       item.gender.toLowerCase() === val.toLowerCase() &&\n  //       item.state.toLowerCase() === addr.toLowerCase()\n  //     );\n  //   }\n  //   if (!val && addr && dater) {\n  //     return (\n  //       item.state.toLowerCase() === addr.toLowerCase() &&\n  //       dt >= startDate &&\n  //       dt <= endDate\n  //     );\n  //   }\n  //   if (val && !addr && dater) {\n  //     return (\n  //       item.gender.toLowerCase() === val.toLowerCase() &&\n  //       dt >= startDate &&\n  //       dt <= endDate\n  //     );\n  //   }\n  //   if (val && addr && dater) {\n  //     return (\n  //       item.gender.toLowerCase() === val.toLowerCase() &&\n  //       item.state.toLowerCase() === addr.toLowerCase() &&\n  //       dt >= startDate &&\n  //       dt <= endDate\n  //     );\n  //   }\n  // });\n\n  const modalizeFilterRef = useRef<Modalize>(null);\n  const onOpenfilter = () => {\n    modalizeFilterRef.current?.open();\n  };\n\n  const onCloseFilter = () => {\n    modalizeFilterRef.current?.close();\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* <View\n        style={{\n          marginTop: 40,\n          width: \"100%\",\n          elevation: 1000,\n        }}\n      >\n        <Header onTap={() => navigation.navigate(\"Search\")} />\n      </View> */}\n\n      <View\n        style={{\n          flexDirection: winWidth > 767 ? \"row\" : \"column\",\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      >\n        <View\n          style={{\n            backgroundColor: \"#f2f7ff\",\n            width: winWidth > 767 ? \"100%\" : \"100%\",\n            height: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Header\n            onTap={() => {\n              setblur(true), setshow(\"\");\n            }}\n            onLogoTap={() => {\n              // setfilteractive(false), setterm(\"\");\n              console.log(\"hello\");\n            }}\n            onFilter={() => onOpenfilter()}\n          />\n\n          {/* <Button\n            title=\"GO to Search\"\n            onPress={() => navigation.navigate(\"Search\")}\n          /> */}\n          {/* {winWidth < 767 ? (\n            <View\n              style={{\n                width: \"100%\",\n                height: 50,\n                backgroundColor: \"#346beb\",\n                padding: 7,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 4,\n                },\n                shadowOpacity: 0.32,\n                shadowRadius: 5.46,\n\n                elevation: 9,\n              }}\n            >\n              <TextInput\n                style={{\n                  width: \"60%\",\n                  height: 40,\n                  fontSize: 20,\n                  backgroundColor: \"#fff\",\n                  outlineColor: \"#346beb\",\n                  borderRadius: 10,\n                  padding: 5,\n                }}\n                placeholder=\"Search for Crops\"\n                onFocus={() => navigation.navigate(\"Search\")}\n              />\n              <View\n                style={{\n                  width: 35,\n                  height: 35,\n                  borderColor: \"#fff\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  backgroundColor: \"#deebff\",\n                  borderRadius: 35,\n                }}\n              >\n                <SimpleLineIcons name=\"magnifier\" size={20} color=\"#346beb\" />\n              </View>\n            </View>\n          ) : null} */}\n\n          {/* <Button\n            title=\"Loadmore\"\n            onPress={() => setfirstScroll(firstScroll + 5)}\n          /> */}\n          {/* \n          <View style={{ width: \"100%\", height: 25, backgroundColor: \"red\" }}>\n            <Text>See by category</Text>\n          </View> */}\n\n          {!parent ? (\n            <View\n              style={{\n                width: \"96%\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                alignSelf: \"center\",\n                borderBottomWidth: 1,\n                borderBottomColor: \"#bfd8ff\",\n\n                padding: 5,\n              }}\n            >\n              {/* <Text\n                    style={{\n                      marginTop: 60,\n                      padding: 5,\n                      fontWeight: \"500\",\n                      color: \"#6F6F6F\",\n                      fontSize: 20,\n                    }}\n                  >\n                    {term}\n                  </Text> */}\n              <View style={{ marginRight: 10 }}>\n                <TouchableOpacity\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    backgroundColor: \"#346beb\",\n                    height: 30,\n                    width: 80,\n                    padding: 3,\n                    borderRadius: 5,\n                  }}\n                  onPress={() => {\n                    onOpenfilter();\n                  }}\n                >\n                  <AntDesign name=\"filter\" size={15} color=\"#fff\" />\n                  <Text\n                    style={{\n                      fontSize: 15,\n                      fontWeight: \"500\",\n                      marginLeft: 2,\n                      color: \"#fff\",\n                    }}\n                  >\n                    {\" \"}\n                    Filter\n                  </Text>\n                </TouchableOpacity>\n              </View>\n\n              <ScrollView\n                horizontal={true}\n                contentContainerStyle={{\n                  marginLeft: 10,\n                }}\n                showsHorizontalScrollIndicator={false}\n              >\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    alignSelf: \"center\",\n\n                    alignItems: \"flex-start\",\n\n                    justifyContent: \"flex-start\",\n\n                    padding: 5,\n                  }}\n                >\n                  {/* <Button\n                      title=\"GO Home\"\n                      onPress={() => navigation.navigate(\"Home\")}\n                    /> */}\n                  {/* <TouchableOpacity\n                      style={{\n                        top: 10,\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-between\",\n                        backgroundColor: \"#949cff\",\n                        height: 30,\n                        padding: 3,\n                        borderRadius: 5,\n                        marginBottom: 20,\n                        marginRight: 20,\n                      }}\n                      onPress={() => {\n                        console.log(\"Biharma\"),\n                          sethideFAB(true),\n                          onOpenfilter();\n                      }}\n                    >\n                      <AntDesign name=\"filter\" size={15} color=\"#3A48ED\" />\n                      <Text\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"500\",\n                          marginLeft: 2,\n                          color: \"#fff\",\n                        }}\n                      >\n                        {\" \"}\n                        Filter Results\n                      </Text>\n                    </TouchableOpacity> */}\n                  {!applied ||\n                  (val === \"\" &&\n                    addr === \"\" &&\n                    dater === false &&\n                    term === \"\") ||\n                  term === null ? (\n                    <View\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: \"#fff\",\n                        padding: 5,\n                        height: 30,\n                        width: 50,\n                        borderRadius: 20,\n                        justifyContent: \"center\",\n                        flexDirection: \"row\",\n                        borderWidth: 1,\n                        borderColor: \"#346beb\",\n                      }}\n                    >\n                      <Text style={{ color: \"#000\" }}>All</Text>\n                    </View>\n                  ) : (\n                    <Button\n                      title=\"clear\"\n                      onPress={() => {\n                        setfilteractive(false);\n                        setapplied(false);\n                        setval(\"\");\n                        setaddr(\"\");\n                        setdater(false);\n                        setterm(\"\");\n                      }}\n                    />\n                  )}\n                  {term ? (\n                    <View\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: term ? \"#87edbf\" : \"#deebff\",\n                        padding: 5,\n                        height: 30,\n\n                        borderRadius: 20,\n                        justifyContent: \"space-between\",\n                        flexDirection: \"row\",\n                        borderWidth: 1,\n                        borderColor: \"#3ECF8E\",\n                      }}\n                    >\n                      <Text\n                        style={{\n                          color: \"#009150\",\n                          fontWeight: \"600\",\n                          fontSize: 15,\n                        }}\n                      >\n                        {term ? term : null}\n                      </Text>\n\n                      <AntDesign\n                        name=\"close\"\n                        size={15}\n                        color=\"#fff\"\n                        style={{\n                          top: 2,\n                          backgroundColor: \"#009150\",\n                          padding: 2,\n                          marginLeft: 5,\n                          borderRadius: 15,\n                        }}\n                        onPress={() => setterm(\"\")}\n                      />\n                    </View>\n                  ) : null}\n\n                  {val && applied ? (\n                    <View\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: val ? \"#fff\" : \"#deebff\",\n                        padding: 5,\n                        height: 30,\n\n                        borderRadius: 20,\n                        justifyContent: \"space-between\",\n                        flexDirection: \"row\",\n                        borderWidth: 1,\n                        borderColor: \"#346beb\",\n                      }}\n                    >\n                      <Text style={{ color: \"#000\" }}>\n                        {val\n                          ? val === \"m\"\n                            ? \"Men\"\n                            : val === \"f\"\n                            ? \"Women\"\n                            : \"Other\"\n                          : null}\n                      </Text>\n                      <AntDesign\n                        name=\"close\"\n                        size={15}\n                        color=\"#3A48ED\"\n                        style={{\n                          top: 2,\n                          backgroundColor: \"#A1C7FF\",\n                          padding: 2,\n                          borderRadius: 15,\n                          marginLeft: 5,\n                        }}\n                        onPress={() => setval(\"\")}\n                      />\n                    </View>\n                  ) : null}\n                  {addr && applied ? (\n                    <View\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: addr ? \"#fff\" : \"#deebff\",\n                        padding: 5,\n                        height: 30,\n\n                        borderRadius: 20,\n                        justifyContent: \"space-between\",\n                        flexDirection: \"row\",\n                        borderWidth: 1,\n                        borderColor: \"#346beb\",\n                      }}\n                    >\n                      <Text style={{ color: \"#000\" }}>\n                        {addr ? addr : null}\n                      </Text>\n                      <AntDesign\n                        name=\"close\"\n                        size={15}\n                        color=\"#3A48ED\"\n                        style={{\n                          top: 2,\n                          backgroundColor: \"#A1C7FF\",\n                          padding: 2,\n                          borderRadius: 15,\n                          marginLeft: 5,\n                        }}\n                        onPress={() => setaddr(\"\")}\n                      />\n                    </View>\n                  ) : null}\n\n                  {dater && applied ? (\n                    <View\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: dater && applied ? \"#fff\" : \"#deebff\",\n                        padding: 5,\n                        height: 30,\n\n                        borderRadius: 20,\n                        justifyContent: \"space-between\",\n                        flexDirection: \"row\",\n                        borderWidth: 1,\n                        borderColor: \"#346beb\",\n                      }}\n                    >\n                      <Text style={{ color: \"#000\" }}>\n                        {dater && applied\n                          ? startDate.toDateString() +\n                            \" - \" +\n                            endDate.toDateString()\n                          : null}\n                      </Text>\n                      <AntDesign\n                        name=\"close\"\n                        size={15}\n                        color=\"#3A48ED\"\n                        style={{\n                          top: 2,\n                          backgroundColor: \"#A1C7FF\",\n                          padding: 2,\n                          borderRadius: 15,\n                          marginLeft: 5,\n                        }}\n                        onPress={() => setdater(false)}\n                      />\n                    </View>\n                  ) : null}\n                </View>\n              </ScrollView>\n            </View>\n          ) : (\n            <View\n              style={{\n                flexDirection: \"column\",\n                width: \"100%\",\n                height: 40,\n                marginTop: 10,\n              }}\n            >\n              <View\n                style={{\n                  width: \"100%\",\n                  height: 30,\n                  backgroundColor: \"#deebff\",\n                  top: winWidth > 767 ? \"20%\" : \"10%\",\n                  borderTopLeftRadius: 10,\n                  borderTopRightRadius: 10,\n                }}\n              >\n                <Text\n                  style={{\n                    padding: 5,\n                    fontWeight: \"500\",\n                    color: \"#000\",\n                    alignSelf: \"center\",\n                    fontSize: winWidth > 767 ? 20 : 15,\n                    marginBottom: 10,\n                  }}\n                >\n                  Available {term}s\n                </Text>\n              </View>\n            </View>\n          )}\n          <ScrollView showsVerticalScrollIndicator={false} bounces={true}>\n            {\n              parent ? (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n\n                    alignItems: \"flex-start\",\n                    justifyContent: \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                >\n                  {filteredParents.map((item, cIndex) => {\n                    return Data.map((i) =>\n                      i.name === item.name ? (\n                        <Card\n                          key={item.id}\n                          name={item.name}\n                          avatar={i.image}\n                          isCrop={true}\n                          onPress={() => {\n                            setparent(false), setterm(item.name);\n                          }}\n                        />\n                      ) : null\n                    );\n                  })}\n                </View>\n              ) : filteractive ? (\n                <View\n                  style={{\n                    width: \"100%\",\n                    height: winHeight * 0.89,\n                  }}\n                >\n                  <FlatList\n                    showsVerticalScrollIndicator={false}\n                    data={multiTo}\n                    renderItem={renderItems}\n                    ListEmptyComponent={() => (\n                      <View style={styles.container}>\n                        <Text style={{ fontSize: 30 }}>\n                          {\" \"}\n                          Oops ! Didnt find that\n                        </Text>\n                      </View>\n                    )}\n                    contentContainerStyle={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"flex-start\",\n                      justifyContent: \"center\",\n                      padding: winWidth > 767 ? 10 : 2,\n                    }}\n                  />\n                </View>\n              ) : (\n                <View\n                  style={{\n                    width: \"100%\",\n                    height: winHeight * 0.89,\n                  }}\n                >\n                  <FlatList\n                    showsVerticalScrollIndicator={false}\n                    data={filteredFarmers}\n                    renderItem={renderItems}\n                    ListEmptyComponent={() =>\n                      term && filteredFarmers.length == 0 ? (\n                        <View style={styles.container}>\n                          <Text style={{ fontSize: 30 }}>\n                            {\" \"}\n                            Oops ! Didnt find that\n                          </Text>\n                        </View>\n                      ) : (\n                        <View style={styles.container} ref={container} />\n                      )\n                    }\n                    contentContainerStyle={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"flex-start\",\n                      justifyContent: \"center\",\n                      padding: winWidth > 767 ? 10 : 2,\n                    }}\n                  />\n                </View>\n              )\n\n              /* {parent ? (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  width: \"100%\",\n                  flexWrap: \"wrap\",\n\n                  alignItems: \"flex-start\",\n                  justifyContent: \"center\",\n                  padding: winWidth > 767 ? 10 : 2,\n                }}\n              >\n                {filteredParents.map((item, cIndex) => {\n                  return Data.map((i) =>\n                    i.name === item.name ? (\n                      <Card\n                        key={item.id}\n                        name={item.name}\n                        avatar={i.image}\n                        isCrop={true}\n                        onPress={() => {\n                          setparent(false), setterm(item.name);\n                        }}\n                      />\n                    ) : null\n                  );\n                })}\n              </View>\n            ) : filteractive ? (\n              merge ? (\n                // <View\n                //   style={{\n                //     flexDirection: \"row\",\n                //     width: \"100%\",\n                //     flexWrap: \"wrap\",\n                //     alignItems: \"flex-start\",\n                //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                //     padding: winWidth > 767 ? 10 : 2,\n                //   }}\n                // >\n                //   {mergeResult.map((item, cIndex) => {\n                //     return (\n                //       <Card\n                //         key={item.id}\n                //         name={item.farmerName}\n                //         avatar={item.farmerImage}\n                //         phone={item.phone}\n                //         address={item.state}\n                //         crop={item.crops.map((i) => i.cropName)}\n                //         onPress={() => {\n                //           setfarmer(item.id), onOpen(), sethideFAB(true);\n                //         }}\n                //         cropAvatar={item.image}\n                //       />\n                //     );\n                //   })}\n                // </View>\n                <View\n                  style={{\n                    width: \"100%\",\n                    height: winHeight * 0.89,\n                  }}\n                >\n                  <FlatList\n                    showsVerticalScrollIndicator={false}\n                    data={multiTo}\n                    renderItem={renderItems}\n                    ListEmptyComponent={() => (\n                      <View style={styles.container}>\n                        <Text style={{ fontSize: 30 }}>\n                          {\" \"}\n                          Oops ! Didnt find that\n                        </Text>\n                      </View>\n                    )}\n                    contentContainerStyle={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"flex-start\",\n                      justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                      padding: winWidth > 767 ? 10 : 2,\n                    }}\n                  />\n                </View>\n              ) : val && !addr && !dater ? (\n                // <View\n                //   style={{\n                //     flexDirection: \"row\",\n                //     width: \"100%\",\n                //     flexWrap: \"wrap\",\n                //     alignItems: \"flex-start\",\n                //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                //     padding: winWidth > 767 ? 10 : 2,\n                //   }}\n                // >\n                //   {genderFilter.map((item, cIndex) => {\n                //     return (\n                //       <Card\n                //         key={item.id}\n                //         name={item.farmerName}\n                //         avatar={item.farmerImage}\n                //         phone={item.phone}\n                //         address={item.state}\n                //         crop={item.crops.map((i) => i.cropName)}\n                //         onPress={() => {\n                //           setfarmer(item.id), onOpen(), sethideFAB(true);\n                //         }}\n                //       />\n                //     );\n                //   })}\n                // </View>\n                <View\n                  style={{\n                    width: \"100%\",\n                    height: winHeight * 0.89,\n                  }}\n                >\n                  <FlatList\n                    showsVerticalScrollIndicator={false}\n                    data={genderFilter}\n                    renderItem={renderItems}\n                    ListEmptyComponent={() => (\n                      <View style={styles.container}>\n                        <Text style={{ fontSize: 30 }}>\n                          {\" \"}\n                          Oops ! Didnt find that\n                        </Text>\n                      </View>\n                    )}\n                    contentContainerStyle={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"flex-start\",\n                      justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                      padding: winWidth > 767 ? 10 : 2,\n                    }}\n                  />\n                </View>\n              ) : !val && addr && !dater ? (\n                // <View\n                //   style={{\n                //     flexDirection: \"row\",\n                //     width: \"100%\",\n                //     flexWrap: \"wrap\",\n                //     alignItems: \"flex-start\",\n                //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                //     padding: winWidth > 767 ? 10 : 2,\n                //   }}\n                // >\n                //   {addrFilter.map((item, cIndex) => {\n                //     return (\n                //       <Card\n                //         key={item.id}\n                //         name={item.farmerName}\n                //         avatar={item.farmerImage}\n                //         phone={item.phone}\n                //         address={item.state}\n                //         crop={item.crops.map((i) => i.cropName)}\n                //         onPress={() => {\n                //           setfarmer(item.id), onOpen();\n                //         }}\n                //         cropAvatar={item.image}\n                //       />\n                //     );\n                //   })}\n                // </View>\n                <View\n                  style={{\n                    width: \"100%\",\n                    height: winHeight * 0.89,\n                  }}\n                >\n                  <FlatList\n                    showsVerticalScrollIndicator={false}\n                    data={addrFilter}\n                    renderItem={renderItems}\n                    ListEmptyComponent={() => (\n                      <View style={styles.container}>\n                        <Text style={{ fontSize: 30 }}>\n                          {\" \"}\n                          Oops ! Didnt find that\n                        </Text>\n                      </View>\n                    )}\n                    contentContainerStyle={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"flex-start\",\n                      justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                      padding: winWidth > 767 ? 10 : 2,\n                    }}\n                  />\n                </View>\n              ) : !val && !addr && dater ? (\n                <View\n                  style={{\n                    width: \"100%\",\n                    height: winHeight * 0.89,\n                  }}\n                >\n                  {\" \"}\n                  <FlatList\n                    showsVerticalScrollIndicator={false}\n                    data={harvestResult}\n                    renderItem={renderItems}\n                    ListEmptyComponent={() => (\n                      <View style={styles.container}>\n                        <Text style={{ fontSize: 30 }}>\n                          {\" \"}\n                          Oops ! Didnt find that\n                        </Text>\n                      </View>\n                    )}\n                    contentContainerStyle={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"flex-start\",\n                      justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                      padding: winWidth > 767 ? 10 : 2,\n                    }}\n                  />\n                </View>\n              ) : (\n                <Text>No result found</Text>\n              )\n            ) : (\n              // <View\n              //   style={{\n              //     flexDirection: \"row\",\n              //     width: \"100%\",\n              //     flexWrap: \"wrap\",\n              //     alignItems: \"flex-start\",\n              //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n              //     padding: winWidth > 767 ? 10 : 2,\n              //   }}\n              // >\n              //   {filteredFarmers.map((item, cIndex) => {\n              //     return (\n              //       <Card\n              //         key={item.id}\n              //         name={item.name}\n              //         avatar={item.avatar}\n              //         phone={item.phone}\n              //         address={item.address}\n              //         crop={item.crop}\n              //         onPress={() => {\n              //           setfarmer(item.id), onOpen(), sethideFAB(true);\n              //         }}\n              //         cropAvatar={item.image}\n              //       />\n              //     );\n              //   })}\n              // </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  height: winHeight * 0.89,\n                }}\n              >\n                <FlatList\n                  showsVerticalScrollIndicator={false}\n                  data={filteredFarmers}\n                  renderItem={renderItems}\n                  ListEmptyComponent={() => (\n                    <View style={styles.container}>\n                      <Text style={{ fontSize: 30 }}> laodieeng</Text>\n                    </View>\n                  )}\n                  contentContainerStyle={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n                    alignItems: \"flex-start\",\n                    justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                />\n              </View>\n            )} */\n            }\n          </ScrollView>\n          {/* {filteractive ? (\n            merge ? (\n              // <View\n              //   style={{\n              //     flexDirection: \"row\",\n              //     width: \"100%\",\n              //     flexWrap: \"wrap\",\n              //     alignItems: \"flex-start\",\n              //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n              //     padding: winWidth > 767 ? 10 : 2,\n              //   }}\n              // >\n              //   {mergeResult.map((item, cIndex) => {\n              //     return (\n              //       <Card\n              //         key={item.id}\n              //         name={item.farmerName}\n              //         avatar={item.farmerImage}\n              //         phone={item.phone}\n              //         address={item.state}\n              //         crop={item.crops.map((i) => i.cropName)}\n              //         onPress={() => {\n              //           setfarmer(item.id), onOpen(), sethideFAB(true);\n              //         }}\n              //         cropAvatar={item.image}\n              //       />\n              //     );\n              //   })}\n              // </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  height: winHeight * 0.915,\n                }}\n              >\n                <FlatList\n                  showsVerticalScrollIndicator={false}\n                  data={mergeResult}\n                  renderItem={renderItems}\n                  ListEmptyComponent={() => (\n                    <View style={styles.container} ref={container} />\n                  )}\n                  contentContainerStyle={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n                    alignItems: \"center\",\n                    justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                />\n              </View>\n            ) : val && !addr && !dater && !parenter ? (\n              // <View\n              //   style={{\n              //     flexDirection: \"row\",\n              //     width: \"100%\",\n              //     flexWrap: \"wrap\",\n              //     alignItems: \"flex-start\",\n              //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n              //     padding: winWidth > 767 ? 10 : 2,\n              //   }}\n              // >\n              //   {genderFilter.map((item, cIndex) => {\n              //     return (\n              //       <Card\n              //         key={item.id}\n              //         name={item.farmerName}\n              //         avatar={item.farmerImage}\n              //         phone={item.phone}\n              //         address={item.state}\n              //         crop={item.crops.map((i) => i.cropName)}\n              //         onPress={() => {\n              //           setfarmer(item.id), onOpen(), sethideFAB(true);\n              //         }}\n              //       />\n              //     );\n              //   })}\n              // </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  height: winHeight * 0.915,\n                }}\n              >\n                <FlatList\n                  showsVerticalScrollIndicator={false}\n                  data={genderFilter}\n                  renderItem={renderItems}\n                  ListEmptyComponent={() => (\n                    <View style={styles.container} ref={container} />\n                  )}\n                  contentContainerStyle={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n                    alignItems: \"center\",\n                    justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                />\n              </View>\n            ) : !val && addr && !dater && !parenter ? (\n              // <View\n              //   style={{\n              //     flexDirection: \"row\",\n              //     width: \"100%\",\n              //     flexWrap: \"wrap\",\n              //     alignItems: \"flex-start\",\n              //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n              //     padding: winWidth > 767 ? 10 : 2,\n              //   }}\n              // >\n              //   {addrFilter.map((item, cIndex) => {\n              //     return (\n              //       <Card\n              //         key={item.id}\n              //         name={item.farmerName}\n              //         avatar={item.farmerImage}\n              //         phone={item.phone}\n              //         address={item.state}\n              //         crop={item.crops.map((i) => i.cropName)}\n              //         onPress={() => {\n              //           setfarmer(item.id), onOpen();\n              //         }}\n              //         cropAvatar={item.image}\n              //       />\n              //     );\n              //   })}\n              // </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  height: winHeight * 0.915,\n                }}\n              >\n                <FlatList\n                  showsVerticalScrollIndicator={false}\n                  data={addrFilter}\n                  renderItem={renderItems}\n                  ListEmptyComponent={() => (\n                    <View style={styles.container} ref={container} />\n                  )}\n                  contentContainerStyle={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n                    alignItems: \"center\",\n                    justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                />\n              </View>\n            ) : !val && !addr && dater && !parenter ? (\n              <View\n                style={{\n                  width: \"100%\",\n                  height: winHeight * 0.915,\n                }}\n              >\n                {\" \"}\n                <FlatList\n                  showsVerticalScrollIndicator={false}\n                  data={harvestResult}\n                  renderItem={renderItems}\n                  ListEmptyComponent={() => (\n                    <View style={styles.container} ref={container} />\n                  )}\n                  contentContainerStyle={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n                    alignItems: \"center\",\n                    justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                />\n              </View>\n            ) : !val && !addr && !dater && parenter ? (\n              <View\n                style={{\n                  width: \"100%\",\n                  height: winHeight * 0.915,\n                }}\n              >\n                {\" \"}\n                <FlatList\n                  showsVerticalScrollIndicator={false}\n                  data={parentFilter}\n                  renderItem={renderItems}\n                  ListEmptyComponent={() => (\n                    <View style={styles.container} ref={container} />\n                  )}\n                  contentContainerStyle={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n                    alignItems: \"center\",\n                    justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                />\n              </View>\n            ) : (\n              <Text>No result found</Text>\n            )\n          ) : (\n            <View\n              style={{\n                width: \"100%\",\n                height: winHeight * 0.915,\n              }}\n            >\n              <FlatList\n                showsVerticalScrollIndicator={false}\n                data={farmers}\n                renderItem={renderItems}\n                ListEmptyComponent={\n                  () => <View style={styles.container} ref={container} /> //  lottie.loadAnimation({\n                  //    container:container.current,\n                  //    renderer:'svg',\n                  //    loop:true,\n                  //    autoplay:true,\n                  //   animationData:require('../../assets/loader.json')\n\n                  //  })\n                }\n                contentContainerStyle={{\n                  flexDirection: \"row\",\n                  width: \"100%\",\n                  flexWrap: \"wrap\",\n                  alignItems: \"center\",\n                  justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                  padding: winWidth > 767 ? 10 : 2,\n                }}\n              />\n            </View>\n          )} */}\n\n          {/* <ScrollView\n            showsVerticalScrollIndicator={false}\n            onScrollEndDrag={() => setfirstScroll(firstScroll + 5)}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                width: \"100%\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                padding: winWidth > 767 ? 10 : 2,\n              }}\n            >\n              {farmers.map((item, cIndex) => {\n                return (\n                  <Card\n                    key={item.id}\n                    name={item.farmerName}\n                    avatar={item.farmerImage}\n                    phone={item.phone}\n                    address={item.state}\n                    crop={item.crops.map((i) => i.cropName)}\n                    onPress={() => {\n                      console.log(item.farmerName),\n                        setfarmer(item.id),\n                        console.log(item.crops.map((i) => i.quantity));\n                      onOpen(), setmodalName(item.farmerName);\n                    }}\n                  />\n                );\n              })}\n            </View>\n            {winWidth < 767 ? (\n              <View\n                style={{\n                  height: 60,\n                  width: \"100%\",\n                  backgroundColor: \"transparent\",\n                  marginTop: 10,\n                }}\n              ></View>\n            ) : null}\n          </ScrollView> */}\n        </View>\n      </View>\n      <Modalize\n        ref={modalizeRef}\n        modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.88}\n        threshold={100}\n        modalStyle={winWidth > 767 ? { width: 400, alignSelf: \"center\" } : null}\n        // modalStyle={{ position: \"absolute\", width: \"100%\", zIndex: 999 }}\n        // modalStyle={\n        //   winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n        // }\n        closeOnOverlayTap={true}\n        mod\n      >\n        {farmers.map((item, cIndex) => {\n          if (farmer == item.id) {\n            return (\n              <View>\n                <View\n                  style={{\n                    backgroundColor: \"#3A48ED\",\n                    width: \"100%\",\n                    height: 170,\n                    borderWidth: 1,\n                    top: -2,\n                    borderRadius: 15,\n                    borderColor: \"#3A48ED\",\n                    shadowColor: \"#000\",\n                    shadowOffset: {\n                      width: 0,\n                      height: 4,\n                    },\n                    shadowOpacity: 0.32,\n                    shadowRadius: 5.46,\n\n                    elevation: 9,\n                  }}\n                >\n                  {/* <Text>{item.name}</Text>\n                        <Text>{item.address}</Text>\n                        <Image source={item.avatar} style={{height:50, width:50}}/>\n                   <Text>{farmer}</Text> */}\n                  <TouchableOpacity\n                    onPress={() => onClose()}\n                    style={{\n                      alignItems: \"center\",\n                      marginTop: 5,\n                      marginRight: 2,\n                      padding: 5,\n                      justifyContent: \"center\",\n                      alignSelf: \"flex-end\",\n                      backgroundColor: \"rgba(0,0,0,0.2)\",\n                      borderRadius: 10,\n                      height: 35,\n                      width: 70,\n                    }}\n                  >\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Text\n                        style={{\n                          fontSize: 15,\n                          fontWeight: 500,\n                          color: \"#fff\",\n                          marginRight: 5,\n                        }}\n                      >\n                        Close\n                      </Text>\n                      <SimpleLineIcons\n                        name=\"close\"\n                        size={15}\n                        color=\"#fff\"\n                        onPress={() => onClose()}\n                      />\n                    </View>\n                  </TouchableOpacity>\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      justifyContent: \"space-between\",\n                      padding: 2,\n                      top: -10,\n                    }}\n                  >\n                    <View style={{ width: \"40%\", height: \"100%\", padding: 5 }}>\n                      <Image\n                        source={{ uri: item.farmerImage }}\n                        style={{\n                          height: 120,\n                          width: 120,\n                          borderRadius: 120,\n                          borderColor: \"#fff\",\n                          borderWidth: 2,\n                        }}\n                      />\n                    </View>\n                    <View\n                      style={{\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-evenly\",\n                        width: \"60%\",\n                        height: \"100%\",\n                      }}\n                    >\n                      <View\n                        style={{\n                          flexDirection: \"column\",\n                          alignItems: \"flex-start\",\n                          width: \"100%\",\n                          height: \"100%\",\n                          justifyContent: \"space-evenly\",\n                        }}\n                      >\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Feather name=\"user\" size={20} color=\"#fff\" />\n                          <Text\n                            style={{\n                              fontSize: 20,\n                              color: \"#fff\",\n                              fontWeight: \"700\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            {toTitleCase(item.farmerName)}\n                          </Text>\n                        </View>\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Feather name=\"map-pin\" size={20} color=\"#fff\" />\n                          <Text\n                            style={{\n                              fontSize: 20,\n                              color: \"#fff\",\n                              fontWeight: \"700\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            {item.state}\n                          </Text>\n                        </View>\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Feather name=\"user\" size={20} color=\"#fff\" />\n                          <Text\n                            style={{\n                              fontSize: 20,\n                              color: \"#fff\",\n                              fontWeight: \"700\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            {hideNumber(item.phone)}\n                          </Text>\n                        </View>\n                      </View>\n                    </View>\n                  </View>\n                  <View style={{ top: -40 }}>\n                    <Text\n                      style={{\n                        marginTop: winWidth < 400 ? 40 : 60,\n                        padding: 5,\n                        fontWeight: \"500\",\n                        color: \"#6F6F6F\",\n                        fontSize: 20,\n                        marginLeft: 5,\n                      }}\n                    >\n                      Farming Details\n                    </Text>\n                    <View\n                      style={{\n                        width: \"95%\",\n                        alignSelf: \"center\",\n                        height: 1,\n                        backgroundColor: \"#C0C0C0\",\n                      }}\n                    ></View>\n                    <View\n                      style={{\n                        flexDirection: \"column\",\n                        marginTop: 10,\n                        padding: 10,\n                        height: winWidth < 400 ? 100 : 180,\n                        justifyContent: \"space-between\",\n                      }}\n                    >\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          alignItems: \"center\",\n                          width: \"100%\",\n                          justifyContent: \"space-between\",\n                          marginBottom: 10,\n                        }}\n                      >\n                        <View style={{ flexDirection: \"column\", width: \"50%\" }}>\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <Entypo name=\"leaf\" size={20} color=\"#9F99FF\" />\n                            <Text\n                              style={{\n                                fontSize: 12,\n                                color: \"#6F6F6F\",\n                                fontWeight: \"600\",\n                              }}\n                            >\n                              Crop\n                            </Text>\n                          </View>\n                          <View>\n                            <Text style={{ fontSize: 20 }}>\n                              {item.crops.map((i) => i.cropName).slice(0, 1)}\n                            </Text>\n                          </View>\n                        </View>\n\n                        <View\n                          style={{\n                            flexDirection: \"column\",\n                            width: \"50%\",\n                            alignItems: \"flex-end\",\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <SimpleLineIcons\n                              name=\"calendar\"\n                              size={20}\n                              color=\"#9F99FF\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 12,\n                                color: \"#6F6F6F\",\n                                marginLeft: 5,\n                                fontWeight: \"600\",\n                              }}\n                            >\n                              Harvest Date\n                            </Text>\n                          </View>\n                          <View>\n                            <Text style={{ fontSize: 20 }}>\n                              {item.crops.map((i) => i.harvestDate).slice(0, 1)}\n                            </Text>\n                          </View>\n                        </View>\n                      </View>\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          alignItems: \"center\",\n                          width: \"100%\",\n                          justifyContent: \"space-between\",\n                          marginTop: 5,\n                        }}\n                      >\n                        <View style={{ flexDirection: \"column\", width: \"50%\" }}>\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <SimpleLineIcons\n                              name=\"size-fullscreen\"\n                              size={20}\n                              color=\"#9F99FF\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 12,\n                                color: \"#6F6F6F\",\n                                fontWeight: \"600\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              Farming Area\n                            </Text>\n                          </View>\n                          <View>\n                            <Text style={{ fontSize: 20 }}>\n                              {item.land} Kattha\n                            </Text>\n                          </View>\n                        </View>\n\n                        <View\n                          style={{\n                            flexDirection: \"column\",\n                            width: \"50%\",\n                            alignItems: \"flex-end\",\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <SimpleLineIcons\n                              name=\"speedometer\"\n                              size={20}\n                              color=\"#9F99FF\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 12,\n                                color: \"#6F6F6F\",\n                                marginLeft: 5,\n                                fontWeight: \"600\",\n                              }}\n                            >\n                              Quantity\n                            </Text>\n                          </View>\n                          <View>\n                            <Text style={{ fontSize: 20, marginLeft: 5 }}>\n                              {item.crops.map((i) => i.quantity).slice(0, 1) /\n                                100}{\" \"}\n                              q\n                            </Text>\n                          </View>\n                        </View>\n                      </View>\n                      <View></View>\n                    </View>\n                    <View\n                      style={{\n                        width: \"95%\",\n                        alignSelf: \"center\",\n                        height: 1,\n                        backgroundColor: \"#C0C0C0\",\n                        marginTop: winWidth < 400 ? 30 : 10,\n                      }}\n                    />\n                  </View>\n                  <View\n                    style={{\n                      width: \"100%\",\n                      flexDirection: \"column\",\n                      top: -29,\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 15,\n                        color: \"#808080\",\n                        marginLeft: 5,\n                      }}\n                    >\n                      Coming soon\n                    </Text>\n                    <View\n                      style={{\n                        width: \"100%\",\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-evenly\",\n                        top: 5,\n                      }}\n                    >\n                      <TouchableOpacity\n                        style={{\n                          width: winWidth < 400 ? 70 : 90,\n                          height: winWidth < 400 ? 30 : 40,\n                          backgroundColor: \"#A9A9A9\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          flexDirection: \"row\",\n                          borderRadius: 10,\n                        }}\n                        onPress={() =>\n                          alert(\n                            \"Click to chat feature helps you connect directly to this farmer in one click. Feature Coming soon !\"\n                          )\n                        }\n                      >\n                        <FontAwesome5 name=\"whatsapp\" size={20} color=\"#fff\" />\n                        <Text\n                          style={{\n                            fontSize: winWidth < 400 ? 16 : 20,\n                            color: \"#fff\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          Chat\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity\n                        style={{\n                          width: winWidth < 400 ? 70 : 90,\n                          height: winWidth < 400 ? 30 : 40,\n                          backgroundColor: \"#A9A9A9\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          flexDirection: \"row\",\n                          borderRadius: 10,\n                        }}\n                        onPress={() => alert(\"Feature Coming soon !\")}\n                      >\n                        <Text\n                          style={{\n                            fontSize: winWidth < 400 ? 16 : 20,\n                            color: \"#fff\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          Buy\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity\n                        style={{\n                          width: winWidth < 400 ? 90 : 120,\n                          height: winWidth < 400 ? 35 : 40,\n                          backgroundColor: \"#fff\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          flexDirection: \"row\",\n                          borderRadius: 10,\n                          borderColor: \"#A9A9A9\",\n                          borderWidth: 2,\n                          padding: 5,\n                        }}\n                        onPress={() =>\n                          alert(\n                            \"Support the farmer by any kind. Feature Coming Soon !\"\n                          )\n                        }\n                      >\n                        <FontAwesome\n                          name=\"handshake-o\"\n                          size={15}\n                          color=\"#A9A9A9\"\n                        />\n                        <Text\n                          style={{\n                            fontSize: winWidth < 400 ? 16 : 20,\n                            color: \"#A9A9A9\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          Support\n                        </Text>\n                      </TouchableOpacity>\n                    </View>\n                  </View>\n                </View>\n              </View>\n            );\n          } else {\n            null;\n          }\n        })}\n      </Modalize>\n      <Modalize\n        ref={modalizeFilterRef}\n        modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.88}\n        modalStyle={winWidth > 767 ? { width: 400, alignSelf: \"center\" } : null}\n        threshold={100}\n        closeOnOverlayTap={true}\n        mod\n      >\n        <View\n          style={{\n            width: \"100%\",\n            flexDirection: \"row\",\n            alignItems: \"flex-start\",\n            justifyContent: \"space-between\",\n            padding: 5,\n            top: 5,\n          }}\n        >\n          {/* <TouchableOpacity onPress={() => onCloseFilter()}>\n                Close Filter\n              </TouchableOpacity> */}\n          <Text style={{ fontSize: 16, marginLeft: 7, fontWeight: \"600\" }}>\n            Filter Results\n          </Text>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n\n              width: \"50%\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <TouchableOpacity\n              style={{\n                width: 60,\n                height: 30,\n                backgroundColor: \"#fff\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n\n                borderRadius: 10,\n                borderColor: \"#3A48ED\",\n                borderWidth: 2,\n              }}\n              onPress={() => {\n                setmerge(false),\n                  setfilteractive(false),\n                  onCloseFilter(),\n                  setval(\"\"),\n                  setaddr(\"\");\n                setparenter(\"\");\n                setdater(false);\n                setStartDate(new Date());\n                setapplied(false);\n                setEndDate(new Date());\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 16,\n                  color: \"#3A48ED\",\n                }}\n              >\n                Reset\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={{\n                width: 60,\n                height: 30,\n                backgroundColor: \"#3ECF8E\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n\n                borderRadius: 10,\n                borderColor: \"#3ECF8E\",\n                borderWidth: 2,\n              }}\n              onPress={() =>\n                // !merge && filteractive ? setmerge(false) : setmerge(true);\n                //   (!val && addr && !dater && !parenter && !merge) ||\n                //   (val && !addr && !dater && !parenter && !merge) ||\n                //   (!val && !addr && dater && !parenter && !merge) ||\n                //   (!val && !addr && !dater && parenter && !merge)\n                //     ? (setfilteractive(true), setmerge(false))\n                //     : !val && !addr && !dater && !parenter && merge\n                //     ? (setmerge(true), setfilteractive(false))\n                //     : setmerge(true);\n                //   onCloseFilter();\n\n                //   setdater(true);\n                // }}\n                {\n                  setfilteractive(true), onCloseFilter(), setapplied(true);\n                }\n              }\n            >\n              <Text\n                style={{\n                  fontSize: 16,\n                  color: \"#fff\",\n                }}\n              >\n                Apply\n              </Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={() => {\n                onCloseFilter();\n              }}\n            >\n              <View\n                style={{\n                  width: 25,\n                  height: 25,\n                  borderWidth: 2,\n                  borderColor: \"#A1C7FF\",\n                  alignItems: \"center\",\n                  alignSelf: \"flex-end\",\n                  justifyContent: \"center\",\n                  flexDirection: \"row\",\n                  backgroundColor: \"#A1C7FF\",\n                  borderRadius: 25,\n                }}\n              >\n                <AntDesign name=\"close\" size={20} color=\"#3A48ED\" />\n              </View>\n            </TouchableOpacity>\n          </View>\n        </View>\n        <View\n          style={{\n            width: \"95%\",\n            alignSelf: \"center\",\n            height: 1,\n            backgroundColor: \"#C0C0C0\",\n            marginTop: 10,\n            alignItems: \"center\",\n          }}\n        ></View>\n        <Text\n          style={{\n            color: \"#6F6F6F\",\n            fontSize: 15,\n            marginTop: 3,\n            marginLeft: 7,\n            padding: 5,\n          }}\n        >\n          By Gender\n        </Text>\n        <View\n          style={{\n            width: \"32%\",\n            marginTop: 10,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            padding: 5,\n            marginLeft: 7,\n            alignSelf: \"flex-start\",\n          }}\n        >\n          {genderData.map((item) => {\n            return (\n              <View key={item.key} style={styles.buttonContainer}>\n                <TouchableOpacity\n                  style={styles.circle}\n                  onPress={() => {\n                    setval(item.key);\n                    setapplied(false);\n                    // toggler(item.key);\n                    // let a = item.text;\n                    // let b = filteredFarmers.filter((i) => {\n                    //   return i.gender.toLowerCase() === a.toLowerCase();\n                    // });\n                    // console.log(item.text);\n                    // console.log(a);\n                    // console.log(b);\n                  }}\n                >\n                  {val === item.key && <View style={styles.checkedCircle} />}\n                </TouchableOpacity>\n                <Text style={{ fontSize: 16, marginLeft: 5 }}>{item.text}</Text>\n              </View>\n            );\n          })}\n        </View>\n        <View\n          style={{\n            width: \"100%\",\n            marginTop: 10,\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            justifyContent: \"space-evenly\",\n            padding: 5,\n            alignSelf: \"flex-start\",\n          }}\n        >\n          <View\n            style={{\n              width: \"95%\",\n              alignSelf: \"center\",\n              height: 1,\n              backgroundColor: \"#C0C0C0\",\n              marginTop: 10,\n              alignItems: \"center\",\n            }}\n          ></View>\n          <Text\n            style={{\n              color: \"#6F6F6F\",\n              fontSize: 15,\n              marginTop: 10,\n              marginLeft: 0,\n              marginBottom: 5,\n              padding: 5,\n            }}\n          >\n            By States\n          </Text>\n\n          <TouchableOpacity\n            onPress={() => setaddrToggle(!addrToggle)}\n            style={{\n              flexDirection: \"row\",\n              backgroundColor: \"#d6d9ff\",\n              borderWidth: 2,\n              borderColor: \"#7b42ff\",\n              borderRadius: 5,\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              padding: 5,\n              minWidth: \"30%\",\n\n              marginLeft: 7,\n            }}\n          >\n            <Text style={{ fontSize: 15 }}>{addr ? addr : \"All States\"}</Text>\n            <AntDesign name=\"down\" size={12} />\n          </TouchableOpacity>\n          {addrToggle ? (\n            <View style={{ marginTop: 10 }}>\n              {States.map((item) => {\n                return (\n                  <View key={item.code} style={styles.buttonnewContainer}>\n                    <TouchableOpacity\n                      style={styles.circle}\n                      onPress={() => {\n                        setaddr(item.name);\n                        setaddrToggle(false);\n                        setapplied(false);\n                        // toggler(item.key);\n                        // let a = item.text;\n                        // let b = filteredFarmers.filter((i) => {\n                        //   return i.gender.toLowerCase() === a.toLowerCase();\n                        // });\n                        // console.log(item.text);\n                        // console.log(a);\n                        // console.log(b);\n                      }}\n                    >\n                      {addr === item.name && (\n                        <View style={styles.checkedCircle} />\n                      )}\n                    </TouchableOpacity>\n                    <Text style={{ fontSize: 16, marginLeft: 5 }}>\n                      {item.name}\n                    </Text>\n                  </View>\n                );\n              })}\n            </View>\n          ) : null}\n        </View>\n        <View\n          style={{\n            width: \"100%\",\n            marginTop: 10,\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            justifyContent: \"space-evenly\",\n            padding: 5,\n            alignSelf: \"flex-start\",\n          }}\n        >\n          <View\n            style={{\n              width: \"95%\",\n              alignSelf: \"center\",\n              height: 1,\n              backgroundColor: \"#C0C0C0\",\n              marginTop: 10,\n              alignItems: \"center\",\n            }}\n          ></View>\n          <View>\n            <Text\n              style={{\n                color: \"#6F6F6F\",\n                fontSize: 15,\n                marginTop: 10,\n                marginLeft: 0,\n                marginBottom: 5,\n                zIndex: 1000,\n                padding: 5,\n              }}\n            >\n              By Harvest Date\n            </Text>\n            <View\n              style={{\n                flex: 1,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                width: \"100%\",\n                height: 150,\n                padding: 5,\n              }}\n            >\n              <View>\n                <Text style={{ marginBottom: 10 }}>From</Text>\n                <DatePicker\n                  dateFormat=\"dd/MM/yyyy\"\n                  selected={startDate}\n                  onChange={(date) => setStartDate(date)}\n                  customInput={\n                    <TextInput\n                      style={{\n                        backgroundColor: \"#d6d9ff\",\n                        borderRadius: 5,\n                        borderColor: \"#7b42ff\",\n                        height: 35,\n                        borderWidth: 2,\n                        padding: 5,\n                        fontSize: 15,\n                        width: 100,\n                      }}\n                    />\n                  }\n                />\n              </View>\n              <View style={{ marginLeft: 20 }}>\n                <Text style={{ marginBottom: 10 }}>To</Text>\n                <DatePicker\n                  dateFormat=\"dd/MM/yyyy\"\n                  popperPlacement=\"bottom-right\"\n                  selected={dater ? endDate : null}\n                  onChange={(date) => {\n                    setEndDate(date), setdater(true);\n                  }}\n                  customInput={\n                    <TextInput\n                      style={{\n                        backgroundColor: \"#d6d9ff\",\n                        borderRadius: 5,\n                        borderColor: \"#7b42ff\",\n                        height: 35,\n                        borderWidth: 2,\n                        padding: 5,\n                        fontSize: 15,\n                        width: 100,\n                      }}\n                    />\n                  }\n                />\n              </View>\n            </View>\n\n            {/* <TouchableOpacity onPress={() => showHarvests()}>\n                    This week\n                  </TouchableOpacity>\n                  <TouchableOpacity>This month</TouchableOpacity>\n                  <TouchableOpacity>3 months from now</TouchableOpacity>\n                  <TouchableOpacity>6 months from now</TouchableOpacity>\n                  <TouchableOpacity>1 year from now</TouchableOpacity> */}\n          </View>\n          <View\n            style={{\n              width: \"95%\",\n              alignSelf: \"center\",\n              height: 1,\n\n              marginTop: 100,\n              alignItems: \"center\",\n            }}\n          ></View>\n        </View>\n        <View\n          style={{\n            width: \"100%\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-evenly\",\n            alignSelf: \"flex-end\",\n\n            marginTop: \"30%\",\n          }}\n        >\n          {/* <TouchableOpacity\n                  style={{\n                    width: 80,\n                    height: 40,\n                    backgroundColor: \"#fff\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n\n                    borderRadius: 10,\n                    borderColor: \"#3A48ED\",\n                    borderWidth: 2,\n                  }}\n                  onPress={() => {\n                    setmerge(false),\n                      setfilteractive(false),\n                      onCloseFilter(),\n                      setval(\"\"),\n                      setaddr(\"\");\n                    setdater(!dater);\n                    sethideFAB(!hideFAB);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 16,\n                      color: \"#3A48ED\",\n                    }}\n                  >\n                    Reset\n                  </Text>\n                </TouchableOpacity> */}\n          {/* <TouchableOpacity\n                  style={{\n                    width: 80,\n                    height: 40,\n                    backgroundColor: \"#3ECF8E\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n\n                    borderRadius: 10,\n                    borderColor: \"#3ECF8E\",\n                    borderWidth: 2,\n                  }}\n                  onPress={() => {\n                    // !merge && filteractive ? setmerge(false) : setmerge(true);\n                    (!val && addr && !merge) || (val && !addr && !merge)\n                      ? setfilteractive(true)\n                      : !val && !addr && merge\n                      ? (setmerge(true), setfilteractive(false))\n                      : setmerge(true);\n                    onCloseFilter();\n                    sethideFAB(false);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 16,\n                      color: \"#fff\",\n                    }}\n                  >\n                    Apply\n                  </Text>\n                </TouchableOpacity> */}\n        </View>\n        {/* <View\n                style={{\n                  height: 60,\n                  width: \"100%\",\n                  backgroundColor: \"#fff\",\n                  marginTop: 10,\n                }}\n              ></View> */}\n      </Modalize>\n      {blur ? (\n        <View\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n            position: \"absolute\",\n          }}\n        >\n          <BlurView\n            tint=\"dark\"\n            intensity={40}\n            style={[StyleSheet.absoluteFill, styles.nonBlurredContent]}\n          >\n            <View\n              style={{\n                marginTop: 20,\n                padding: 5,\n                height: \"100%\",\n              }}\n            >\n              <View\n                style={{\n                  backgroundColor: \"#fff\",\n                  height: 55,\n                  width: winWidth > 767 ? \"50%\" : \"97%\",\n                  alignSelf: \"center\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  borderRadius: 8,\n                  padding: 20,\n                  shadowColor: \"#98A0FF\",\n                  shadowOffset: {\n                    width: 0,\n                    height: 4,\n                  },\n                  shadowOpacity: 0.32,\n                  shadowRadius: 5.46,\n\n                  elevation: 9,\n                }}\n              >\n                {/* <TextInput style={{height:40, backgroundColor:\"white\", width:\"75%\", padding:5, outline}} placeholder=\"Search for crops...\" autoFocus={true}/> */}\n                <TextInput\n                  style={\n                    Platform.OS === \"web\" && {\n                      outlineColor: \"#fff\",\n                      height: 40,\n                      backgroundColor: \"white\",\n                      width: \"95%\",\n                      padding: 5,\n                      fontSize: 20,\n                    }\n                  }\n                  placeholder=\"Search for Crops\"\n                  autoFocus={true}\n                  editable={blur}\n                  onChangeText={(text) => {\n                    console.log(text), setshow(text);\n                  }}\n                />\n\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  {/* {term ? (\n                    <TouchableOpacity\n                      onPress={() => {\n                        setterm(\"\");\n                      }}\n                    >\n                      <View\n                        style={{\n                          width: 50,\n                          height: 35,\n                          borderWidth: 2,\n                          borderColor: \"#3d3f40\",\n                          alignItems: \"center\",\n                          alignSelf: \"flex-end\",\n                          justifyContent: \"center\",\n                          marginRight: 5,\n                          backgroundColor: \"#3d3f40\",\n                          borderRadius: 5,\n                        }}\n                      >\n                        <Text style={{ fontSize: 15, color: \"#fff\" }}>\n                          Clear\n                        </Text>\n                      </View>\n                    </TouchableOpacity>\n                  ) : null} */}\n                </View>\n                <TouchableOpacity onPress={() => setblur(false)}>\n                  <View\n                    style={{\n                      width: 25,\n                      height: 25,\n                      borderWidth: 2,\n                      borderColor: \"#A1C7FF\",\n                      alignItems: \"center\",\n                      alignSelf: \"flex-end\",\n                      justifyContent: \"center\",\n                      right: -10,\n                      backgroundColor: \"#A1C7FF\",\n                      borderRadius: 25,\n                    }}\n                  >\n                    <AntDesign name=\"close\" size={20} color=\"#3A48ED\" />\n                  </View>\n                </TouchableOpacity>\n              </View>\n              <View style={{ flex: 1, alignItems: \"center\", width: \"100%\" }}>\n                {/* <TouchableOpacity style={{width:\"100%\", height:30, alignItems:\"center\", justifyContent:\"center\", backgroundColor:\"transparent\"}} onPress={()=>{setplacer(true),setblur(!blur)}}>\n<Text>{term}</Text>\n</TouchableOpacity> */}\n                {show !== \"\" ? (\n                  <FlatList\n                    showsVerticalScrollIndicator={false}\n                    data={filteredBlur}\n                    renderItem={renderMatch}\n                    ListEmptyComponent={() => (\n                      <View style={styles.container}>\n                        <Text style={{ fontSize: 30 }}>\n                          {\" \"}\n                          Oops ! Didnt find that\n                        </Text>\n                      </View>\n                    )}\n                    contentContainerStyle={{\n                      // flexDirection: \"row\",\n                      // width: \"100%\",\n                      // flexWrap: \"wrap\",\n                      // alignItems: \"center\",\n                      // justifyContent:\n                      //   winWidth > 767 ? \"center\" : \"center\",\n                      // padding: winWidth > 767 ? 10 : 2,\n                      width: \"100%\",\n                    }}\n                  />\n                ) : (\n                  // <View\n                  //   style={{\n                  //     width: winWidth > 767 ? \"50%\" : \"97%\",\n                  //     alignItems: \"center\",\n                  //     backgroundColor: \"#fff\",\n                  //     borderRadius: 10,\n                  //     margin: 5,\n                  //   }}\n                  // >\n                  //   <View\n                  //     style={{\n                  //       width: \"100%\",\n                  //       alignItems: \"flex-start\",\n                  //       padding: 10,\n                  //       marginBottom: 10,\n                  //       marginTop: 5,\n                  //     }}\n                  //   >\n                  //     {filteredCrops.length > 0 ? (\n                  //       <Text\n                  //         style={{\n                  //           marginLeft: 20,\n                  //           fontSize: 15,\n                  //           fontWeight: \"600\",\n                  //         }}\n                  //       >\n                  //         Available Crops\n                  //       </Text>\n                  //     ) : (\n                  //       <Text\n                  //         style={{\n                  //           marginLeft: 20,\n                  //           fontSize: 15,\n                  //           fontWeight: \"600\",\n                  //           alignSelf: \"center\",\n                  //         }}\n                  //       >\n                  //         🤔 ....That seems to be missing...\n                  //       </Text>\n                  //     )}\n                  //   </View>\n\n                  //   <View\n                  //     style={{\n                  //       width: \"100%\",\n                  //       height: winHeight * 0.5,\n                  //     }}\n                  //   >\n                  //     <FlatList\n                  //       showsVerticalScrollIndicator={false}\n                  //       data={filteredCrops}\n                  //       renderItem={renderItems}\n                  //       ListEmptyComponent={() => (\n                  //         <View style={styles.container}>\n                  //           <Text style={{ fontSize: 30 }}>\n                  //             {\" \"}\n                  //             Oops ! Didnt find that\n                  //           </Text>\n                  //         </View>\n                  //       )}\n                  //       contentContainerStyle={{\n                  //         // flexDirection: \"row\",\n                  //         // width: \"100%\",\n                  //         // flexWrap: \"wrap\",\n                  //         // alignItems: \"center\",\n                  //         // justifyContent:\n                  //         //   winWidth > 767 ? \"center\" : \"center\",\n                  //         // padding: winWidth > 767 ? 10 : 2,\n                  //         width: \"100%\",\n                  //       }}\n                  //     />\n                  //   </View>\n\n                  //   {/*\n                  //   {filteredCrops.map((item, cIndex) => {\n                  //     return (\n                  //       <View\n                  //         style={{\n                  //           width:\n                  //             winWidth > 768 ? winWidth - 80 : winWidth - 50,\n                  //           height: 45,\n                  //           padding: 5,\n                  //           borderRadius: 8,\n                  //           flexDirection: \"row\",\n                  //           alignItems: \"center\",\n                  //           justifyContent: \"space-between\",\n                  //           backgroundColor: \"#fff\",\n                  //           margin: 2,\n                  //         }}\n                  //       >\n                  //         <TouchableOpacity\n                  //           onPress={() => {\n                  //             setplacer(true),\n                  //               setblur(!blur),\n                  //               setterm(item.name);\n                  //           }}\n                  //         >\n                  //           <View\n                  //             style={{\n                  //               flexDirection: \"row\",\n                  //               alignItems: \"center\",\n                  //             }}\n                  //           >\n                  //             <Image\n                  //               source={{ uri: item.image }}\n                  //               style={{\n                  //                 height: 35,\n                  //                 width: 35,\n                  //                 borderColor: \"green\",\n                  //                 borderWidth: 1,\n                  //                 borderRadius: 35,\n                  //               }}\n                  //             />\n                  //             <Text style={{ fontSize: 20 }}> {item.name}</Text>\n                  //             <Text\n                  //               style={{\n                  //                 fontSize: 15,\n                  //                 alignSelf: \"center\",\n                  //                 color: \"#989898\",\n                  //               }}\n                  //             >\n                  //               {\" \"}\n                  //               in{\" \"}\n                  //             </Text>\n                  //             <Text style={{ fontSize: 15 }}>{item.type}</Text>\n                  //           </View>\n                  //         </TouchableOpacity>\n                  //         <TouchableOpacity\n                  //           style={{\n                  //             backgroundColor: \"#3ECF8E\",\n                  //             height: \"100%\",\n                  //             alignItems: \"center\",\n                  //             justifyContent: \"center\",\n                  //             padding: 5,\n                  //             borderRadius: 5,\n                  //             alignSelf: \"flex-end\",\n                  //           }}\n                  //           onPress={() => {\n                  //             setparent(!parent),\n                  //               setterm(item.type),\n                  //               setplacer(!placer),\n                  //               setblur(!blur);\n                  //           }} //true\n                  //         >\n                  //           <Text style={{ fontSize: 15, color: \"#fff\" }}>\n                  //             View {item.type}s\n                  //           </Text>\n                  //         </TouchableOpacity>\n                  //       </View>\n                  //     );\n                  //   })} */}\n                  // </View>\n                  <View\n                    style={{\n                      width: winWidth > 767 ? winWidth * 0.49 : winWidth * 0.95,\n                      marginTop: 5,\n                      backgroundColor: \"#fff\",\n                      borderRadius: 10,\n                      padding: 5,\n                    }}\n                  >\n                    <Text style={{ fontSize: 18, margin: 15 }}>Suggested </Text>\n                    <FlatList\n                      showsVerticalScrollIndicator={false}\n                      data={filteredBlur.sort().slice(1, 5)}\n                      renderItem={renderMatch}\n                      contentContainerStyle={{\n                        // flexDirection: \"row\",\n                        // width: \"100%\",\n                        // flexWrap: \"wrap\",\n                        // alignItems: \"center\",\n                        // justifyContent:\n                        //   winWidth > 767 ? \"center\" : \"center\",\n                        // padding: winWidth > 767 ? 10 : 2,\n                        width: \"100%\",\n                      }}\n                    />\n                  </View>\n                )}\n                <TouchableOpacity\n                  style={{\n                    width: \"100%\",\n                    flex: 1,\n                    backgroundColor: \"transparent\",\n                  }}\n                  onPress={() => setblur(false)}\n                ></TouchableOpacity>\n              </View>\n            </View>\n          </BlurView>\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default Home;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f2f7ff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: winHeight,\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginRight: 5,\n  },\n  buttonnewContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginRight: 5,\n    padding: 5,\n  },\n\n  circle: {\n    height: 25,\n    width: 25,\n    borderRadius: 25,\n    borderWidth: 1,\n    borderColor: \"#3A48ED\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  checkedCircle: {\n    width: 25,\n    height: 25,\n    borderRadius: 25,\n    backgroundColor: \"#3A48ED\",\n  },\n});\n","const getSmallString=(str : string)=>{\n    if(str.length>20){\n        str =str.substring(0,19)+\"...\";\n        return str;\n    }\n    else{\n        return str\n    }\n}\n\nexport default getSmallString","import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n  TextInput,\n  Platform,\n  ScrollView,\n  ActivityIndicator,\n  FlatList,\n  ImageBackground,\n} from \"react-native\";\nimport Header from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport Farmers from \"../data/farmers.json\";\nimport Data from \"../data/items.json\";\nimport { Modalize } from \"react-native-modalize\";\nimport hideNumber from \"../utils/hideNumber\";\nimport getSmallString from \"../utils/getSmallString\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport {\n  AntDesign,\n  Entypo,\n  Feather,\n  FontAwesome,\n  FontAwesome5,\n  SimpleLineIcons,\n  Ionicons,\n} from \"@expo/vector-icons\";\nimport { BlurView } from \"expo-blur\";\nimport States from \"../data/states.json\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Card from \"../components/Card\";\n\nconst Search = ({ navigation }) => {\n  const [blur, setblur] = useState(true);\n  const [term, setterm] = useState(\"\");\n  const [placer, setplacer] = useState(false);\n  const [farmer, setfarmer] = useState(0);\n  const [openFilter, setopenFilter] = useState(false);\n  const [toggleCheckBox, setToggleCheckBox] = useState(false);\n  const [val, setval] = useState(\"\");\n  const [addr, setaddr] = useState(\"\");\n  const [genFilterfinal, setgenFilterfinal] = useState([]);\n  const [hideFAB, sethideFAB] = useState(false);\n  const [parent, setparent] = useState(false);\n  const [genderSelected, setgenderSelected] = useState(false);\n  const [filteractive, setfilteractive] = useState(false);\n  const [addrToggle, setaddrToggle] = useState(false);\n  const [merge, setmerge] = useState(false);\n  const [dater, setdater] = useState(false);\n\n  const setSearch = (text: string) => {\n    let dynamic = text.toLowerCase();\n    console.log(\"dynamic: \" + dynamic);\n  };\n\n  const [crop, setcrop] = useState([]);\n  const [farmers, setfarmers] = useState([]);\n  const [modalName, setmodalName] = useState(\"\");\n  const [selectedState, setselectedState] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const cropper = \"\";\n\n  function makestate() {}\n  useEffect(() => {\n    fetch(\"https://maps.claroenergy.in/Ksearch/fetch/farmers\", {\n      method: \"post\",\n\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        gender: null,\n        harvestDate: null,\n        state: selectedState,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => setfarmers(data.data.list))\n      .catch((error) => console.error(error));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"https://maps.claroenergy.in/Ksearch/fetch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: cropper,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => setcrop(data.data.list))\n      .catch((error) => console.error(error));\n  }, []);\n\n  console.log(crop);\n  console.log(farmers);\n\n  const selectState = () => {\n    States.map((item) => {\n      console.log(item.name);\n      farmers.map((i) => {\n        console.log(i.state);\n        if (\n          item.name.toString().toLowerCase() ===\n          i.state.toString().toLowerCase()\n        ) {\n          setselectedState(item.name);\n        }\n      });\n    });\n  };\n\n  const renderFarmers = ({ item }) => (\n    <Card\n      key={item.id}\n      name={getSmallString(item.farmerName)}\n      avatar={item.farmerImage}\n      phone={item.phone}\n      address={item.state}\n      crop={item.crops.map((i) => i.cropName)}\n      onPress={() => {\n        console.log(item.farmerName),\n          setfarmer(item.id),\n          console.log(item.crops.map((i) => i.quantity));\n        onOpen(), setmodalName(item.farmerName);\n      }}\n    />\n  );\n\n  const filteredCrops = crop.filter((item) => {\n    return item.name.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredBlur = Data.filter((item) => {\n    return item.name.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredParents = crop.filter((item) => {\n    return item.type.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredFarmers = farmers.filter((item) => {\n    let a = item.crops.map((i) => i.cropName);\n    return a.toString().toLocaleLowerCase() === term.toLowerCase();\n  });\n\n  const genderFilter = filteredFarmers.filter((item) => {\n    if (val) {\n      return item.gender.toLocaleLowerCase() === val.toLowerCase();\n    }\n  });\n\n  const addrFilter = filteredFarmers.filter((item) => {\n    if (addr) {\n      return item.state.toLocaleLowerCase() === addr.toLowerCase();\n    }\n  });\n\n  // const harvestFilter = filteredFarmers.filter((item) => {\n  //   if (startDate && endDate) {\n  //     return (\n  //       new Date(item.crops.map((i) => i.harvestDate)) >= startDate &&\n  //       new Date(item.crops.map((i) => i.harvestDate)) <= endDate\n  //     );\n  //   }\n  // });\n\n  // const showHarvests = () => {\n  //   console.log(\"Starting:\" + startDate);\n  //   console.log(\"Ending\" + endDate);\n  //   filteredFarmers.map((item) => {\n  //     let dt = new Date(item.crops.map((i) => i.harvestDate));\n  //     console.log(dt);\n  //     if (dt >= startDate && dt <= endDate) {\n  //       console.log(\"In Range\" + dt);\n  //     }\n  //   });\n  // };\n\n  console.log(filteredFarmers);\n\n  const applyFilterFinal = [genderFilter, addrFilter].flat();\n\n  const modalizeRef = useRef<Modalize>(null);\n\n  const modalizeFilterRef = useRef<Modalize>(null);\n\n  console.log(genderFilter);\n\n  const harvestResult = filteredFarmers.filter((item) => {\n    let str = item.crops.map((i) => i.harvestDate).toString();\n    console.log(str);\n    var temp = new Array();\n    temp = str.split(\"/\");\n    console.log(temp);\n    let dt = new Date(temp[2], temp[1], temp[0]);\n    console.log(dt);\n    return dt >= startDate && dt <= endDate;\n  });\n\n  const mergeResult = filteredFarmers.filter((item) => {\n    // if (val && addr) {\n    // }\n    // if (addr && !val) {\n    //   return item.address.toLocaleLowerCase() === addr.toLowerCase();\n    // }\n    // if (val && !addr) {\n    //   return item.gender.toLocaleLowerCase() === val.toLowerCase();\n    // }\n\n    let str = item.crops.map((i) => i.harvestDate).toString();\n    console.log(str);\n    var temp = new Array();\n    temp = str.split(\"/\");\n    console.log(temp);\n    let dt = new Date(temp[2], temp[1], temp[0]);\n    console.log(dt);\n\n    return (\n      item.gender.toLowerCase() === val.toLowerCase() &&\n      item.state.toLowerCase() === addr.toLowerCase() &&\n      dt >= startDate &&\n      dt <= endDate\n    );\n  });\n\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onClose = () => {\n    modalizeRef.current?.close();\n  };\n\n  const onOpenfilter = () => {\n    modalizeFilterRef.current?.open();\n  };\n\n  const onCloseFilter = () => {\n    modalizeFilterRef.current?.close();\n  };\n\n  const genderData = [\n    {\n      key: \"m\",\n      text: \"Men\",\n    },\n    {\n      key: \"f\",\n      text: \"Women\",\n    },\n  ];\n\n  const renderItems = ({ item }) => (\n    <View\n      style={{\n        height: 55,\n        width: winWidth > 767 ? winWidth / 2.1 : winWidth * 0.95,\n        padding: 2,\n      }}\n    >\n      <TouchableOpacity\n        onPress={() => {\n          setplacer(true), setblur(!blur), setterm(item.name);\n        }}\n        style={{\n          marginBottom: 2,\n          width: \"100%\",\n          backgroundColor: \"#fff\",\n          height: \"100%\",\n          padding: 5,\n          borderRadius: 10,\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <Image\n            source={{ uri: item.image }}\n            style={{\n              height: 35,\n              width: 35,\n              borderColor: \"green\",\n              borderWidth: 1,\n              borderRadius: 35,\n            }}\n          />\n          <Text style={{ fontSize: 20 }}> {item.name}</Text>\n          <Text\n            style={{\n              fontSize: 15,\n              alignSelf: \"center\",\n              color: \"#989898\",\n              margin: 5,\n            }}\n          >\n            in\n          </Text>\n          <TouchableOpacity\n            onPress={() => {\n              setparent(true),\n                setterm(item.type),\n                setplacer(true),\n                setblur(!blur);\n            }}\n          >\n            <Text style={{ fontSize: 15, color: \"#346beb\", marginLeft: 0 }}>\n              {item.type}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </TouchableOpacity>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      {/* <View style={{ marginTop: 40, width: \"100%\", elevation: 1000 }}>\n        <Header onTap={() => navigation.navigate(\"Search\")} />\n      </View> */}\n      <View\n        style={{\n          flexDirection: winWidth > 767 ? \"row\" : \"column\",\n          width: \"100%\",\n\n          height: \"100%\",\n        }}\n      >\n        <View\n          style={{\n            backgroundColor: \"#deebff\",\n            width: \"100%\",\n            height: \"100%\",\n            alignItems: \"flex-start\",\n            justifyContent: \"center\",\n          }}\n        >\n          {/* <Button\n            title=\"Go to Home\"\n            onPress={() => navigation.navigate(\"Home\")}\n          />\n          <Button title=\"Set Blur\" onPress={() => setblur(!blur)} /> */}\n\n          <View\n            style={{\n              marginBottom: 10,\n              width: \"100%\",\n              alignItems: \"center\",\n              height: winHeight * 0.99,\n            }}\n          >\n            <Header\n              onTap={() => {\n                setblur(true);\n              }}\n              onLogoTap={() => navigation.navigate(\"Home\")}\n              onFilter={() => onOpenfilter()}\n            />\n\n            {/* <View\n              style={{\n                width: winWidth > 767 ? winWidth * 0.45 : winWidth * 0.9,\n                top: winWidth > 767 ? 25 : 0,\n                flexDirection: \"row\",\n              }}\n            >\n              {winWidth > 767 ? (\n                <TouchableOpacity\n                  style={{\n                    width: 120,\n                    height: 40,\n                    backgroundColor: \"#346beb\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flexDirection: \"row\",\n                    borderRadius: 10,\n                  }}\n                  onPress={() => navigation.navigate(\"Home\")}\n                >\n                  <FontAwesome5 name=\"home\" size={20} color=\"#fff\" />\n                  <Text\n                    style={{\n                      fontSize: 16,\n                      color: \"#fff\",\n                      marginLeft: 5,\n                    }}\n                  >\n                    Go home\n                  </Text>\n                </TouchableOpacity>\n              ) : null}\n              <ScrollHeader\n                headerTap={() => {\n                  setblur(!blur), setterm(\"\"), setparent(false);\n                }}\n                headHolder={\n                  placer && parent\n                    ? term\n                    : parent\n                    ? term\n                    : \"Search for crops...\"\n                }\n              />\n            </View> */}\n            {/* \n            {term ? (\n              <Text\n                style={{\n                  marginTop: 20,\n                  padding: 5,\n                  fontWeight: \"500\",\n                  color: \"#6F6F6F\",\n                  fontSize: 18,\n                  fontStyle: \"italic\",\n                }}\n              >\n                Showing results for {term}\n              </Text>\n            ) : (\n              <Text\n                style={{\n                  marginTop: 20,\n                  padding: 5,\n                  fontWeight: \"500\",\n                  color: \"#6F6F6F\",\n                  fontSize: 18,\n                }}\n              >\n                Showing all results\n              </Text>\n            )} */}\n\n            {/* <View style={{ width: \"100%\", flexDirection: \"row\" }}>\n              <TouchableOpacity\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  marginRight: 5,\n                  backgroundColor: \"blue\",\n                }}\n              >\n                <Text>{val ? val : \"\"}</Text>\n                <AntDesign\n                  name=\"close\"\n                  size={20}\n                  color=\"#fff\"\n                  onPress={() => setval(\"\")}\n                />\n              </TouchableOpacity>\n              <TouchableOpacity>\n                <Text>{addr ? addr : \"\"}</Text>\n              </TouchableOpacity>\n            </View> */}\n            {placer ? (\n              !parent ? (\n                <View\n                  style={{\n                    width: winWidth > 767 ? \"80%\" : \"90%\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    alignSelf: \"center\",\n                    borderBottomWidth: 1,\n                    borderBottomColor: \"#bfd8ff\",\n                  }}\n                >\n                  {/* <Text\n                    style={{\n                      marginTop: 60,\n                      padding: 5,\n                      fontWeight: \"500\",\n                      color: \"#6F6F6F\",\n                      fontSize: 20,\n                    }}\n                  >\n                    {term}\n                  </Text> */}\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      alignSelf: \"center\",\n                      marginTop: winWidth > 767 ? 15 : 10,\n                      alignItems: \"flex-start\",\n                      marginLeft: winWidth > 767 ? -52 : -10,\n                      justifyContent: \"flex-start\",\n\n                      padding: 5,\n                    }}\n                  >\n                    {/* <Button\n                      title=\"GO Home\"\n                      onPress={() => navigation.navigate(\"Home\")}\n                    /> */}\n                    {/* <TouchableOpacity\n                      style={{\n                        top: 10,\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-between\",\n                        backgroundColor: \"#949cff\",\n                        height: 30,\n                        padding: 3,\n                        borderRadius: 5,\n                        marginBottom: 20,\n                        marginRight: 20,\n                      }}\n                      onPress={() => {\n                        console.log(\"Biharma\"),\n                          sethideFAB(true),\n                          onOpenfilter();\n                      }}\n                    >\n                      <AntDesign name=\"filter\" size={15} color=\"#3A48ED\" />\n                      <Text\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"500\",\n                          marginLeft: 2,\n                          color: \"#fff\",\n                        }}\n                      >\n                        {\" \"}\n                        Filter Results\n                      </Text>\n                    </TouchableOpacity> */}\n                    <TouchableOpacity\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: term ? \"#3ECF8E\" : \"#deebff\",\n                        padding: 5,\n                        height: 30,\n                        width: 80,\n                        borderRadius: 20,\n                      }}\n                    >\n                      <Text style={{ color: \"#fff\", fontWeight: \"700\" }}>\n                        {term ? term : null}\n                      </Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: val ? \"#fff\" : \"#deebff\",\n                        padding: 5,\n                        height: 30,\n                        width: 80,\n                        borderRadius: 20,\n                      }}\n                    >\n                      <Text style={{ color: \"#000\" }}>\n                        {val\n                          ? val === \"m\"\n                            ? \"Men\"\n                            : val === \"f\"\n                            ? \"Women\"\n                            : \"Other\"\n                          : null}\n                      </Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: addr ? \"#fff\" : \"#deebff\",\n                        padding: 5,\n                        height: 30,\n                        width: 120,\n                        borderRadius: 20,\n                      }}\n                    >\n                      <Text style={{ color: \"#000\" }}>\n                        {addr ? addr : null}\n                      </Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: dater ? \"#fff\" : \"#deebff\",\n                        padding: 5,\n                        height: 30,\n\n                        borderRadius: 20,\n                      }}\n                    >\n                      <Text style={{ color: \"#000\" }}>\n                        {dater\n                          ? startDate.toDateString() +\n                            \" - \" +\n                            endDate.toDateString()\n                          : null}\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              ) : (\n                <View\n                  style={{\n                    flexDirection: \"column\",\n                    width: \"100%\",\n                    height: 40,\n                    marginTop: 10,\n                  }}\n                >\n                  <View\n                    style={{\n                      width: \"100%\",\n                      height: 30,\n                      backgroundColor: \"#deebff\",\n                      top: winWidth > 767 ? \"20%\" : \"10%\",\n                      borderTopLeftRadius: 10,\n                      borderTopRightRadius: 10,\n                    }}\n                  >\n                    <Text\n                      style={{\n                        padding: 5,\n                        fontWeight: \"500\",\n                        color: \"#000\",\n                        alignSelf: \"center\",\n                        fontSize: winWidth > 767 ? 20 : 15,\n                        marginBottom: 10,\n                      }}\n                    >\n                      Available {term}s\n                    </Text>\n                  </View>\n                </View>\n              )\n            ) : null}\n            {/* {placer ? (\n            <TouchableOpacity\n              style={{ alignSelf: \"flex-end\", top: -23, width: 50, height: 20 }}\n              onPress={() => {\n                onOpenfilter();\n              }}\n            >\n              Filter\n            </TouchableOpacity>\n          ) : null} */}\n\n            <ScrollView showsVerticalScrollIndicator={false} bounces={true}>\n              {parent ? (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n\n                    alignItems: \"flex-start\",\n                    justifyContent: \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                >\n                  {filteredParents.map((item, cIndex) => {\n                    return Data.map((i) =>\n                      i.name === item.name ? (\n                        <Card\n                          key={item.id}\n                          name={item.name}\n                          avatar={i.image}\n                          isCrop={true}\n                          onPress={() => {\n                            setparent(false), setterm(item.name);\n                          }}\n                        />\n                      ) : null\n                    );\n                  })}\n                </View>\n              ) : filteractive ? (\n                merge ? (\n                  // <View\n                  //   style={{\n                  //     flexDirection: \"row\",\n                  //     width: \"100%\",\n                  //     flexWrap: \"wrap\",\n                  //     alignItems: \"flex-start\",\n                  //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                  //     padding: winWidth > 767 ? 10 : 2,\n                  //   }}\n                  // >\n                  //   {mergeResult.map((item, cIndex) => {\n                  //     return (\n                  //       <Card\n                  //         key={item.id}\n                  //         name={item.farmerName}\n                  //         avatar={item.farmerImage}\n                  //         phone={item.phone}\n                  //         address={item.state}\n                  //         crop={item.crops.map((i) => i.cropName)}\n                  //         onPress={() => {\n                  //           setfarmer(item.id), onOpen(), sethideFAB(true);\n                  //         }}\n                  //         cropAvatar={item.image}\n                  //       />\n                  //     );\n                  //   })}\n                  // </View>\n                  <View\n                    style={{\n                      width: \"100%\",\n                      height: winHeight * 0.89,\n                    }}\n                  >\n                    <FlatList\n                      showsVerticalScrollIndicator={false}\n                      data={mergeResult}\n                      renderItem={renderFarmers}\n                      ListEmptyComponent={() => (\n                        <View style={styles.container}>\n                          <Text style={{ fontSize: 30 }}>\n                            {\" \"}\n                            Oops ! Didnt find that\n                          </Text>\n                        </View>\n                      )}\n                      contentContainerStyle={{\n                        flexDirection: \"row\",\n                        width: \"100%\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                        padding: winWidth > 767 ? 10 : 2,\n                      }}\n                    />\n                  </View>\n                ) : val && !addr && !dater ? (\n                  // <View\n                  //   style={{\n                  //     flexDirection: \"row\",\n                  //     width: \"100%\",\n                  //     flexWrap: \"wrap\",\n                  //     alignItems: \"flex-start\",\n                  //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                  //     padding: winWidth > 767 ? 10 : 2,\n                  //   }}\n                  // >\n                  //   {genderFilter.map((item, cIndex) => {\n                  //     return (\n                  //       <Card\n                  //         key={item.id}\n                  //         name={item.farmerName}\n                  //         avatar={item.farmerImage}\n                  //         phone={item.phone}\n                  //         address={item.state}\n                  //         crop={item.crops.map((i) => i.cropName)}\n                  //         onPress={() => {\n                  //           setfarmer(item.id), onOpen(), sethideFAB(true);\n                  //         }}\n                  //       />\n                  //     );\n                  //   })}\n                  // </View>\n                  <View\n                    style={{\n                      width: \"100%\",\n                      height: winHeight * 0.89,\n                    }}\n                  >\n                    <FlatList\n                      showsVerticalScrollIndicator={false}\n                      data={genderFilter}\n                      renderItem={renderFarmers}\n                      ListEmptyComponent={() => (\n                        <View style={styles.container}>\n                          <Text style={{ fontSize: 30 }}>\n                            {\" \"}\n                            Oops ! Didnt find that\n                          </Text>\n                        </View>\n                      )}\n                      contentContainerStyle={{\n                        flexDirection: \"row\",\n                        width: \"100%\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                        padding: winWidth > 767 ? 10 : 2,\n                      }}\n                    />\n                  </View>\n                ) : !val && addr && !dater ? (\n                  // <View\n                  //   style={{\n                  //     flexDirection: \"row\",\n                  //     width: \"100%\",\n                  //     flexWrap: \"wrap\",\n                  //     alignItems: \"flex-start\",\n                  //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                  //     padding: winWidth > 767 ? 10 : 2,\n                  //   }}\n                  // >\n                  //   {addrFilter.map((item, cIndex) => {\n                  //     return (\n                  //       <Card\n                  //         key={item.id}\n                  //         name={item.farmerName}\n                  //         avatar={item.farmerImage}\n                  //         phone={item.phone}\n                  //         address={item.state}\n                  //         crop={item.crops.map((i) => i.cropName)}\n                  //         onPress={() => {\n                  //           setfarmer(item.id), onOpen();\n                  //         }}\n                  //         cropAvatar={item.image}\n                  //       />\n                  //     );\n                  //   })}\n                  // </View>\n                  <View\n                    style={{\n                      width: \"100%\",\n                      height: winHeight * 0.89,\n                    }}\n                  >\n                    <FlatList\n                      showsVerticalScrollIndicator={false}\n                      data={addrFilter}\n                      renderItem={renderFarmers}\n                      ListEmptyComponent={() => (\n                        <View style={styles.container}>\n                          <Text style={{ fontSize: 30 }}>\n                            {\" \"}\n                            Oops ! Didnt find that\n                          </Text>\n                        </View>\n                      )}\n                      contentContainerStyle={{\n                        flexDirection: \"row\",\n                        width: \"100%\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                        padding: winWidth > 767 ? 10 : 2,\n                      }}\n                    />\n                  </View>\n                ) : !val && !addr && dater ? (\n                  <View\n                    style={{\n                      width: \"100%\",\n                      height: winHeight * 0.89,\n                    }}\n                  >\n                    {\" \"}\n                    <FlatList\n                      showsVerticalScrollIndicator={false}\n                      data={harvestResult}\n                      renderItem={renderFarmers}\n                      ListEmptyComponent={() => (\n                        <View style={styles.container}>\n                          <Text style={{ fontSize: 30 }}>\n                            {\" \"}\n                            Oops ! Didnt find that\n                          </Text>\n                        </View>\n                      )}\n                      contentContainerStyle={{\n                        flexDirection: \"row\",\n                        width: \"100%\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                        padding: winWidth > 767 ? 10 : 2,\n                      }}\n                    />\n                  </View>\n                ) : (\n                  <Text>No result found</Text>\n                )\n              ) : (\n                // <View\n                //   style={{\n                //     flexDirection: \"row\",\n                //     width: \"100%\",\n                //     flexWrap: \"wrap\",\n                //     alignItems: \"flex-start\",\n                //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                //     padding: winWidth > 767 ? 10 : 2,\n                //   }}\n                // >\n                //   {filteredFarmers.map((item, cIndex) => {\n                //     return (\n                //       <Card\n                //         key={item.id}\n                //         name={item.name}\n                //         avatar={item.avatar}\n                //         phone={item.phone}\n                //         address={item.address}\n                //         crop={item.crop}\n                //         onPress={() => {\n                //           setfarmer(item.id), onOpen(), sethideFAB(true);\n                //         }}\n                //         cropAvatar={item.image}\n                //       />\n                //     );\n                //   })}\n                // </View>\n                <View\n                  style={{\n                    width: \"100%\",\n                    height: winHeight * 0.89,\n                  }}\n                >\n                  <FlatList\n                    showsVerticalScrollIndicator={false}\n                    data={filteredFarmers}\n                    renderItem={renderFarmers}\n                    ListEmptyComponent={() => (\n                      <View style={styles.container}>\n                        <Text style={{ fontSize: 30 }}>\n                          {\" \"}\n                          Oops ! Didnt find that\n                        </Text>\n                      </View>\n                    )}\n                    contentContainerStyle={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"center\",\n                      justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                      padding: winWidth > 767 ? 10 : 2,\n                    }}\n                  />\n                </View>\n              )}\n            </ScrollView>\n            <Modalize\n              ref={modalizeRef}\n              modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.88}\n              modalStyle={\n                winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n              }\n              threshold={100}\n              closeOnOverlayTap={true}\n              mod\n            >\n              {farmers.map((item, cIndex) => {\n                if (farmer == item.id) {\n                  return (\n                    <View>\n                      <View\n                        style={{\n                          backgroundColor: \"#3A48ED\",\n                          width: \"100%\",\n                          height: 170,\n                          borderWidth: 1,\n                          top: -2,\n                          borderRadius: 15,\n                          borderColor: \"#3A48ED\",\n                          shadowColor: \"#000\",\n                          shadowOffset: {\n                            width: 0,\n                            height: 4,\n                          },\n                          shadowOpacity: 0.32,\n                          shadowRadius: 5.46,\n\n                          elevation: 11,\n                        }}\n                      >\n                        {/* <Text>{item.name}</Text>\n                        <Text>{item.address}</Text>\n                        <Image source={item.avatar} style={{height:50, width:50}}/>\n                   <Text>{farmer}</Text> */}\n                        <TouchableOpacity\n                          onPress={() => {\n                            onClose(), sethideFAB(false);\n                          }}\n                          style={{\n                            alignItems: \"center\",\n                            marginTop: 5,\n                            marginRight: 2,\n                            padding: 5,\n                            justifyContent: \"center\",\n                            alignSelf: \"flex-end\",\n                            backgroundColor: \"rgba(0,0,0,0.2)\",\n                            borderRadius: 10,\n                            height: 35,\n                            width: 70,\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              justifyContent: \"space-between\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <Text\n                              style={{\n                                fontSize: 15,\n                                fontWeight: 500,\n                                color: \"#fff\",\n                                marginRight: 5,\n                              }}\n                            >\n                              Close\n                            </Text>\n                            <SimpleLineIcons\n                              name=\"close\"\n                              size={15}\n                              color=\"#fff\"\n                              onPress={() => {\n                                onClose(), sethideFAB(false);\n                              }}\n                            />\n                          </View>\n                        </TouchableOpacity>\n                        <View\n                          style={{\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                            padding: 2,\n                            top: -10,\n                          }}\n                        >\n                          <View\n                            style={{\n                              width: \"40%\",\n                              height: \"100%\",\n                              padding: 5,\n                            }}\n                          >\n                            <Image\n                              source={{ uri: item.farmerImage }}\n                              style={{\n                                height: 120,\n                                width: 120,\n                                borderRadius: 120,\n                                borderColor: \"#fff\",\n                                borderWidth: 2,\n                              }}\n                            />\n                          </View>\n                          <View\n                            style={{\n                              flexDirection: \"column\",\n                              alignItems: \"center\",\n                              justifyContent: \"space-evenly\",\n                              width: \"60%\",\n                              height: \"100%\",\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"column\",\n                                alignItems: \"flex-start\",\n                                width: \"100%\",\n                                height: \"100%\",\n                                justifyContent: \"space-evenly\",\n                              }}\n                            >\n                              <View style={{ flexDirection: \"row\" }}>\n                                <Feather name=\"user\" size={20} color=\"#fff\" />\n                                <Text\n                                  style={{\n                                    fontSize: 20,\n                                    color: \"#fff\",\n                                    fontWeight: \"700\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  {getSmallString(item.farmerName)}\n                                </Text>\n                              </View>\n                              <View style={{ flexDirection: \"row\" }}>\n                                <Feather\n                                  name=\"map-pin\"\n                                  size={20}\n                                  color=\"#fff\"\n                                />\n                                <Text\n                                  style={{\n                                    fontSize: 20,\n                                    color: \"#fff\",\n                                    fontWeight: \"700\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  {item.state}\n                                </Text>\n                              </View>\n                              <View style={{ flexDirection: \"row\" }}>\n                                <Feather name=\"user\" size={20} color=\"#fff\" />\n                                <Text\n                                  style={{\n                                    fontSize: 20,\n                                    color: \"#fff\",\n                                    fontWeight: \"700\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  {hideNumber(item.phone)}\n                                </Text>\n                              </View>\n                            </View>\n                          </View>\n                        </View>\n                        <View style={{ top: -40 }}>\n                          <Text\n                            style={{\n                              marginTop: winWidth < 400 ? 40 : 60,\n                              padding: 5,\n                              fontWeight: \"500\",\n                              color: \"#6F6F6F\",\n                              fontSize: 20,\n                              marginLeft: 5,\n                            }}\n                          >\n                            Farming Details\n                          </Text>\n                          <View\n                            style={{\n                              width: \"95%\",\n                              alignSelf: \"center\",\n                              height: 1,\n                              backgroundColor: \"#C0C0C0\",\n                            }}\n                          ></View>\n                          <View\n                            style={{\n                              flexDirection: \"column\",\n                              marginTop: 10,\n                              padding: 10,\n                              height: winWidth < 400 ? 100 : 180,\n                              justifyContent: \"space-between\",\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                                width: \"100%\",\n                                justifyContent: \"space-between\",\n                                marginBottom: 10,\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <Entypo\n                                    name=\"leaf\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      fontWeight: \"600\",\n                                    }}\n                                  >\n                                    Crop\n                                  </Text>\n                                </View>\n                                <View>\n                                  <View>\n                                    <Text style={{ fontSize: 20 }}>\n                                      {item.crops.map((i) => i.cropName)}\n                                    </Text>\n                                  </View>\n\n                                  {/* {Data.map((cropName, cIndex) => {\n                                    let a = cropName.name.toLowerCase();\n                                    let b = item.crop?.toLowerCase();\n                                    let result = a.localeCompare(b);\n\n                                    if (a == b) {\n                                      return (\n                                        <View\n                                          style={{\n                                            flexDirection: \"row\",\n                                            alignItems: \"center\",\n                                          }}\n                                        >\n                                          <Image\n                                            source={{ uri: cropName.image }}\n                                            style={{\n                                              height: 30,\n                                              width: 30,\n                                              borderWidth: 1,\n                                              borderRadius: 30,\n                                              borderColor: \"#3ECF8E\",\n                                            }}\n                                          />\n                                          <Text\n                                            style={{\n                                              fontSize: 20,\n                                              marginLeft: 5,\n                                            }}\n                                          >\n                                            {cropName.name}\n                                          </Text>\n                                        </View>\n                                      );\n                                    } else {\n                                      null;\n                                    }\n                                  })} */}\n                                </View>\n                              </View>\n\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                  alignItems: \"flex-end\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <SimpleLineIcons\n                                    name=\"calendar\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      marginLeft: 5,\n                                      fontWeight: \"600\",\n                                    }}\n                                  >\n                                    Harvest Date\n                                  </Text>\n                                </View>\n                                <View>\n                                  <Text style={{ fontSize: 20 }}>\n                                    {item.crops.map((i) => i.harvestDate)}\n                                  </Text>\n                                </View>\n                              </View>\n                            </View>\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                                width: \"100%\",\n                                justifyContent: \"space-between\",\n                                marginTop: 5,\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <SimpleLineIcons\n                                    name=\"size-fullscreen\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      fontWeight: \"600\",\n                                      marginLeft: 5,\n                                    }}\n                                  >\n                                    Farming Area\n                                  </Text>\n                                </View>\n                                <View>\n                                  <Text style={{ fontSize: 20 }}>\n                                    {item.land} Kattha\n                                  </Text>\n                                </View>\n                              </View>\n\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                  alignItems: \"flex-end\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <SimpleLineIcons\n                                    name=\"speedometer\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      marginLeft: 5,\n                                      fontWeight: \"600\",\n                                    }}\n                                  >\n                                    Quantity\n                                  </Text>\n                                </View>\n                                <View>\n                                  <Text style={{ fontSize: 20, marginLeft: 5 }}>\n                                    {item.crops.map((i) => i.quantity) / 100} q\n                                  </Text>\n                                </View>\n                              </View>\n                            </View>\n                            <View></View>\n                          </View>\n                          <View\n                            style={{\n                              width: \"95%\",\n                              alignSelf: \"center\",\n                              height: 1,\n                              backgroundColor: \"#C0C0C0\",\n                              marginTop: winWidth < 400 ? 30 : 10,\n                            }}\n                          />\n                        </View>\n                        <View\n                          style={{\n                            width: \"100%\",\n                            flexDirection: \"column\",\n                            top: -29,\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <Text\n                            style={{\n                              fontSize: 15,\n                              color: \"#808080\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            Coming soon\n                          </Text>\n                          <View\n                            style={{\n                              width: \"100%\",\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                              justifyContent: \"space-evenly\",\n                              top: 5,\n                            }}\n                          >\n                            <TouchableOpacity\n                              style={{\n                                width: winWidth < 400 ? 90 : 120,\n                                height: winWidth < 400 ? 30 : 50,\n                                backgroundColor: \"#A9A9A9\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                flexDirection: \"row\",\n                                borderRadius: 10,\n                              }}\n                              onPress={() =>\n                                alert(\n                                  \"Click to chat feature helps you connect directly to this farmer in one click. Feature Coming soon !\"\n                                )\n                              }\n                            >\n                              <FontAwesome5\n                                name=\"whatsapp\"\n                                size={25}\n                                color=\"#fff\"\n                              />\n                              <Text\n                                style={{\n                                  fontSize: winWidth < 400 ? 16 : 20,\n                                  color: \"#fff\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                Chat\n                              </Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity\n                              style={{\n                                width: winWidth < 400 ? 90 : 120,\n                                height: winWidth < 400 ? 30 : 50,\n                                backgroundColor: \"#A9A9A9\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                flexDirection: \"row\",\n                                borderRadius: 10,\n                              }}\n                              onPress={() => alert(\"Feature Coming soon !\")}\n                            >\n                              <Text\n                                style={{\n                                  fontSize: winWidth < 400 ? 16 : 20,\n                                  color: \"#fff\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                Buy\n                              </Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity\n                              style={{\n                                width: winWidth < 400 ? 90 : 120,\n                                height: winWidth < 400 ? 30 : 50,\n                                backgroundColor: \"#fff\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                flexDirection: \"row\",\n                                borderRadius: 10,\n                                borderColor: \"#A9A9A9\",\n                                borderWidth: 2,\n                              }}\n                              onPress={() =>\n                                alert(\n                                  \"Support the farmer by any kind. Feature Coming Soon !\"\n                                )\n                              }\n                            >\n                              <FontAwesome\n                                name=\"handshake-o\"\n                                size={25}\n                                color=\"#A9A9A9\"\n                              />\n                              <Text\n                                style={{\n                                  fontSize: winWidth < 400 ? 16 : 20,\n                                  color: \"#A9A9A9\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                Support\n                              </Text>\n                            </TouchableOpacity>\n                          </View>\n                        </View>\n                      </View>\n                    </View>\n                  );\n                } else {\n                  null;\n                }\n              })}\n            </Modalize>\n\n            <Modalize\n              ref={modalizeFilterRef}\n              modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.88}\n              modalStyle={\n                winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n              }\n              threshold={100}\n              closeOnOverlayTap={true}\n              mod\n            >\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"row\",\n                  alignItems: \"flex-start\",\n                  justifyContent: \"space-between\",\n                  padding: 5,\n                  top: 5,\n                }}\n              >\n                {/* <TouchableOpacity onPress={() => onCloseFilter()}>\n                Close Filter\n              </TouchableOpacity> */}\n                <Text\n                  style={{ fontSize: 16, marginLeft: 7, fontWeight: \"600\" }}\n                >\n                  Filter Results\n                </Text>\n\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n\n                    width: \"40%\",\n                    justifyContent:\n                      (val && addr && !dater && !merge) ||\n                      (!val && addr && dater && !merge) ||\n                      (val && !addr && dater && !merge) ||\n                      (!val && addr && !dater && !merge) ||\n                      (!val && !addr && dater && !merge) ||\n                      (val && !addr && !dater && !merge) ||\n                      (!val && !addr && !dater && !merge)\n                        ? \"flex-end\"\n                        : \"space-between\",\n                  }}\n                >\n                  <TouchableOpacity\n                    style={{\n                      width: 60,\n                      height: 30,\n                      backgroundColor: \"#fff\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n\n                      borderRadius: 10,\n                      borderColor: \"#3A48ED\",\n                      borderWidth: 2,\n                    }}\n                    onPress={() => {\n                      setmerge(false),\n                        setfilteractive(false),\n                        onCloseFilter(),\n                        setval(\"\"),\n                        setaddr(\"\");\n                      setdater(false);\n                      setStartDate(new Date());\n                      setEndDate(new Date());\n                      sethideFAB(!hideFAB);\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 16,\n                        color: \"#3A48ED\",\n                      }}\n                    >\n                      Reset\n                    </Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    style={{\n                      width: 60,\n                      height: 30,\n                      backgroundColor: \"#3ECF8E\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n\n                      borderRadius: 10,\n                      borderColor: \"#3ECF8E\",\n                      borderWidth: 2,\n                    }}\n                    onPress={() => {\n                      // !merge && filteractive ? setmerge(false) : setmerge(true);\n                      (!val && addr && !dater && !merge) ||\n                      (val && !addr && !dater && !merge) ||\n                      (!val && !addr && dater && !merge)\n                        ? (setfilteractive(true), setmerge(false))\n                        : !val && !addr && !dater && merge\n                        ? (setfilteractive(false), setmerge(true))\n                        : setmerge(true);\n                      onCloseFilter();\n                      sethideFAB(false);\n                      setdater(true);\n                      // (!val && addr && !dater && !merge) ||\n                      // (val && !addr && !dater && !merge) ||\n                      // (!val && !addr && dater && !merge)\n                      //   ? (setfilteractive(true), setmerge(false))\n                      //   : (setfilteractive(false), setmerge(true));\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 16,\n                        color: \"#fff\",\n                      }}\n                    >\n                      Apply\n                    </Text>\n                  </TouchableOpacity>\n\n                  <TouchableOpacity\n                    onPress={() => {\n                      onCloseFilter(), sethideFAB(false);\n                    }}\n                  >\n                    <View\n                      style={{\n                        width: 25,\n                        height: 25,\n                        borderWidth: 2,\n                        borderColor: \"#A1C7FF\",\n                        alignItems: \"center\",\n                        alignSelf: \"flex-end\",\n                        justifyContent: \"center\",\n                        flexDirection: \"row\",\n                        backgroundColor: \"#A1C7FF\",\n                        borderRadius: 25,\n                        marginLeft: 10,\n                      }}\n                    >\n                      <AntDesign name=\"close\" size={20} color=\"#3A48ED\" />\n                    </View>\n                  </TouchableOpacity>\n                </View>\n              </View>\n\n              <Text\n                style={{\n                  color: \"#6F6F6F\",\n                  fontSize: 15,\n                  marginTop: 3,\n                  marginLeft: 7,\n                  padding: 5,\n                }}\n              >\n                By Gender\n              </Text>\n              <View\n                style={{\n                  width: \"32%\",\n                  marginTop: 10,\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  padding: 5,\n                  marginLeft: 7,\n                  alignSelf: \"flex-start\",\n                }}\n              >\n                {genderData.map((item) => {\n                  return (\n                    <View key={item.key} style={styles.buttonContainer}>\n                      <TouchableOpacity\n                        style={styles.circle}\n                        onPress={() => {\n                          setfilteractive(true);\n                          setval(item.key);\n                          // toggler(item.key);\n                          // let a = item.text;\n                          // let b = filteredFarmers.filter((i) => {\n                          //   return i.gender.toLowerCase() === a.toLowerCase();\n                          // });\n                          // console.log(item.text);\n                          // console.log(a);\n                          // console.log(b);\n                        }}\n                      >\n                        {val === item.key && (\n                          <View style={styles.checkedCircle} />\n                        )}\n                      </TouchableOpacity>\n                      <Text style={{ fontSize: 16, marginLeft: 5 }}>\n                        {item.text}\n                      </Text>\n                    </View>\n                  );\n                })}\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  marginTop: 10,\n                  flexDirection: \"column\",\n                  alignItems: \"flex-start\",\n                  justifyContent: \"space-evenly\",\n                  padding: 5,\n                  alignSelf: \"flex-start\",\n                }}\n              >\n                <View\n                  style={{\n                    width: \"95%\",\n                    alignSelf: \"center\",\n                    height: 1,\n                    backgroundColor: \"#C0C0C0\",\n                    marginTop: 10,\n                    alignItems: \"center\",\n                  }}\n                ></View>\n                <Text\n                  style={{\n                    color: \"#6F6F6F\",\n                    fontSize: 15,\n                    marginTop: 10,\n                    marginLeft: 0,\n                    marginBottom: 5,\n                    padding: 5,\n                  }}\n                >\n                  By States\n                </Text>\n\n                <TouchableOpacity\n                  onPress={() => setaddrToggle(!addrToggle)}\n                  style={{\n                    flexDirection: \"row\",\n                    backgroundColor: \"#d6d9ff\",\n                    borderWidth: 2,\n                    borderColor: \"#7b42ff\",\n                    borderRadius: 5,\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    padding: 5,\n                    minWidth: \"30%\",\n\n                    marginLeft: 7,\n                  }}\n                >\n                  <Text style={{ fontSize: 15 }}>\n                    {addr ? addr : \"All States\"}\n                  </Text>\n                  <AntDesign name=\"down\" size={12} />\n                </TouchableOpacity>\n                {addrToggle ? (\n                  <View style={{ marginTop: 10 }}>\n                    {States.map((item) => {\n                      return (\n                        <View key={item.code} style={styles.buttonnewContainer}>\n                          <TouchableOpacity\n                            style={styles.circle}\n                            onPress={() => {\n                              setfilteractive(true);\n                              setaddr(item.name);\n                              setaddrToggle(false);\n                              // toggler(item.key);\n                              // let a = item.text;\n                              // let b = filteredFarmers.filter((i) => {\n                              //   return i.gender.toLowerCase() === a.toLowerCase();\n                              // });\n                              // console.log(item.text);\n                              // console.log(a);\n                              // console.log(b);\n                            }}\n                          >\n                            {addr === item.name && (\n                              <View style={styles.checkedCircle} />\n                            )}\n                          </TouchableOpacity>\n                          <Text style={{ fontSize: 16, marginLeft: 5 }}>\n                            {item.name}\n                          </Text>\n                        </View>\n                      );\n                    })}\n                  </View>\n                ) : null}\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  marginTop: 10,\n                  flexDirection: \"column\",\n                  alignItems: \"flex-start\",\n                  justifyContent: \"space-evenly\",\n                  padding: 5,\n                  alignSelf: \"flex-start\",\n                }}\n              >\n                <View\n                  style={{\n                    width: \"95%\",\n                    alignSelf: \"center\",\n                    height: 1,\n                    backgroundColor: \"#C0C0C0\",\n                    marginTop: 10,\n                    alignItems: \"center\",\n                  }}\n                ></View>\n                <View>\n                  <Text\n                    style={{\n                      color: \"#6F6F6F\",\n                      fontSize: 15,\n                      marginTop: 10,\n                      marginLeft: 0,\n                      marginBottom: 5,\n                      zIndex: 1000,\n                      padding: 5,\n                    }}\n                  >\n                    By Harvest Date\n                  </Text>\n                  <View\n                    style={{\n                      flex: 1,\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      justifyContent: \"space-between\",\n                      width: \"100%\",\n                      height: 150,\n                      padding: 5,\n                    }}\n                  >\n                    <View>\n                      <Text style={{ marginBottom: 10 }}>From</Text>\n                      <DatePicker\n                        dateFormat=\"dd/MM/yyyy\"\n                        selected={startDate}\n                        onChange={(date) => setStartDate(date)}\n                        customInput={\n                          <TextInput\n                            style={{\n                              backgroundColor: \"#d6d9ff\",\n                              borderRadius: 5,\n                              borderColor: \"#7b42ff\",\n                              height: 35,\n                              borderWidth: 2,\n                              padding: 5,\n                              fontSize: 15,\n                              width: 100,\n                            }}\n                          />\n                        }\n                      />\n                    </View>\n                    <View style={{ marginLeft: 20 }}>\n                      <Text style={{ marginBottom: 10 }}>To</Text>\n                      <DatePicker\n                        dateFormat=\"dd/MM/yyyy\"\n                        selected={endDate}\n                        onChange={(date) => {\n                          setEndDate(date),\n                            setdater(true),\n                            setfilteractive(true);\n                        }}\n                        customInput={\n                          <TextInput\n                            style={{\n                              height: 35,\n                              borderWidth: 2,\n                              backgroundColor: \"#d6d9ff\",\n                              borderRadius: 5,\n                              borderColor: \"#7b42ff\",\n                              padding: 5,\n                              fontSize: 15,\n                              width: 100,\n                            }}\n                          />\n                        }\n                      />\n                    </View>\n                  </View>\n\n                  {/* <TouchableOpacity onPress={() => showHarvests()}>\n                    This week\n                  </TouchableOpacity>\n                  <TouchableOpacity>This month</TouchableOpacity>\n                  <TouchableOpacity>3 months from now</TouchableOpacity>\n                  <TouchableOpacity>6 months from now</TouchableOpacity>\n                  <TouchableOpacity>1 year from now</TouchableOpacity> */}\n                </View>\n                <View\n                  style={{\n                    width: \"95%\",\n                    alignSelf: \"center\",\n                    height: 1,\n\n                    marginTop: 100,\n                    alignItems: \"center\",\n                  }}\n                ></View>\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-evenly\",\n                  alignSelf: \"flex-end\",\n\n                  marginTop: \"30%\",\n                }}\n              >\n                {/* <TouchableOpacity\n                  style={{\n                    width: 80,\n                    height: 40,\n                    backgroundColor: \"#fff\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n\n                    borderRadius: 10,\n                    borderColor: \"#3A48ED\",\n                    borderWidth: 2,\n                  }}\n                  onPress={() => {\n                    setmerge(false),\n                      setfilteractive(false),\n                      onCloseFilter(),\n                      setval(\"\"),\n                      setaddr(\"\");\n                    setdater(!dater);\n                    sethideFAB(!hideFAB);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 16,\n                      color: \"#3A48ED\",\n                    }}\n                  >\n                    Reset\n                  </Text>\n                </TouchableOpacity> */}\n                {/* <TouchableOpacity\n                  style={{\n                    width: 80,\n                    height: 40,\n                    backgroundColor: \"#3ECF8E\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n\n                    borderRadius: 10,\n                    borderColor: \"#3ECF8E\",\n                    borderWidth: 2,\n                  }}\n                  onPress={() => {\n                    // !merge && filteractive ? setmerge(false) : setmerge(true);\n                    (!val && addr && !merge) || (val && !addr && !merge)\n                      ? setfilteractive(true)\n                      : !val && !addr && merge\n                      ? (setmerge(true), setfilteractive(false))\n                      : setmerge(true);\n                    onCloseFilter();\n                    sethideFAB(false);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 16,\n                      color: \"#fff\",\n                    }}\n                  >\n                    Apply\n                  </Text>\n                </TouchableOpacity> */}\n              </View>\n              {/* <View\n                style={{\n                  height: 60,\n                  width: \"100%\",\n                  backgroundColor: \"#fff\",\n                  marginTop: 10,\n                }}\n              ></View> */}\n            </Modalize>\n          </View>\n        </View>\n      </View>\n      {blur ? (\n        <View\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n            position: \"absolute\",\n          }}\n        >\n          <BlurView\n            tint=\"dark\"\n            intensity={40}\n            style={[StyleSheet.absoluteFill, styles.nonBlurredContent]}\n          >\n            <View\n              style={{\n                marginTop: 20,\n                padding: 5,\n                height: \"100%\",\n              }}\n            >\n              <View\n                style={{\n                  backgroundColor: \"#fff\",\n                  height: 55,\n                  width: winWidth > 767 ? \"50%\" : \"97%\",\n                  alignSelf: \"center\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  borderRadius: 8,\n                  padding: 20,\n                  shadowColor: \"#98A0FF\",\n                  shadowOffset: {\n                    width: 0,\n                    height: 4,\n                  },\n                  shadowOpacity: 0.32,\n                  shadowRadius: 5.46,\n\n                  elevation: 9,\n                }}\n              >\n                {/* <TextInput style={{height:40, backgroundColor:\"white\", width:\"75%\", padding:5, outline}} placeholder=\"Search for crops...\" autoFocus={true}/> */}\n                <TextInput\n                  style={\n                    Platform.OS === \"web\" && {\n                      outlineColor: \"#fff\",\n                      height: 40,\n                      backgroundColor: \"white\",\n                      width: \"95%\",\n                      padding: 5,\n                      fontSize: 20,\n                    }\n                  }\n                  placeholder=\"Search for Crops\"\n                  onFocus={() => setplacer(false)}\n                  autoFocus={true}\n                  editable={blur}\n                  onChangeText={(text) => {\n                    console.log(text), setterm(text), setSearch(text);\n                  }}\n                />\n\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  {/* {term ? (\n                    <TouchableOpacity\n                      onPress={() => {\n                        setterm(\"\");\n                      }}\n                    >\n                      <View\n                        style={{\n                          width: 50,\n                          height: 35,\n                          borderWidth: 2,\n                          borderColor: \"#3d3f40\",\n                          alignItems: \"center\",\n                          alignSelf: \"flex-end\",\n                          justifyContent: \"center\",\n                          marginRight: 5,\n                          backgroundColor: \"#3d3f40\",\n                          borderRadius: 5,\n                        }}\n                      >\n                        <Text style={{ fontSize: 15, color: \"#fff\" }}>\n                          Clear\n                        </Text>\n                      </View>\n                    </TouchableOpacity>\n                  ) : null} */}\n                </View>\n                <TouchableOpacity\n                  onPress={() => {\n                    filteredFarmers.length > 0\n                      ? setblur(false)\n                      : navigation.navigate(\"Home\");\n                  }}\n                >\n                  <View\n                    style={{\n                      width: 25,\n                      height: 25,\n                      borderWidth: 2,\n                      borderColor: \"#A1C7FF\",\n                      alignItems: \"center\",\n                      alignSelf: \"flex-end\",\n                      justifyContent: \"center\",\n                      right: -10,\n                      backgroundColor: \"#A1C7FF\",\n                      borderRadius: 25,\n                    }}\n                  >\n                    <AntDesign name=\"close\" size={20} color=\"#3A48ED\" />\n                  </View>\n                </TouchableOpacity>\n              </View>\n              <View style={{ flex: 1, alignItems: \"center\", width: \"100%\" }}>\n                {/* <TouchableOpacity style={{width:\"100%\", height:30, alignItems:\"center\", justifyContent:\"center\", backgroundColor:\"transparent\"}} onPress={()=>{setplacer(true),setblur(!blur)}}>\n<Text>{term}</Text>\n</TouchableOpacity> */}\n                {term !== \"\" ? (\n                  <FlatList\n                    showsVerticalScrollIndicator={false}\n                    data={filteredBlur}\n                    renderItem={renderItems}\n                    ListEmptyComponent={() => (\n                      <View style={styles.container}>\n                        <Text style={{ fontSize: 30 }}>\n                          {\" \"}\n                          Oops ! Didnt find that\n                        </Text>\n                      </View>\n                    )}\n                    contentContainerStyle={{\n                      // flexDirection: \"row\",\n                      // width: \"100%\",\n                      // flexWrap: \"wrap\",\n                      // alignItems: \"center\",\n                      // justifyContent:\n                      //   winWidth > 767 ? \"center\" : \"center\",\n                      // padding: winWidth > 767 ? 10 : 2,\n                      width: \"100%\",\n                    }}\n                  />\n                ) : // <View\n                //   style={{\n                //     width: winWidth > 767 ? \"50%\" : \"97%\",\n                //     alignItems: \"center\",\n                //     backgroundColor: \"#fff\",\n                //     borderRadius: 10,\n                //     margin: 5,\n                //   }}\n                // >\n                //   <View\n                //     style={{\n                //       width: \"100%\",\n                //       alignItems: \"flex-start\",\n                //       padding: 10,\n                //       marginBottom: 10,\n                //       marginTop: 5,\n                //     }}\n                //   >\n                //     {filteredCrops.length > 0 ? (\n                //       <Text\n                //         style={{\n                //           marginLeft: 20,\n                //           fontSize: 15,\n                //           fontWeight: \"600\",\n                //         }}\n                //       >\n                //         Available Crops\n                //       </Text>\n                //     ) : (\n                //       <Text\n                //         style={{\n                //           marginLeft: 20,\n                //           fontSize: 15,\n                //           fontWeight: \"600\",\n                //           alignSelf: \"center\",\n                //         }}\n                //       >\n                //         🤔 ....That seems to be missing...\n                //       </Text>\n                //     )}\n                //   </View>\n\n                //   <View\n                //     style={{\n                //       width: \"100%\",\n                //       height: winHeight * 0.5,\n                //     }}\n                //   >\n                //     <FlatList\n                //       showsVerticalScrollIndicator={false}\n                //       data={filteredCrops}\n                //       renderItem={renderItems}\n                //       ListEmptyComponent={() => (\n                //         <View style={styles.container}>\n                //           <Text style={{ fontSize: 30 }}>\n                //             {\" \"}\n                //             Oops ! Didnt find that\n                //           </Text>\n                //         </View>\n                //       )}\n                //       contentContainerStyle={{\n                //         // flexDirection: \"row\",\n                //         // width: \"100%\",\n                //         // flexWrap: \"wrap\",\n                //         // alignItems: \"center\",\n                //         // justifyContent:\n                //         //   winWidth > 767 ? \"center\" : \"center\",\n                //         // padding: winWidth > 767 ? 10 : 2,\n                //         width: \"100%\",\n                //       }}\n                //     />\n                //   </View>\n\n                //   {/*\n                //   {filteredCrops.map((item, cIndex) => {\n                //     return (\n                //       <View\n                //         style={{\n                //           width:\n                //             winWidth > 768 ? winWidth - 80 : winWidth - 50,\n                //           height: 45,\n                //           padding: 5,\n                //           borderRadius: 8,\n                //           flexDirection: \"row\",\n                //           alignItems: \"center\",\n                //           justifyContent: \"space-between\",\n                //           backgroundColor: \"#fff\",\n                //           margin: 2,\n                //         }}\n                //       >\n                //         <TouchableOpacity\n                //           onPress={() => {\n                //             setplacer(true),\n                //               setblur(!blur),\n                //               setterm(item.name);\n                //           }}\n                //         >\n                //           <View\n                //             style={{\n                //               flexDirection: \"row\",\n                //               alignItems: \"center\",\n                //             }}\n                //           >\n                //             <Image\n                //               source={{ uri: item.image }}\n                //               style={{\n                //                 height: 35,\n                //                 width: 35,\n                //                 borderColor: \"green\",\n                //                 borderWidth: 1,\n                //                 borderRadius: 35,\n                //               }}\n                //             />\n                //             <Text style={{ fontSize: 20 }}> {item.name}</Text>\n                //             <Text\n                //               style={{\n                //                 fontSize: 15,\n                //                 alignSelf: \"center\",\n                //                 color: \"#989898\",\n                //               }}\n                //             >\n                //               {\" \"}\n                //               in{\" \"}\n                //             </Text>\n                //             <Text style={{ fontSize: 15 }}>{item.type}</Text>\n                //           </View>\n                //         </TouchableOpacity>\n                //         <TouchableOpacity\n                //           style={{\n                //             backgroundColor: \"#3ECF8E\",\n                //             height: \"100%\",\n                //             alignItems: \"center\",\n                //             justifyContent: \"center\",\n                //             padding: 5,\n                //             borderRadius: 5,\n                //             alignSelf: \"flex-end\",\n                //           }}\n                //           onPress={() => {\n                //             setparent(!parent),\n                //               setterm(item.type),\n                //               setplacer(!placer),\n                //               setblur(!blur);\n                //           }} //true\n                //         >\n                //           <Text style={{ fontSize: 15, color: \"#fff\" }}>\n                //             View {item.type}s\n                //           </Text>\n                //         </TouchableOpacity>\n                //       </View>\n                //     );\n                //   })} */}\n                // </View>\n                null}\n\n                <TouchableOpacity\n                  style={{\n                    width: \"100%\",\n                    flex: 1,\n                    backgroundColor: \"transparent\",\n                  }}\n                  onPress={() => navigation.navigate(\"Home\")}\n                ></TouchableOpacity>\n              </View>\n            </View>\n          </BlurView>\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default Search;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: winHeight,\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginRight: 5,\n  },\n  buttonnewContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginRight: 5,\n    padding: 5,\n  },\n\n  circle: {\n    height: 15,\n    width: 15,\n    borderRadius: 15,\n    borderWidth: 1,\n    borderColor: \"#3A48ED\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  checkedCircle: {\n    width: 15,\n    height: 15,\n    borderRadius: 7,\n    backgroundColor: \"#3A48ED\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { Button, StyleSheet, Text, View, Image } from \"react-native\";\n\nconst Welcome = ({ navigation }) => {\n  setTimeout(() => {\n    navigation.replace(\"Home\");\n  }, 2000);\n\n  return (\n    <View style={[styles.container, { backgroundColor: \"#346beb\" }]}>\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <Image\n          source={{ uri: require(\"../../assets/newicon4.png\") }}\n          style={{ height: 100, width: 100 }}\n        />\n        <Text\n          style={{\n            color: \"#fff\",\n            marginLeft: 10,\n            fontSize: 50,\n            fontWeight: \"bold\",\n          }}\n        >\n          Krisearch\n        </Text>\n      </View>\n\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n};\n\nexport default Welcome;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#346beb\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\nimport Header from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\n\nconst Profile = ({ navigation }) => {\n  return (\n    <View style={styles.container}>\n      <View style={{ marginTop: 40, width: \"100%\", elevation: 1000 }}>\n        <Header onTap={() => navigation.navigate(\"Search\")} />\n      </View>\n\n      <View\n        style={{\n          flexDirection: winWidth > 767 ? \"row\" : \"column\",\n          width: \"100%\",\n          backgroundColor: \"pink\",\n          height: \"100%\",\n        }}\n      >\n        {winWidth > 767 ? (\n          <View\n            style={{\n              backgroundColor: \"#8cbaff\",\n              width: \"30%\",\n              height: \"100%\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Button\n              title=\"GO to Home\"\n              onPress={() => navigation.navigate(\"Home\")}\n            />\n          </View>\n        ) : null}\n\n        <View\n          style={{\n            backgroundColor: \"#deebff\",\n            width: winWidth > 767 ? \"70%\" : \"100%\",\n            height: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Button\n            title=\"GO to Search\"\n            onPress={() => navigation.navigate(\"Search\")}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Profile;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import React from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { winWidth, winHeight } from \"./src/utils/window\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Home from \"./src/screens/HomeScreen\";\nimport Search from \"./src/screens/SearchScreen\";\nimport Welcome from \"./src/screens/SplashScreen\";\nimport Header from \"../claro_krisearch/src/components/header\";\nimport Profile from \"./src/screens/ProfileScreen\";\nimport { Feather } from \"@expo/vector-icons\";\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction MyTabBar({ state, descriptors, navigation }) {\n  const focusedOptions = descriptors[state.routes[state.index].key].options;\n\n  if (focusedOptions.tabBarVisible === false) {\n    return null;\n  }\n\n  return (\n    <KeyboardAvoidingView>\n      <View style={{ flexDirection: \"row\" }}>\n        {state.routes.map((route, index) => {\n          const { options } = descriptors[route.key];\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const isFocused = state.index === index;\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: \"tabPress\",\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!isFocused && !event.defaultPrevented) {\n              navigation.navigate(route.name);\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: \"tabLongPress\",\n              target: route.key,\n            });\n          };\n\n          if (index === 1) {\n            return (\n              <TouchableOpacity\n                accessibilityRole=\"button\"\n                accessibilityState={isFocused ? { selected: true } : {}}\n                accessibilityLabel={options.tabBarAccessibilityLabel}\n                testID={options.tabBarTestID}\n                onPress={onPress}\n                onLongPress={onLongPress}\n                style={{\n                  flex: 1,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: 65,\n                  width: 65,\n                  backgroundColor: isFocused ? \"#346beb\" : \"#fff\",\n                  position: \"absolute\",\n                  left: winWidth / 2 - 30,\n                  bottom: 15,\n                  margin: 5,\n                  borderRadius: 35,\n                  borderWidth: 2,\n                  borderColor: isFocused ? \"#fff\" : \"#deebff\",\n                }}\n              >\n                {/* <Text style={{ color: isFocused ? \"#673ab7\" : \"#222\" }}>\n                {label}\n              </Text> */}\n                <Feather\n                  name=\"search\"\n                  size={30}\n                  color={isFocused ? \"#fff\" : \"#346beb\"}\n                />\n              </TouchableOpacity>\n            );\n          }\n\n          return (\n            <TouchableOpacity\n              accessibilityRole=\"button\"\n              accessibilityState={isFocused ? { selected: true } : {}}\n              accessibilityLabel={options.tabBarAccessibilityLabel}\n              testID={options.tabBarTestID}\n              onPress={onPress}\n              onLongPress={onLongPress}\n              style={{\n                flex: 1,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: 56,\n              }}\n            >\n              {/* <Text style={{ color: isFocused ? \"#673ab7\" : \"#222\" }}>\n              {label}\n            </Text> */}\n\n              <View>\n                {index == 0 ? (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      borderWidth: 2,\n                      backgroundColor: isFocused ? \"#deebff\" : \"transparent\",\n                      borderColor: isFocused ? \"#deebff\" : \"transparent\",\n                      width: \"110%\",\n                      borderRadius: 20,\n                      padding: 5,\n                    }}\n                  >\n                    <Feather\n                      name=\"home\"\n                      size={20}\n                      color={isFocused ? \"#346beb\" : \"#222\"}\n                    />\n                    {isFocused ? (\n                      <Text\n                        style={{\n                          fontSize: 16,\n                          marginLeft: 15,\n                          color: \"#346beb\",\n                        }}\n                      >\n                        {label}\n                      </Text>\n                    ) : null}\n                  </View>\n                ) : (\n                  <View>\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        borderWidth: 2,\n                        backgroundColor: isFocused ? \"#deebff\" : \"transparent\",\n                        borderColor: isFocused ? \"#deebff\" : \"transparent\",\n                        width: \"110%\",\n                        borderRadius: 20,\n                        padding: 5,\n                      }}\n                    >\n                      <Feather\n                        name=\"user\"\n                        size={20}\n                        color={isFocused ? \"#346beb\" : \"#222\"}\n                      />\n                      {isFocused ? (\n                        <Text\n                          style={{\n                            fontSize: 16,\n                            marginLeft: 15,\n                            color: \"#346beb\",\n                          }}\n                        >\n                          {label}\n                        </Text>\n                      ) : null}\n                    </View>\n                  </View>\n                )}\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        screenOptions={{\n          headerStyle: {\n            backgroundColor: \"#346beb\",\n          },\n          headerTintColor: \"#fff\",\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n          headerShown: false,\n        }}\n      >\n        <Stack.Screen\n          name=\"Welcome\"\n          component={Welcome}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Home\"\n          component={Home}\n          options={{\n            title: \"Krisearch\",\n          }}\n        />\n        <Stack.Screen name=\"Search\" component={Search} />\n        <Stack.Screen\n          name=\"Profile\"\n          component={Profile}\n          options={{\n            title: \"Profile\",\n          }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"],"sourceRoot":""}