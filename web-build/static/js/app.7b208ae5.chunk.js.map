{"version":3,"sources":["assets/newIcon4.png","src/utils/window.ts","src/components/header.tsx","src/utils/hideNumber.ts","src/components/Card.tsx","src/screens/HomeScreen.tsx","src/firebase/firebase.ts","src/screens/ProfileScreen.tsx","src/screens/LandingScreen.tsx","src/screens/Login.tsx","src/screens/SignUp.tsx","src/screens/testScreen.tsx","App.tsx","assets/newicon4.png","assets/onBoarding/i1.png","assets/onBoarding/i3.png","assets/onBoarding/i2.png","assets/newIcon6.png"],"names":["module","exports","winHeight","Dimensions","get","height","winWidth","width","Header","props","onTap","onLogoTap","filterShown","onFilter","View","style","styles","header","top","flexDirection","alignSelf","alignItems","justifyContent","padding","Image","source","uri","require","Text","headerText","left","backgroundColor","borderRadius","TextInput","fontSize","outlineColor","placeholder","placeholderTextColor","onFocus","AntDesign","name","size","color","StyleSheet","create","fontWeight","marginLeft","marginTop","hideNumber","phone","a","toString","split","splice","Card","phrase","avatar","crop","address","onPress","isCrop","cropAvatar","windowWidth","TouchableOpacity","borderWidth","borderColor","margin","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","resizeMode","length","substring","toLowerCase","map","word","charAt","toUpperCase","slice","join","Entypo","Home","navigation","useState","location","setLocation","errorMsg","setErrorMsg","blur","setblur","farmers","setfarmers","firstScroll","setfirstScroll","tempAddr","addrToggle","setaddrToggle","Date","tempStartDate","settempStartDate","tempEndDate","settempEndDate","show","setshow","focused","setfocused","cropFinal","setcropFinal","gender","state","harvestDate","tempGen","settempGen","tempState","settempState","tempDate","settempDate","sendVal","setsendVal","filteredBlur","setfilteredBlur","mapCroptoFarmer","useEffect","fetch","method","headers","Accept","body","JSON","stringify","farmerName","farmingArea","toLocaleDateString","orderBy","cropName","pageNo","quantity","then","response","json","data","console","log","list","catch","error","res","async","Location","status","text","latitude","coords","longitude","e","err","modalizeFilterRef","useRef","onCloseFilter","current","close","modalizeRef","OpenProfile","open","CloseProfile","onOpenfilter","FlatList","showsVerticalScrollIndicator","renderItem","item","key","id","farmerImage","crops","ListEmptyComponent","contentContainerStyle","flexWrap","onEndReached","ref","modalHeight","modalStyle","threshold","closeOnOverlayTap","mod","buttonContainer","circle","checkedCircle","minWidth","States","code","buttonnewContainer","zIndex","flex","dateFormat","selected","onChange","date","alert","customInput","popperPlacement","marginRight","SimpleLineIcons","i","Feather","totalLand","FontAwesome5","FontAwesome","position","tint","intensity","absoluteFill","nonBlurredContent","Platform","OS","autoFocus","editable","onChangeText","Button","title","cropImage","container","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Profile","config","bucketName","region","accessKeyId","secretAccessKey","firstName","setfirstName","tempfirstName","settempfirstName","tempfa","settempfa","farmarea","setfarmarea","image","setimage","block","setblock","irState","setirState","mainCrop","setmainCrop","auth","currentUser","getIdToken","idtoken","authToken","farmer","totalLandSize","setInputFields","ImagePicker","harvestingTime","estimatedYield","inputFields","handleInputChange","index","event","values","target","value","Number","ScrollView","navigate","borderBottomWidth","borderBottomColor","phoneNumber","onOpen","signOut","type","files","S3FileUpload","uploadFile","updatedName","contactNo","village","district","totalLandSizeUnit","defaultValue","textContentType","onSubmit","preventDefault","className","inputField","handleRemoveFields","push","handleAddFields","Landing","onAuthStateChanged","user","screen","additionalTransfrom","autoPlay","arrows","autoPlaySpeed","centerMode","containerClass","dotListClass","draggable","focusOnSelect","infinite","itemClass","keyBoardControl","minimumTouchDrag","renderButtonGroupOutside","renderDotsOutside","responsive","desktop","breakpoint","max","min","items","slidesToSlide","tablet","mobile","Login","number","setnumber","setuser","setotpsent","tempCode","focusable","textAlign","recaptcha","RecaptchaVerifier","setPersistence","Auth","Persistence","LOCAL","signInWithPhoneNumber","window","prompt","confirm","result","message","handleClick","StatusBar","SignUp","city","setcity","setdistrict","country","setcountry","setregion","userName","setuserName","lat","setlat","long","setlong","handleSubmit","Test","setselected","setcrops","n","Stack","createStackNavigator","Tab","createBottomTabNavigator","createDrawerNavigator","MyTabBar","descriptors","routes","options","tabBarVisible","KeyboardAvoidingView","route","label","undefined","tabBarLabel","isFocused","accessibilityRole","accessibilityState","accessibilityLabel","tabBarAccessibilityLabel","testID","tabBarTestID","emit","canPreventDefault","defaultPrevented","onLongPress","Homely","Navigator","tabBar","Screen","component","App","NavigationContainer","screenOptions","headerStyle","headerTintColor","headerTitleStyle","headerShown"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,sC,0sTCC9BC,EAAYC,IAAWC,IAAI,UAAUC,OAErCC,EAAWH,IAAWC,IAAI,UAAUG,M,SC0GlCC,GAvFML,IAAWC,IAAI,UAAUC,OAC1BF,IAAWC,IAAI,UAAUG,MAU9B,SAACE,GAAwB,IAC9BC,EAA4CD,EAA5CC,MAA4CD,EAArCE,UAAqCF,EAA1BG,YAA0BH,EAAbI,SACvC,OACE,kBAACC,EAAA,EAAD,CAAMC,MAAOC,EAAOC,QAClB,kBAACH,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPW,IAAK,EACLb,OAAQ,OACRc,cAAe,MACfC,UAAW,aACXC,WAAY,SACZC,eAAgB,gBAChBC,QAASjB,EAAW,IAAM,EAAI,IAGhC,kBAACQ,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfE,WAAY,aACZC,eAAgB,aAChBJ,IAAKZ,EAAW,IAAM,EAAI,KAI5B,kBAACkB,EAAA,EAAD,CACEC,OAAQ,CAAEC,IAAKC,EAAQ,MACvBZ,MAAO,CAAER,MAAO,GAAIF,OAAQ,GAAIa,IAAKZ,EAAW,KAAO,GAAK,KAE9D,kBAACsB,EAAA,EAAD,CAAMb,MAAOC,EAAOa,YAApB,cAGF,kBAACf,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfE,WAAYf,EAAW,IAAM,aAAe,WAC5CC,MAAO,MACPe,eAAgBhB,EAAW,IAAM,aAAe,WAChDwB,MAAO,KAGT,kBAAChB,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfE,WAAY,SACZU,gBAAiB,OACjBxB,MAAOD,EAAW,IAAM,MAAQ,MAChCD,OAAQ,GACRkB,QAAS,EACTD,eAAgB,gBAChBU,aAAc,GACdd,IAAKZ,EAAW,IAAM,KAAO,IAG/B,kBAAC2B,EAAA,EAAD,CACElB,MAAO,CACLR,MAAOD,EAAW,IAAM,MAAQ,MAChCD,OAAQC,EAAW,IAAM,GAAK,GAC9B4B,SAA2B,GAC3BH,gBAAiB,OACjBI,aAAc,OACdH,aAAc,GACdT,QAAS,GAEXa,YAAY,mBACZC,qBAAqB,YACrBC,QAAS5B,IAEX,kBAAC6B,EAAA,EAAD,CAAWC,KAAK,UAAUC,KAAM,GAAIC,MAAM,kBAUhD1B,EAAS2B,IAAWC,OAAO,CAC/B3B,OAAQ,CACNV,MAAO,OACPF,OAAQ,GACRc,cAAe,MACfE,WAAY,SACZU,gBAAiB,UACjBR,QAAS,GAEXM,WAAY,CACVK,SAAU5B,EAAW,IAAM,GAAK,GAChCoC,MAAO,OACPG,WAAY,MACZC,WAAY,EACZ1B,UAAW,aACX2B,UAA4B,K,kBCxGjBC,EAtBI,SAACC,GAChB,IAAIC,EAAE,GAcN,OARAA,EAAID,EAAME,WAAWC,MAAM,KAEzBC,OAAO,EAAE,EAAE,KACbH,EAAEG,OAAO,EAAE,EAAE,KACbH,EAAEG,OAAO,EAAE,EAAE,KACbH,EAAEG,OAAO,EAAE,EAAE,KAGNH,GCWI,SAASI,EAAK7C,GAAmB,IAezB8C,EAbnBf,EAQE/B,EARF+B,KACAgB,EAOE/C,EAPF+C,OACAC,EAMEhD,EANFgD,KACAR,EAKExC,EALFwC,MACAS,EAIEjD,EAJFiD,QACAC,EAGElD,EAHFkD,QAEAC,GACEnD,EAFFoD,WAEEpD,EADFmD,QAGIE,EAAc3D,IAAWC,IAAI,UAAUG,MAsB7C,OACE,kBAACwD,EAAA,EAAD,CAAkBJ,QAAS,kBAAMA,MAC/B,kBAAC7C,EAAA,EAAD,CACEC,MACE+C,EAAc,IACV,CACEvD,MAAO,IACPF,OAAQ,IACR0B,gBAAiB,OACjBiC,YAAa,EACbC,YAAa,OACbjC,aAAc,GACdX,WAAY,SACZ6C,OAAQ,EACRC,aAAc,EACdC,YAAa,UACbC,aAAc,CACZ9D,MAAO,EACPF,OAAQ,GAEViE,cAAe,GACfC,aAAc,KAEdC,UAAW,GAEb,CACEjE,MAAqB,IAAduD,EACPzD,OAAQ,IACR0B,gBAAiB,OACjBiC,YAAa,EACbC,YAAa,OACbjC,aAAc,GACdX,WAAY,SACZ6C,OAAQ,EAERE,YAAa,UACbC,aAAc,CACZ9D,OAAQ,EACRF,OAAQ,GAEViE,cAAe,IACfC,aAAc,KAEdC,UAAW,IAInB,kBAAChD,EAAA,EAAD,CACEC,OAAQ,CAAEC,IAAK8B,GACfzC,MACG6C,EAQG,CACErD,MAAO,IACPF,OAAQ,IACRoE,WAAY,UACZT,YAAa,EACbC,YAAa,QAZf,CACE1D,MAAO,IACPF,OAAQ,IACR2D,YAAa,EACbC,YAAa,OACbjC,aAAc,OAWxB,kBAACJ,EAAA,EAAD,CAAMb,MAAO,CAAE8B,WAAY,MAAOX,SAAU,GAAIa,UAAW,OAtF5CQ,EAuFAf,GA9ERkC,OAAS,KAClBnB,EAASA,EAAOoB,UAAU,EAAG,IAAM,OAE9BpB,EACJqB,cACAxB,MAAM,KACNyB,KAAI,SAACC,GAAD,OAAUA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,MACxDC,KAAK,OA0EFtB,EAwBE,KAvBF,kBAAC9C,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfG,eAAgB,eAChBD,WAAY,SAEZE,QAAS,IAGX,kBAACT,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfE,WAAY,SACZC,eAAgB,WAGlB,kBAACM,EAAA,EAAD,SAAQ6B,IAEV,kBAAC0B,EAAA,EAAD,CAAQ3C,KAAK,aAAaC,KAAM,GAAI1B,MAAO,CAAEgC,UAAW,KACxD,kBAACjC,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,KAAO8B,KAKXE,EAIE,KAHF,kBAAC9C,EAAA,EAAD,CAAMC,MAAO,CAAEoD,aAAc,KAC3B,kBAACvC,EAAA,EAAD,KAAOqB,EAAQD,EAAWC,GAAS,oB,sGCgnChCmC,EAluCF,SAAC,GAAmB,EAAjBC,WAAkB,IAAD,EACCC,mBAAS,MADV,WACxBC,EADwB,KACdC,EADc,OAECF,mBAAS,MAFV,WAExBG,EAFwB,KAEdC,EAFc,OAIPJ,oBAAS,GAJF,WAIxBK,EAJwB,KAIlBC,EAJkB,OAKHN,oBAAS,GALN,wBAMPA,mBAAS,KANF,wBAOHA,oBAAS,IAPN,wBAQDA,mBAAS,KARR,WAQxBO,EARwB,KAQfC,EARe,OASOR,mBAAS,IAThB,4BAUGA,mBAAS,KAVZ,6BAWOA,mBAAS,IAXhB,aAWxBS,GAXwB,MAWXC,GAXW,SAYWV,mBAAS,IAZpB,6BAaPA,oBAAS,IAbF,6BAcTA,mBAAS,KAdA,6BAeDA,mBAAS,KAfR,6BAgBPA,mBAAS,KAhBF,6BAiBCA,mBAAS,KAjBV,aAiBxBW,GAjBwB,gBAkBCX,mBAAS,KAlBV,6BAmBPA,mBAAS,KAnBF,6BAoBSA,oBAAS,IApBlB,6BAqBKA,oBAAS,IArBd,aAqBxBY,GArBwB,MAqBZC,GArBY,SAsBKb,oBAAS,GAtBd,6BAuBLA,oBAAS,IAvBJ,6BAwBLA,oBAAS,IAxBJ,6BAyBGA,oBAAS,IAzBZ,6BA0BGA,mBAAS,IAAIc,OA1BhB,6BA2BWd,mBAAS,IAAIc,OA3BxB,aA2BxBC,GA3BwB,MA2BTC,GA3BS,SA4BDhB,mBAAS,IAAIc,MA5BZ,6BA6BOd,mBAAS,IAAIc,OA7BpB,aA6BxBG,GA7BwB,MA6BXC,GA7BW,SA8BPlB,mBAAS,IA9BF,aA8BxBmB,GA9BwB,MA8BlBC,GA9BkB,SA+BDpB,oBAAS,GA/BR,6BAgCDA,mBAAS,KAhCR,aAgCxBqB,GAhCwB,MAgCfC,GAhCe,SAiCGtB,mBAAS,IAjCZ,aAiCxBuB,GAjCwB,MAiCbC,GAjCa,SAkCHxB,mBAAS,CACnC,CACEyB,OAAQ,GACRC,MAAO,GACPC,YAAa,MAtCc,6BA0CD3B,mBAAS,KA1CR,aA0CxB4B,GA1CwB,MA0CfC,GA1Ce,SA2CG7B,mBAAS,IA3CZ,aA2CxB8B,GA3CwB,MA2CbC,GA3Ca,SA4CC/B,mBAAS,IA5CV,aA4CxBgC,GA5CwB,MA4CdC,GA5Cc,SA6CDjC,mBAAS,GA7CR,aA6CxBkC,GA7CwB,MA6CfC,GA7Ce,SA8CSnC,mBAAS,IA9ClB,aA8CxBoC,GA9CwB,MA8CVC,GA9CU,SA+CSrC,oBAAS,GA/ClB,6BAgDeA,mBAAS,KAhDxB,aAgDxBsC,GAhDwB,YAsD/BC,qBAAU,WACRC,MAAM,mDAAoD,CACxDC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,YAAY,EACZC,aAAa,EACbvB,OAAQG,GACRD,YAAaV,GAAYgC,qBACzBC,QAAS,GACTC,SAAU5B,GACV6B,OAAQ,EACRC,UAAU,EACV3B,MAAOI,OAGRwB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLC,QAAQC,IAAIF,EAAKA,KAAKG,MAAOpD,EAAWiD,EAAKA,KAAKG,SAEnDC,OAAM,SAACC,GAAD,OAAWJ,QAAQI,MAAMA,QACjC,CAAC5B,GAASzB,KAEbiD,QAAQC,IAAIpD,GAEZgC,qBAAU,WACRC,MAAM,iDAAkD,CACtDC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBK,SAAUhC,OAGXmC,MAAK,SAACS,GAAD,OAASA,EAAIP,UAClBF,MAAK,SAACG,GAAD,OAAUpB,GAAgBoB,EAAKA,KAAKG,WAC3C,CAACzC,KAoDJuC,QAAQC,IAAItC,IAgBZqC,QAAQC,IAAIrB,IAEZC,qBAAU,YACR,WAAC,UAAA3E,EAAAoG,OAAA,kEAAApG,EAAA,MACwBqG,OADxB,mBAEgB,YAFhB,EACOC,OADP,uBAGG9D,EAAY,4CAHf,4CAAAxC,EAAA,MAOsBqG,IAAiC,KAPvD,OAOKhE,EAPL,OAQCC,EAAYD,GARb,6DAAD,KAUC,IAEH,IAAIkE,GAAO,YACPhE,EACFgE,GAAO,WACc,MAAZlE,IACTyD,QAAQC,IAAI1D,GACZgE,IAAyB,2CACzBA,IAA6B,CAC3BG,SAAUnE,EAASoE,OAAOD,SAC1BE,UAAWrE,EAASoE,OAAOC,YAE1BhB,MAAK,SAACiB,GACLb,QAAQC,IAAIY,MAEbV,OAAM,SAACW,GAAD,OAASd,QAAQC,IAAIa,OAGhCL,GAAOtB,KAAKC,UAAU7C,GACtByD,QAAQC,IAAIQ,IAEZ,IAIMM,GAAoBC,iBAAiB,MAKrCC,GAAgB,WAAO,IAAD,EAC1B,SAAAF,GAAkBG,UAAlB,EAA2BC,SAGvBC,GAAcJ,iBAAiB,MAC/BK,GAAc,WAAO,IAAD,EACxB,SAAAD,GAAYF,UAAZ,EAAqBI,QAGjBC,GAAe,WAAO,IAAD,EACzB,SAAAH,GAAYF,UAAZ,EAAqBC,SAqCvB,OACE,kBAACrJ,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPF,OAAQH,EACR6B,gBAAiB,YAGnB,kBAAC,EAAD,CACErB,MAAO,WACLkF,GAAQ,GAAOc,GAAQ,KAEzB/F,UAAW,WACTqI,QAAQC,IAAI,SAEdpI,SAAU,kBAAMmI,QAAQC,IAAI,aAE9B,kBAACnI,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPc,WAAY,SACZC,eAAgB,aAChBH,cAAe,MACfY,gBAAiB,UACjBR,QAAS,IAGX,kBAACwC,EAAA,EAAD,CACEhD,MAAO,CACLI,cAAe,MACfE,WAAY,SACZC,eAAgB,SAChBS,gBAAiB,UACjB1B,OAAQ,GACRE,MAAO,GACPgB,QAAS,EACTS,aAAc,GAEhB2B,QAAS,kBAzFI,WAAO,IAAD,EACzB,SAAAoG,GAAkBG,UAAlB,EAA2BI,OAwFNE,KAEf,kBAACjI,EAAA,EAAD,CAAWC,KAAK,SAASC,KAAM,GAAIC,MAAM,SACzC,kBAACd,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVW,WAAY,MACZC,WAAY,EACZJ,MAAO,SAGR,IARH,YAaS,OAAZmD,EACC,kBAAC4E,EAAA,EAAD,CACEC,8BAA8B,EAC9B3B,KAAMlD,EACN8E,WAjFY,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAClB,kBAACtH,EAAD,CACEuH,IAAKD,EAAKE,GACVtI,KAAMoI,EAAKvC,WACX7E,OAAQoH,EAAKG,YACb9H,MAAO2H,EAAK3H,MACZS,QAASkH,EAAK5D,MACdvD,KACEmH,EAAKI,MAAM,GAAGvC,UACbmC,EAAKI,MAAMtG,OAAS,GAAK,EAAI,GAAK,OAASkG,EAAKI,MAAMtG,OAAS,IAElEf,QAAS,WA9GO,IAACmH,EAoHf9B,QAAQC,IAAI,WApHG6B,EAqHHF,EAAKE,GApHrBhD,MAAM,2DAA6DgD,EAAI,CACrE/C,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAM,OAELU,MAAK,SAACS,GAAD,OAASA,EAAIP,UAClBF,MAAK,SAACG,GAAD,OAAUnC,GAAWmC,EAAKA,KAAKG,SACpCC,OAAM,SAACW,GAAD,OAASd,QAAQC,IAAIa,MAE9BO,SAwKMY,mBAAoB,kBAClB,kBAACrJ,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,KAAzB,4BAEFgJ,sBAAuB,CACrB/J,cAAe,MACfZ,MAAO,OACP4K,SAAU,OACV9J,WAAY,aACZC,eAAgB,SAChBS,gBAAiB,UACjBR,QAASjB,EAAW,IAAM,GAAK,GAEjC8K,aAAc,WA9HpBpF,GAAeD,GAAc,MAgIvB,KACJ,kBAACjF,EAAA,EAAD,CAAMC,MAAO,CAAER,MAAO,OAAQF,OAAQ,MACtC,kBAAC,WAAD,CACEgL,IAAKtB,GACLuB,YAAahL,EAAW,IAAkB,IAAZJ,EAA+B,IAAZA,EACjDqL,WAAYjL,EAAW,IAAM,CAAEC,MAAO,IAAKa,UAAW,UAAa,KACnEoK,UAAW,IACXC,mBAAmB,EACnBC,KAAG,GAEH,kBAAC5K,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPY,cAAe,MACfE,WAAY,aACZC,eAAgB,gBAChBC,QAAS,EACTL,IAAK,IAMP,kBAACU,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,GAAIY,WAAY,EAAGD,WAAY,QAAxD,kBAIA,kBAAC/B,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfE,WAAY,SAEZd,MAAO,MACPe,eAAgB,kBAGlB,kBAACyC,EAAA,EAAD,CACEhD,MAAO,CACLR,MAAO,GACPF,OAAQ,GACR0B,gBAAiB,OACjBV,WAAY,SACZC,eAAgB,SAEhBU,aAAc,GACdiC,YAAa,UACbD,YAAa,GAEfL,QAAS,WACPwD,GAAW,IACXE,GAAa,IACbE,GAAY,IACZE,GAAW,KAGb,kBAAC7F,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVQ,MAAO,YAHX,UASF,kBAACqB,EAAA,EAAD,CACEhD,MAAO,CACLR,MAAO,GACPF,OAAQ,GACR0B,gBAAiB,UACjBV,WAAY,SACZC,eAAgB,SAEhBU,aAAc,GACdiC,YAAa,UACbD,YAAa,GAEfL,QAAS,WA/VnBqF,QAAQC,IAAI/B,GAASE,GAAWE,IAiWpBG,GAAWD,GAAU,GACrByC,OAGF,kBAACrI,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVQ,MAAO,SAHX,UAUF,kBAACqB,EAAA,EAAD,CACEJ,QAAS,WACPsG,OAGF,kBAACnJ,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,GACPF,OAAQ,GACR2D,YAAa,EACbC,YAAa,UACb5C,WAAY,SACZD,UAAW,WACXE,eAAgB,SAChBH,cAAe,MACfY,gBAAiB,UACjBC,aAAc,KAGhB,kBAACO,EAAA,EAAD,CAAWC,KAAK,QAAQC,KAAM,GAAIC,MAAM,gBAKhD,kBAAC5B,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,MACPa,UAAW,SACXf,OAAQ,EACR0B,gBAAiB,UACjBgB,UAAW,GACX1B,WAAY,YAGhB,kBAACO,EAAA,EAAD,CACEb,MAAO,CACL2B,MAAO,UACPR,SAAU,GACVa,UAAW,EACXD,WAAY,EACZvB,QAAS,IANb,aAWA,kBAACT,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,MACPwC,UAAW,GACX5B,cAAe,MACfE,WAAY,SACZC,eAAgB,gBAChBC,QAAS,EACTuB,WAAY,EACZ1B,UAAW,eA7PF,CACjB,CACEyJ,IAAK,IACLpB,KAAM,OAER,CACEoB,IAAK,IACLpB,KAAM,UAyPU5E,KAAI,SAAC+F,GACf,OACE,kBAAC9J,EAAA,EAAD,CAAM+J,IAAKD,EAAKC,IAAK9J,MAAOC,EAAO2K,iBACjC,kBAAC5H,EAAA,EAAD,CACEhD,MAAOC,EAAO4K,OACdjI,QAAS,WACPwD,GAAWyD,EAAKC,OAGjB3D,KAAY0D,EAAKC,KAChB,kBAAC/J,EAAA,EAAD,CAAMC,MAAOC,EAAO6K,iBAGxB,kBAACjK,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,GAAIY,WAAY,IAAM8H,EAAKnB,WAK5D,kBAAC3I,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPwC,UAAW,GACX5B,cAAe,SACfE,WAAY,aACZC,eAAgB,eAChBC,QAAS,EACTH,UAAW,eAGb,kBAACN,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,MACPa,UAAW,SACXf,OAAQ,EACR0B,gBAAiB,UACjBgB,UAAW,GACX1B,WAAY,YAGhB,kBAACO,EAAA,EAAD,CACEb,MAAO,CACL2B,MAAO,UACPR,SAAU,GACVa,UAAW,GACXD,WAAY,EACZqB,aAAc,EACd5C,QAAS,IAPb,aAaA,kBAACwC,EAAA,EAAD,CACEJ,QAAS,kBAAMwC,IAAeD,KAC9BnF,MAAO,CACLI,cAAe,MACfY,gBAAiB,UACjBiC,YAAa,EACbC,YAAa,UACbjC,aAAc,EACdX,WAAY,SACZC,eAAgB,gBAChBC,QAAS,EACTuK,SAAU,MAEVhJ,WAAY,IAGd,kBAAClB,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,KACtB+D,IAAsB,cAEzB,kBAAC1D,EAAA,EAAD,CAAWC,KAAK,OAAOC,KAAM,MAE9ByD,GACC,kBAACpF,EAAA,EAAD,CAAMC,MAAO,CAAEgC,UAAW,KACvBgJ,EAAOlH,KAAI,SAAC+F,GACX,OACE,kBAAC9J,EAAA,EAAD,CAAM+J,IAAKD,EAAKoB,KAAMjL,MAAOC,EAAOiL,oBAClC,kBAAClI,EAAA,EAAD,CACEhD,MAAOC,EAAO4K,OACdjI,QAAS,WACP0D,GAAauD,EAAKpI,QAMnB4E,KAAcwD,EAAKpI,MAClB,kBAAC1B,EAAA,EAAD,CAAMC,MAAOC,EAAO6K,iBAGxB,kBAACjK,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,GAAIY,WAAY,IACtC8H,EAAKpI,WAMd,MAEN,kBAAC1B,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPwC,UAAW,GACX5B,cAAe,SACfE,WAAY,aACZC,eAAgB,eAChBC,QAAS,EACTH,UAAW,eAGb,kBAACN,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,MACPa,UAAW,SACXf,OAAQ,EACR0B,gBAAiB,UACjBgB,UAAW,GACX1B,WAAY,YAGhB,kBAACP,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,CACEb,MAAO,CACL2B,MAAO,UACPR,SAAU,GACVa,UAAW,GACXD,WAAY,EACZqB,aAAc,EACd+H,OAAQ,IACR3K,QAAS,IARb,mBAaA,kBAACT,EAAA,EAAD,CACEC,MAAO,CACLoL,KAAM,EACNhL,cAAe,MACfE,WAAY,SACZC,eAAgB,gBAChBf,MAAO,OACPF,OAAQ,IACRkB,QAAS,IAGX,kBAACT,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,CAAMb,MAAO,CAAEoD,aAAc,KAA7B,QACA,kBAAC,IAAD,CACEiI,WAAW,aACXC,SACEhG,GAAgB,IAAID,KAAS,IAAIA,KAASC,GAE5CiG,SAAU,SAACC,GACTA,GAAO,IAAInG,MAAOmC,qBACdiE,MAAM,wCACNlG,GAAiBiG,IAEvBE,YACE,kBAACxK,EAAA,EAAD,CACElB,MAAO,CACLgB,gBAAiB,UACjBC,aAAc,EACdiC,YAAa,UACb5D,OAAQ,GACR2D,YAAa,EACbzC,QAAS,EACTW,SAAU,GACV3B,MAAO,UAMjB,kBAACO,EAAA,EAAD,CAAMC,MAAO,CAAE+B,WAAY,KACzB,kBAAClB,EAAA,EAAD,CAAMb,MAAO,CAAEoD,aAAc,KAA7B,MACA,kBAAC,IAAD,CACEiI,WAAW,aACXM,gBAAgB,eAChBL,SAAU9F,GACV+F,SAAU,SAACC,GACT/F,GAAe+F,IAQjBE,YACE,kBAACxK,EAAA,EAAD,CACElB,MAAO,CACLgB,gBAAiB,UACjBC,aAAc,EACdiC,YAAa,UACb5D,OAAQ,GACR2D,YAAa,EACbzC,QAAS,EACTW,SAAU,GACV3B,MAAO,YAQrB,kBAACO,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,MACPa,UAAW,SACXf,OAAQ,EAER0C,UAAW,IACX1B,WAAY,aAIlB,kBAACP,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPY,cAAe,MACfE,WAAY,SACZC,eAAgB,eAChBF,UAAW,WAEX2B,UAAW,UAIjB,kBAAC,WAAD,CACEsI,IAAKjB,GACLkB,YAAahL,EAAW,IAAkB,IAAZJ,EAA+B,IAAZA,EACjDqL,WAAYjL,EAAW,IAAM,CAAEC,MAAO,IAAKa,UAAW,UAAa,KACnEoK,UAAW,IACXC,mBAAmB,EACnBC,KAAG,GAEH,kBAAC5K,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CACEC,MAAO,CACLgB,gBAAiB,UACjBxB,MAAO,OACPF,OAAQ,IACR2D,YAAa,EACb9C,KAAM,EACNc,aAAc,GACdiC,YAAa,UACbG,YAAa,OACbC,aAAc,CACZ9D,MAAO,EACPF,OAAQ,GAEViE,cAAe,IACfC,aAAc,KAEdC,UAAW,IAGb,kBAACT,EAAA,EAAD,CACEJ,QAAS,kBAAM4G,MACfxJ,MAAO,CACLM,WAAY,SACZ0B,UAAW,EACX4J,YAAa,EACbpL,QAAS,EACTD,eAAgB,SAChBF,UAAW,WACXW,gBAAiB,kBACjBC,aAAc,GACd3B,OAAQ,GACRE,MAAO,KAGT,kBAACO,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfG,eAAgB,gBAChBD,WAAY,WAGd,kBAACO,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVW,WAAY,IACZH,MAAO,OACPiK,YAAa,IALjB,SAUA,kBAACC,EAAA,EAAD,CACEpK,KAAK,QACLC,KAAM,GACNC,MAAM,OACNiB,QAAS,kBAAM4G,UAIrB,kBAACzJ,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfE,WAAY,SACZC,eAAgB,gBAChBC,QAAS,EACTL,KAAM,KAGR,kBAACJ,EAAA,EAAD,CAAMC,MAAO,CAAER,MAAO,MAAOF,OAAQ,OAAQkB,QAAS,IACnDoF,GAAQ9B,KAAI,SAACgI,GACZ,OACE,kBAACrL,EAAA,EAAD,CACEC,OAAQ,CAAEC,IAAKmL,EAAE9B,aACjBhK,MAAO,CACLV,OAAQ,IACRE,MAAO,IACPyB,aAAc,IACdiC,YAAa,OACbD,YAAa,SAMvB,kBAAClD,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,SACfE,WAAY,SACZC,eAAgB,eAChBf,MAAO,MACPF,OAAQ,SAGV,kBAACS,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,SACfE,WAAY,aACZd,MAAO,OACPF,OAAQ,OACRiB,eAAgB,iBAGlB,kBAACR,EAAA,EAAD,CAAMC,MAAO,CAAEI,cAAe,MAAOE,WAAY,WAC/C,kBAACyL,EAAA,EAAD,CAAStK,KAAK,OAAOC,KAAM,GAAIC,MAAM,SAEpCiE,GAAQ9B,KAAI,SAACgI,GACZ,OACE,kBAACjL,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVQ,MAAO,OACPG,WAAY,MACZC,WAAY,IAGb+J,EAAExE,gBAKX,kBAACvH,EAAA,EAAD,CAAMC,MAAO,CAAEI,cAAe,MAAOE,WAAY,WAC/C,kBAACyL,EAAA,EAAD,CAAStK,KAAK,UAAUC,KAAM,GAAIC,MAAM,SACvCiE,GAAQ9B,KAAI,SAACgI,GACZ,OACE,kBAACjL,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVQ,MAAO,OACPG,WAAY,MACZC,WAAY,IAGb+J,EAAE7F,WAKX,kBAAClG,EAAA,EAAD,CAAMC,MAAO,CAAEI,cAAe,MAAOE,WAAY,WAC/C,kBAACyL,EAAA,EAAD,CAAStK,KAAK,QAAQC,KAAM,GAAIC,MAAM,SACrCiE,GAAQ9B,KAAI,SAACgI,GACZ,OACE,kBAACjL,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVQ,MAAO,OACPG,WAAY,MACZC,WAAY,IAGb+J,EAAE5J,cAQjB,kBAACnC,EAAA,EAAD,CAAMC,MAAO,CAAEG,KAAM,KACnB,kBAACU,EAAA,EAAD,CACEb,MAAO,CACLgC,UAAWzC,EAAW,IAAM,GAAK,GACjCiB,QAAS,EACTsB,WAAY,MACZH,MAAO,UACPR,SAAU,GACVY,WAAY,IAPhB,mBAYA,kBAAChC,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,MACPa,UAAW,SACXf,OAAQ,EACR0B,gBAAiB,aAGrB,kBAACjB,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,SACf4B,UAAW,GACXxB,QAAS,GACTlB,OAAQC,EAAW,IAAM,IAAM,IAC/BgB,eAAgB,kBAGlB,kBAACR,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfE,WAAY,SACZd,MAAO,OACPe,eAAgB,gBAChB6C,aAAc,KAGhB,kBAACrD,EAAA,EAAD,CAAMC,MAAO,CAAEI,cAAe,SAAUZ,MAAO,QAC7C,kBAACO,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfE,WAAY,WAGd,kBAAC8D,EAAA,EAAD,CAAQ3C,KAAK,OAAOC,KAAM,GAAIC,MAAM,YAEpC,kBAACd,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVQ,MAAO,UACPG,WAAY,QAJhB,SAUF,kBAAC/B,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,KAAzB,UAIJ,kBAACpB,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,SACfZ,MAAO,MACPc,WAAY,aAGd,kBAACP,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfE,WAAY,WAGd,kBAACuL,EAAA,EAAD,CACEpK,KAAK,WACLC,KAAM,GACNC,MAAM,YAER,kBAACd,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVQ,MAAO,UACPI,WAAY,EACZD,WAAY,QALhB,iBAWF,kBAAC/B,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,KAAzB,mBAIN,kBAACpB,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfE,WAAY,SACZd,MAAO,OACPe,eAAgB,gBAChByB,UAAW,IAGb,kBAACjC,EAAA,EAAD,CAAMC,MAAO,CAAEI,cAAe,SAAUZ,MAAO,QAC7C,kBAACO,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfE,WAAY,WAGd,kBAACuL,EAAA,EAAD,CACEpK,KAAK,kBACLC,KAAM,GACNC,MAAM,YAER,kBAACd,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVQ,MAAO,UACPG,WAAY,MACZC,WAAY,IALhB,iBAWF,kBAAChC,EAAA,EAAD,CAAMC,MAAO,CAAEgC,UAAW,IACvB4D,GAAQ9B,KAAI,SAACgI,GACZ,OACE,kBAACjL,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,KAAO2K,EAAEE,gBAM1C,kBAACjM,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,SACfZ,MAAO,MACPc,WAAY,aAGd,kBAACP,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfE,WAAY,WAGd,kBAACuL,EAAA,EAAD,CACEpK,KAAK,cACLC,KAAM,GACNC,MAAM,YAER,kBAACd,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVQ,MAAO,UACPI,WAAY,EACZD,WAAY,QALhB,aAWF,kBAAC/B,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,GAAIY,WAAY,IAAzC,iBAMN,kBAAChC,EAAA,EAAD,OAEF,kBAACA,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,MACPa,UAAW,SACXf,OAAQ,EACR0B,gBAAiB,UACjBgB,UAAWzC,EAAW,IAAM,GAAK,OAIvC,kBAACQ,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPY,cAAe,SACfD,KAAM,GACNG,WAAY,WAGd,kBAACO,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVQ,MAAO,UACPI,WAAY,IAJhB,eASA,kBAAChC,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPY,cAAe,MACfE,WAAY,SACZC,eAAgB,eAChBJ,IAAK,IAGP,kBAAC6C,EAAA,EAAD,CACEhD,MAAO,CACLR,MAAOD,EAAW,IAAM,GAAK,GAC7BD,OAAQC,EAAW,IAAM,GAAK,GAC9ByB,gBAAiB,UACjBV,WAAY,SACZC,eAAgB,SAChBH,cAAe,MACfa,aAAc,IAEhB2B,QAAS,kBACP6I,MACE,yGAIJ,kBAACQ,EAAA,EAAD,CAAcxK,KAAK,WAAWC,KAAM,GAAIC,MAAM,SAC9C,kBAACd,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU5B,EAAW,IAAM,GAAK,GAChCoC,MAAO,OACPI,WAAY,IAJhB,SAUF,kBAACiB,EAAA,EAAD,CACEhD,MAAO,CACLR,MAAOD,EAAW,IAAM,GAAK,GAC7BD,OAAQC,EAAW,IAAM,GAAK,GAC9ByB,gBAAiB,UACjBV,WAAY,SACZC,eAAgB,SAChBH,cAAe,MACfa,aAAc,IAEhB2B,QAAS,kBAAM6I,MAAM,2BAErB,kBAAC5K,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU5B,EAAW,IAAM,GAAK,GAChCoC,MAAO,OACPI,WAAY,IAJhB,QAUF,kBAACiB,EAAA,EAAD,CACEhD,MAAO,CACLR,MAAOD,EAAW,IAAM,GAAK,IAC7BD,OAAQC,EAAW,IAAM,GAAK,GAC9ByB,gBAAiB,OACjBV,WAAY,SACZC,eAAgB,SAChBH,cAAe,MACfa,aAAc,GACdiC,YAAa,UACbD,YAAa,EACbzC,QAAS,GAEXoC,QAAS,kBACP6I,MACE,2DAIJ,kBAACS,EAAA,EAAD,CAAazK,KAAK,cAAcC,KAAM,GAAIC,MAAM,YAChD,kBAACd,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU5B,EAAW,IAAM,GAAK,GAChCoC,MAAO,UACPI,WAAY,IAJhB,iBAeX6C,EACC,kBAAC7E,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPF,OAAQ,OACR0B,gBAAiB,sBACjBmL,SAAU,aAGZ,kBAAC,IAAD,CACEC,KAAK,OACLC,UAAW,GACXrM,MAAO,CAAC4B,IAAW0K,aAAcrM,EAAOsM,oBAExC,kBAACxM,EAAA,EAAD,CACEC,MAAO,CACLgB,gBAAiB,OACjB1B,OAAQ,GACRE,MAAOD,EAAW,IAAM,MAAQ,MAChCc,UAAW,SACXD,cAAe,MACfE,WAAY,SACZC,eAAgB,gBAChBU,aAAc,EACdT,QAAS,GACT6C,YAAa,UACbC,aAAc,CACZ9D,MAAO,EACPF,OAAQ,GAEViE,cAAe,IACfC,aAAc,KACdxB,UAAW,GACXyB,UAAW,IAGb,kBAACvC,EAAA,EAAD,CACElB,MACkB,QAAhBwM,IAASC,IAAgB,CACvBrL,aAAc,OACd9B,OAAQ,GACR0B,gBAAiB,QACjBxB,MAAO,MACPgB,QAAS,EACTW,SAAU,IAGdE,YAAY,mBACZqL,WAAW,EACXC,UAAU,EACVC,aAAc,SAAClE,GACbT,QAAQC,IAAIQ,GACZ/C,GAAQ+C,MAGZ,kBAACmE,EAAA,EAAD,CAAQC,MAAM,aAAalK,QAAS,kBAAMiC,GAAQ,OAE1C,KAATa,GACC,kBAACgE,EAAA,EAAD,CACEC,8BAA8B,EAC9B3B,KAAMrB,GACNiD,WA5mCM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAClB,kBAAC7G,EAAA,EAAD,CACEhD,MAAO,CACLR,MAAOD,EAAW,IAAM,MAAQ,MAChCD,OAAQ,GACRc,cAAe,MACfE,WAAY,SACZC,eAAgB,aAChB4C,OAAQ,EACR3C,QAAS,EACTyC,YAAa,EACbC,YAAa,OACbjC,aAAc,GACdD,gBAAiB,OACjBX,UAAW,UAEbuC,QAAS,WACPmD,GAAa8D,EAAKpI,MAAOiF,GAAWD,GAAU,KAGhD,kBAAChG,EAAA,EAAD,CACEC,OAAQ,CAAEC,IAAKkJ,EAAKkD,WACpB/M,MAAO,CACLR,MAAO,GACPF,OAAQ,GACR2D,YAAa,EACbC,YAAa,QACbjC,aAAc,MAGlB,kBAACJ,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,GAAIY,WAAY,IAAM8H,EAAKpI,QA+kC1CyI,mBAAoB,kBAClB,kBAACnK,EAAA,EAAD,CAAMC,MAAOC,EAAO+M,WAClB,kBAACnM,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,KACtB,IADH,4BAMJgJ,sBAAuB,CACrB3K,MAAO,UAGT,OAGN,OAOJS,EAAS2B,IAAWC,OAAO,CAC/BmL,UAAW,CACT5B,KAAM,EACNpK,gBAAiB,UACjBV,WAAY,SACZC,eAAgB,SAChBjB,OAAQH,GAEVyL,gBAAiB,CACfxK,cAAe,MACfG,eAAgB,gBAChBD,WAAY,SACZsL,YAAa,GAEfV,mBAAoB,CAClB9K,cAAe,MACfG,eAAgB,aAChBD,WAAY,SACZsL,YAAa,EACbpL,QAAS,GAGXqK,OAAQ,CACNvL,OAAQ,GACRE,MAAO,GACPyB,aAAc,GACdgC,YAAa,EACbC,YAAa,UACb5C,WAAY,SACZC,eAAgB,UAGlBuK,cAAe,CACbtL,MAAO,GACPF,OAAQ,GACR2B,aAAc,GACdD,gBAAiB,a,2CCnyCrBiM,IAASC,cAhBK,CAOVC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIJR,QAAf,E,mCCw3CeS,EAt2CC,SAAC,GAAoB,IAAD,EAAjBpJ,EAAiB,EAAjBA,WACXqJ,EAAS,CACbC,WAAY,gBAEZC,OAAQ,aACRC,YAAa,uBACbC,gBAAiB,4CAGb1E,EAAcJ,iBAAiB,MATH,EAkBV1E,mBAAS,IAlBC,wBAmBAA,mBAAS,KAnBT,WAmB3ByJ,EAnB2B,KAmBhBC,EAnBgB,OAoBZ1J,mBAAS,IApBG,wBAqBRA,mBAAS,KArBD,wBAsBFA,mBAAS,KAtBP,wBAuBQA,mBAAS,KAvBjB,WAuB3B2J,EAvB2B,KAuBZC,EAvBY,OAwBJ5J,mBAAS,IAxBL,wBAyBFA,mBAAS,KAzBP,wBA0BNA,mBAAS,IA1BH,WA0B3B6J,EA1B2B,KA0BnBC,EA1BmB,QA2BF9J,mBAAS,GA3BP,aA2B3B+J,GA3B2B,MA2BjBC,GA3BiB,SA4BAhK,mBAAS,IA5BT,6BA6BVA,mBAAS,KA7BC,6BA8BJA,mBAAS,KA9BL,6BA+BRA,mBAAS,KA/BD,aA+B3BiK,GA/B2B,MA+BpBC,GA/BoB,SAgCAlK,mBAAS,IAhCT,6BAiCJA,oBAAS,IAjCL,6BAkCRA,mBAAS,KAlCD,aAkC3BmK,GAlC2B,MAkCpBC,GAlCoB,SAmCJpK,mBAAS,IAnCL,aAmC3BqK,GAnC2B,MAmClBC,GAnCkB,SAoCFtK,mBAAS,IApCP,aAoC3BuK,GApC2B,MAoCjBC,GApCiB,SAqCMxK,mBAAS,IArCf,6BAsCFA,mBAAS,OAtCP,aAsC3BC,GAtC2B,MAsCjBC,GAtCiB,SAuCFF,mBAAS,MAvCP,aAuC3BG,GAvC2B,MAuCjBC,GAvCiB,SAwCMJ,mBAAS,IAxCf,aAwCbqC,IAxCa,aA0ClCE,qBAAU,WAAO,IAAD,EACd,SAAAmG,EACG+B,OACAC,cAFH,EAEgBC,aACbrH,MAAK,SAAUsH,GACdlH,QAAQC,IAAIiH,GACZpI,MAAM,sDAAuD,CAC3DC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB+H,UAAWD,MAGZtH,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAELC,QAAQC,IAAIF,EAAKA,KAAKqH,QACtBpB,EAAajG,EAAKA,KAAKqH,OAAO5N,MAC9BkN,GAAS3G,EAAKA,KAAKqH,OAAOX,OAC1BG,GAAW7G,EAAKA,KAAKqH,OAAOpJ,OAC5BwI,GAASzG,EAAKA,KAAKqH,OAAOrF,aAC1BuE,GAAYvG,EAAKA,KAAKqH,OAAOC,eAC7BC,GAAevH,EAAKA,KAAKiC,OACzB8E,GAAY/G,EAAKA,KAAKiC,OACtBhC,QAAQC,IAAIF,EAAKA,KAAKiC,UAEvB7B,OAAM,SAACW,GAAD,OAASd,QAAQC,IAAIa,WAEjC,IAwBHjC,qBAAU,YACR,WAAC,UAAA3E,EAAAoG,OAAA,kEAAApG,EAAA,MACwBqG,OADxB,mBAEgB,YAFhB,EACOC,OADP,uBAGG9D,GAAY,4CAHf,4CAAAxC,EAAA,MAOsBqG,IAAiC,KAPvD,OAOKhE,EAPL,OAQCC,GAAYD,GARb,6DAAD,KAUC,IAEH,IAAIkE,GAAO,YACPhE,GACFgE,GAAO,WACElE,KACTyD,QAAQC,IAAI1D,IACZkE,GAAOtB,KAAKC,UAAU7C,IACtByD,QAAQC,IAAIQ,KA+BdT,QAAQC,IAAI8F,GACZlH,qBAAU,YACR,WAAC,QAAA3E,EAAAoG,OAAA,mDACqB,QAAhBiE,IAASC,GADd,kCAAAtK,EAAA,MAIaqN,OAJb,gBAKkB,YALlB,EAGK/G,QAGAgD,MAAM,6DANX,4DAAD,KAUC,IAEH,IAjKkC,GA4MIlH,mBAAS,CAC7C,CAAE9C,KAAM,GAAIgO,eAAgB,GAAIC,eAAgB,KA7MhB,aA4M3BC,GA5M2B,MA4MdJ,GA5Mc,MA4N5BK,GAAoB,SAACC,EAAOC,GAChC,IAAMC,EAAM,IAAOJ,IACO,SAAtBG,EAAME,OAAOvO,KACfsO,EAAOF,GAAOpO,KAAOqO,EAAME,OAAOC,MACH,mBAAtBH,EAAME,OAAOvO,KACtBsO,EAAOF,GAAOH,eAAiBQ,OAAOJ,EAAME,OAAOC,OAEnDF,EAAOF,GAAOJ,eAAiBK,EAAME,OAAOC,MAG9CV,GAAeQ,IA0BjBjJ,qBAAU,WACRC,MAAM,iDAAkD,CACtDC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBK,SAAU,SAGXG,MAAK,SAACS,GAAD,OAASA,EAAIP,UAClBF,MAAK,SAACG,GAAD,OAAUpB,GAAgBoB,EAAKA,KAAKG,WAC3C,IAqIH,OACE,kBAACpI,EAAA,EAAD,KACE,kBAACoQ,EAAA,EAAD,KACE,kBAACpQ,EAAA,EAAD,CAAMC,MAAO,CAAER,MAAO,OAAQiE,UAAW,MACvC,kBAAC,EAAD,CAAQ9D,MAAO,kBAAM2E,EAAW8L,SAAS,YAG3C,kBAACrQ,EAAA,EAAD,CACEC,MAAO,CACLgB,gBAAiB,UACjBxB,MAAO,OACPF,OAAQH,EACRmB,WAAY,WAKd,kBAACP,EAAA,EAAD,CACEC,MAAO,CAAEgB,gBAAiB,UAAWxB,MAAO,OAAQF,OAAQ,SAE9D,kBAACS,EAAA,EAAD,CACEC,MAAO,CACLR,MAAOD,EAAW,IAAM,MAAQ,MAEhC4D,OAAQ,GACRnB,WAAY,IACZxB,QAAS,EACTQ,gBAAiB,OACjBiC,YAAa,EACbhC,aAAc,GACdiC,YAAa,OACbiI,OAAQ,IACR9H,YAAa,UACbC,aAAc,CACZ9D,MAAO,EACPF,OAAQ,GAEViE,cAAe,GACfC,aAAc,KAEdC,UAAW,IAGb,kBAAC1D,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPF,OAAQ,IACR+Q,kBAAmB,EACnBC,kBAAmB,OACnBlQ,cAAe,MACfE,WAAY,SACZC,eAAgB,gBAEhBU,aAAc,KAGhB,kBAACR,EAAA,EAAD,CACEC,OAAQ,CACNC,IAAK6N,IAEPxO,MAAO,CACLV,OAAQ,GACRE,MAAO,GACP4D,aAAc,EACdF,YAAa,OAGjB,kBAACnD,EAAA,EAAD,CACEC,MAAO,CACLV,OAAQ,IACRc,cAAe,SACfZ,MAAwB,MACxBc,WAAY,SACZC,eAAgB,SAEhB6C,aAAc,IAiBhB,kBAACrD,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfE,WAAY,SAEZC,eAAgB,WAChBf,MAAO,QAGT,kBAACuM,EAAA,EAAD,CACEtK,KAAK,OACLC,KAAM,GACNC,MAAM,OACN3B,MAAO,CAAEgC,WAAY,EAAG4J,YAAa,KAEvC,kBAAC/K,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GAEVW,WAAY,QAGbkM,IAaL,kBAACjO,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfE,WAAY,SACZC,eAAgB,WAChBf,MAAO,QAGuB,MAA/ByN,EAAS+B,OAAOC,YACf,kBAACpO,EAAA,EAAD,kBAEA,kBAACA,EAAA,EAAD,cAAOoM,EAAS+B,OAAOC,kBAAvB,EAAO,EAA6BsB,gBAa5C,kBAACxQ,EAAA,EAAD,CACEC,MAAO,CACLgC,UAAW,EAEXxC,MAAO,SAGT,kBAACO,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPc,WAAY,SACZF,cAAe,MACfG,eAAgB,kBAGlB,kBAACM,EAAA,EAAD,CACEb,MAAO,CAAE8B,WAAY,MAAOH,MAAO,UAAWR,SAAU,KAD1D,oBAKA,kBAAC6B,EAAA,EAAD,CAYEhD,MAAO,CACLR,MAAO,IACPF,OAAQ,GACRgB,WAAY,SACZU,gBAAiB,UACjBiC,YAAa,EACbhC,aAAc,EAEdiC,YAAa,UACb3C,eAAgB,UAElBqC,QAAS,kBAzkBV,WAAO,IAAD,EACnB,SAAAyG,EAAYF,UAAZ,EAAqBI,OAwkBQiH,KAEf,kBAAC3P,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVX,QAAS,EACTmB,MAAO,OACPG,WAAY,QALhB,iBAWF,kBAAC+K,EAAA,EAAD,CACEC,MAAM,UACNlK,QAAS,WACPqK,EAAS+B,OAAOyB,UAChBnM,EAAW8L,SAAS,eAK1B,kBAACrQ,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPF,OAAQ,EAER0C,UAAW,KAGf,kBAACjC,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPwC,UAAW,GAEX5B,cAAe,MACfE,WAAY,SACZC,eAAgB,kBAGlB,kBAACR,EAAA,EAAD,CACEC,MAAO,CAAEM,WAAY,SAAUC,eAAgB,WAE/C,kBAACM,EAAA,EAAD,CAAMb,MAAO,CAAE2B,MAAO,OAAQR,SAAU,KAAxC,gBAGA,kBAACN,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,GAAIa,UAAW,IACrCsM,GADH,WAIF,kBAACvO,EAAA,EAAD,CACEC,MAAO,CAAEM,WAAY,SAAUC,eAAgB,WAE/C,kBAACM,EAAA,EAAD,CAAMb,MAAO,CAAE2B,MAAO,OAAQR,SAAU,KAAxC,UACA,kBAACN,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,GAAIa,UAAW,IAAM0M,KAEhD,kBAAC3O,EAAA,EAAD,CACEC,MAAO,CAAEM,WAAY,SAAUC,eAAgB,WAE/C,kBAACM,EAAA,EAAD,CAAMb,MAAO,CAAE2B,MAAO,OAAQR,SAAU,KAAxC,SACA,kBAACN,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,GAAIa,UAAW,IAAM4M,MAGlD,kBAAC7O,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPF,OAAQ,EACR0B,gBAAiB,UACjBgB,UAAW,KAGf,kBAACjC,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfZ,MAAO,OACPwC,UAAW,GACX1B,WAAY,SACZC,eAAgB,kBAIlB,kBAACR,EAAA,EAAD,CAAMC,MAAO,CAAER,MAAO,SACpB,kBAACO,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPc,WAAY,SACZF,cAAe,MACfG,eAAgB,aAChByB,UAAW,KAGb,kBAACnB,EAAA,EAAD,CACEb,MAAO,CACL8B,WAAY,MACZH,MAAO,UACPR,SAAU,GACViC,aAAc,KALlB,iBAgDF,kBAACrD,EAAA,EAAD,CACEC,MAAO,CACLV,OAAoB,GAAZH,EACRiE,aAAc,KAGhB,kBAACsG,EAAA,EAAD,CACEC,8BAA8B,EAC9B3B,KAAM8G,GACNlF,WA7cA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OACE,kBAAC9J,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPF,OAAQ,GACRc,cAAe,MACfE,WAAY,SACZC,eAAgB,gBAChBS,gBAAiB,OACjBoC,aAAc,EACdH,YAAa,EACbzC,QAAS,EACT0C,YAAa,UACbjC,aAAc,EACdoC,YAAa,UACbC,aAAc,CACZ9D,MAAO,EACPF,OAAQ,GAEViE,cAAe,GACfC,aAAc,KAEdC,UAAW,IAWb,kBAAC1D,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfE,WAAY,SACZC,eAAgB,eAGlB,kBAACE,EAAA,EAAD,CACEC,OAAQ,CACNC,IACE,gFAEJX,MAAO,CACLV,OAAQ,GACRE,MAAO,GACPoM,YAAa,EACb3K,aAAc,MACdiC,YAAa,WAGjB,kBAACrC,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,KAAO0I,EAAKpI,MACrC,kBAAC2C,EAAA,EAAD,CAAQ3C,KAAK,aAAaC,KAAM,GAAIC,MAAM,UAC1C,kBAACd,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,KAAO0I,EAAK6F,eAArC,aAEF,kBAAC7O,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,KAAO0I,EAAK4F,kBAoZvBvF,mBAAoB,kBAClB,kBAACnK,EAAA,EAAD,CAAMC,MAAOC,GAAO+M,WAClB,kBAACnM,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,KACtB,IADH,0BAMJgJ,sBAAuB,CACrBiB,KAAM,OAyGd,kBAACrL,EAAA,EAAD,OAKF,2BAAO2Q,KAAK,OAAOnF,SAhpBX,SAACzC,GACnBb,QAAQC,IAAIY,EAAEkH,OAAOW,MAAM,IAC3BC,IAAaC,WAAW/H,EAAEkH,OAAOW,MAAM,GAAIhD,GACxC9F,MAAK,SAACG,GAAD,OAAUC,QAAQC,IAAIF,MAC3BI,OAAM,SAACW,GAAD,OAASd,QAAQC,IAAIa,SAypBpB,kBAAChJ,EAAA,EAAD,CAAMC,MAAO,CAAEoD,aAAc,GAAI5D,MAAO,SACtC,kBAACwD,EAAA,EAAD,CAYEhD,MAAO,CACLR,MAAO,OACPF,OAAQ,GACRgB,WAAY,SACZU,gBAAiB,OACjBiC,YAAa,EACbhC,aAAc,EAEdiC,YAAa,OACb3C,eAAgB,UAElBqC,QAAS,WACPqK,EAAS+B,OAAOyB,UAChBnM,EAAW8L,SAAS,aAGtB,kBAACvP,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVX,QAAS,EACTmB,MAAO,OACPG,WAAY,QALhB,gBAeV,kBAAC,WAAD,CACEwI,IAAKjB,EACLkB,YAAahL,EAAW,IAAkB,IAAZJ,EAAmBA,EACjDsL,UAAW,IACXD,WACEjL,EAAW,IAAM,CAAEC,MAAO,IAAKa,UAAW,UAAa,KAEzDqK,mBAAmB,EACnBC,KAAG,GAcH,kBAACwF,EAAA,EAAD,KACE,kBAACpQ,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPY,cAAe,MACfE,WAAY,SACZC,eAAgB,gBAChBC,QAAS,EACTL,IAAK,IAMP,kBAACU,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,GAAIY,WAAY,EAAGD,WAAY,QAAxD,qBAIA,kBAAC/B,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfE,WAAY,SAEZd,MAAO,MACPe,eAAgB,aAyBlB,kBAACyC,EAAA,EAAD,CACEhD,MAAO,CACLR,MAAO,GACPF,OAAQ,GACR0B,gBAAiB,UACjBV,WAAY,SACZC,eAAgB,SAEhBU,aAAc,GACdiC,YAAa,UACbD,YAAa,EACb2I,YAAa,IAEfhJ,QAvoBhB,WAAuB,IAAD,EACpBqF,QAAQC,IAAI,YAAa8F,GACzB/F,QAAQC,IAAIgG,GACZ,IAAI4C,EAAc5C,EAElBjG,QAAQC,IAAI8F,GACZ/F,QAAQC,IAAIkG,GACZnG,QAAQC,IAAIyH,IACZZ,GAAYY,IAEZ,SAAA1C,EACG+B,OACAC,cAFH,EAEgBC,aACbrH,MAAK,SAACsH,GACLpI,MAAM,uDAAwD,CAC5DC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB+H,UAAWD,EACXlF,MAAO0F,GACPN,OAAQ,CACN5N,KAAuB,IAAjByM,EAA8BF,EAAY8C,EAChD9G,YACE,uEAEF+G,UAAW,eACXC,QAAS,WACTtC,MAAO,WACPuC,SAAU,eACVhL,MAAO,cACPqJ,cAAyB,GAAVlB,EAAsBE,GAAWF,EAChD8C,kBAAmB,SACnBvI,SAAU,GACVE,UAAW,QAIdhB,MAAK,kBAAMI,QAAQC,IAAI,iBACvBE,OAAM,SAACW,GAAD,OAASd,QAAQC,IAAIa,WAgmBpB,kBAAClI,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVQ,MAAO,SAHX,SAUF,kBAACqB,EAAA,EAAD,CAAkBJ,QA1+BhB,WAAO,IAAD,EACpB,SAAAyG,EAAYF,UAAZ,EAAqBC,UA0+BP,kBAACrJ,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,GACPF,OAAQ,GACR2D,YAAa,EACbC,YAAa,UACb5C,WAAY,SACZD,UAAW,WACXE,eAAgB,SAChBH,cAAe,MACfY,gBAAiB,UACjBC,aAAc,KAGhB,kBAACO,EAAA,EAAD,CAAWC,KAAK,QAAQC,KAAM,GAAIC,MAAM,gBAKhD,kBAAC5B,EAAA,EAAD,CAAMC,MAAO,CAAEQ,QAAS,KACtB,kBAACK,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,GAAIa,UAAW,KAAxC,QACA,kBAACd,EAAA,EAAD,CACElB,MAAO,CACLR,MAAOD,EAAW,IAAM,MAAQ,IAChCD,OAAQ,GACR2D,YAAa,EACbC,YAAa,UACb1C,QAAS,GACTwB,UAAW,EACXf,aAAc,GAEhB2L,aAAc,SAAC9D,GAAD,OAAOqF,EAAiBrF,IACtCqI,aAAcnD,EACd3M,YAAY,oBAEd,kBAACR,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,GAAIa,UAAW,KAAxC,gBACA,kBAACd,EAAA,EAAD,CACEkQ,gBAAgB,kBAChBpR,MAAO,CACLR,MAAOD,EAAW,IAAM,MAAQ,IAChCD,OAAQ,GACR2D,YAAa,EACbC,YAAa,UACb1C,QAAS,GACTwB,UAAW,EACXf,aAAc,GAEhBkQ,aAA0B,MAAZ7C,GAAmBA,GAAW,IAC5C1B,aAAc,SAAC9D,GAAD,OAAOuF,EAAUvF,IAC/BzH,YAAY,uBAEd,kBAACtB,EAAA,EAAD,CAAMC,MAAO,CAAEgC,UAAW,KACxB,kBAACnB,EAAA,EAAD,CACEb,MAAO,CAAEmB,SAAU,GAAIY,WAAY,EAAGD,WAAY,QADpD,wBASA,oCACE,0BAAMuP,SAj2BD,SAACvI,GACpBA,EAAEwI,iBACFrJ,QAAQC,IAAI,cAAeyH,MAg2BX,kBAAC5P,EAAA,EAAD,CACEC,MAAO,CACLiD,YAAa,EAEbC,YAAa,UACb1D,MAAO,OACP4D,aAAc,EACdnC,aAAc,EACde,UAAW,IAGb,yBAAKuP,UAAU,YACZ5B,GAAY7L,KAAI,SAAC0N,EAAY3B,GAAb,OACf,kBAAC,WAAD,CAAU/F,IAAQ0H,EAAL,IAAmB3B,GAC9B,kBAAC9P,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,SACfE,WAAY,aACZC,eAAgB,SAChByB,UAAW,GACXhB,gBAAiB,UACjBkC,YAAa,UACbD,YAAa,EACbhC,aAAc,KAGhB,kBAAClB,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPY,cAAe,MACfE,WAAY,SACZC,eAAgB,kBAGlB,kBAACR,EAAA,EAAD,CAAMC,MAAO,CAAER,MAAO,MAAOoM,YAAa,KACxC,yBAAK2F,UAAU,uBAGb,2BACEvR,MAAO,CACLR,MAAO,MACPF,OAAQ,GACR6D,OAAQ,EACRF,YAAa,EACb7B,aAAc,OACdH,aAAc,GAEhBI,YAAY,mBACZqP,KAAK,OACLa,UAAU,eACVxH,GAAG,OACHtI,KAAK,OACLwO,MAAOuB,EAAW/P,KAClB8J,SAAU,SAACuE,GACTF,GAAkBC,EAAOC,QAMjC,kBAACtO,EAAA,EAAD,CACExB,MAAO,CAAE4L,YAAa,IACtBnK,KAAK,SACLC,KAAM,GACNC,MAAM,UACNiB,QAAS,YAr2Bd,SAACiN,GAC1B,IAAME,EAAM,IAAOJ,IACnBI,EAAOzN,OAAOuN,EAAO,GACrBN,GAAeQ,GAm2BiB0B,CAAmB5B,OAIzB,kBAAC9P,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfZ,MAAO,MACPc,WAAY,SACZC,eAAgB,kBAGlB,yBAAKgR,UAAU,uBAEb,2BACEvR,MAAO,CACLR,MAAO,MACPF,OAAQ,GACR6D,OAAQ,EACR/B,aAAc,QAEhBC,YAAY,WACZqP,KAAK,OACLa,UAAU,eACVxH,GAAG,iBACHtI,KAAK,iBACLwO,MAAOuB,EAAW9B,eAClBnE,SAAU,SAACuE,GAAD,OACRF,GAAkBC,EAAOC,OAI/B,yBAAKyB,UAAU,uBAEb,2BACEvR,MAAO,CACLR,MAAO,MACPF,OAAQ,GACRyC,YAAa,GACbX,aAAc,QAEhBC,YAAY,eACZqP,KAAK,OACLa,UAAU,eACVxH,GAAG,iBACHtI,KAAK,iBACLwO,MAAOuB,EAAW/B,eAClBlE,SAAU,SAACuE,GAAD,OACRF,GAAkBC,EAAOC,eAU3C,kBAAC/P,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfZ,MAAO,OACPc,WAAY,SACZC,eAAgB,WA2BlB,kBAACyC,EAAA,EAAD,CACEhD,MAAO,CACLR,MAAO,OACPF,OAAQ,GACRgB,WAAY,SACZU,gBAAiB,UACjBiC,YAAa,EACbhC,aAAc,EACde,UAAW,GACXkB,YAAa,UACb3C,eAAgB,UAElBqC,QAAS,YAl9BP,WACtB,IAAMmN,EAAM,IAAOJ,IACnBI,EAAO2B,KAAK,CAAEjQ,KAAM,GAAIgO,eAAgB,GAAIC,eAAgB,KAC5DH,GAAeQ,GAg9BO4B,KAGF,kBAAC9Q,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVX,QAAS,EACTmB,MAAO,OACPG,WAAY,QALhB,gBAYJ,yBAAKyP,UAAU,kBACf,sCAsHdtR,GAAS2B,IAAWC,OAAO,CAC/BmL,UAAW,CACT5B,KAAM,EACNpK,gBAAiB,UACjBV,WAAY,SACZC,eAAgB,Y,qBCp+BLqR,I,OArZC,SAAC,GAAoB,IAAlBtN,EAAiB,EAAjBA,WAAiB,EACRC,mBAAS,MADD,wBAERA,mBAAS,KAFD,qBAIhC0I,EAAS+B,OAAO6C,oBAAmB,SAACC,GAEvB,IAAD,EAANA,IACF,SAAA7E,EACG+B,OACAC,cAFH,EAEgBC,aACbrH,MAAK,SAACsH,GAELlH,QAAQC,IAAIiH,GAIZpI,MAAM,sDAAuD,CAC3DC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB+H,UAAWD,MAGZtH,MAAK,SAACS,GAAD,OAASA,EAAIP,UAElBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,EAAKA,KAAKqH,QACE,MAApBrH,EAAKA,KAAKqH,QAEZpH,QAAQC,IAAI,YACZ5D,EAAW8L,SAAS,YAEpBnI,QAAQC,IAAI,qBACZ5D,EAAW8L,SAAS,SAAU,CAAE2B,OAAQ,aAI3C3J,OAAM,SAAUW,GACfd,QAAQC,IAAIa,SAejBX,OAAM,SAAUW,GACfd,QAAQC,IAAIa,UAkDtB,OACE,kBAAChJ,EAAA,EAAD,CAAMC,MAAOC,GAAO+M,WAClB,kBAACjN,EAAA,EAAD,CACEC,MAAO,CACLR,MAAOD,EAAW,IAAM,MAAQ,OAEhCD,OAAQC,EAAW,IAAM,IAAM,IAC/ByC,WAAY,MAGd,kBAAC,KAAD,CACEgQ,oBAAqB,EACrBC,UAAU,EACVC,QAAQ,EACRC,cAAe,IACfC,YAAY,EACZb,UAAU,GACVc,eAAe,YACfC,aAAa,GACbC,WAAS,EACTC,eAAe,EACfC,UAAQ,EACRC,UAAU,GACVC,iBAAe,EACfC,iBAAkB,GAClBC,0BAA0B,EAC1BC,mBAAmB,EACnBC,WA5CW,CACjBC,QAAS,CACPC,WAAY,CAAEC,IAAK,IAAMC,IAAK,MAC9BC,MAAO,EACPC,cAAe,GAEjBC,OAAQ,CACNL,WAAY,CAAEC,IAAK,KAAMC,IAAK,KAC9BC,MAAO,EACPC,cAAe,GAEjBE,OAAQ,CACNN,WAAY,CAAEC,IAAK,IAAKC,IAAK,GAC7BC,MAAO,EACPC,cAAe,KAgCX,kBAACtT,EAAA,EAAD,CACEC,MAAO,CACLV,OAAQ,IAERgB,WAAY,SACZC,eAAgB,aAChBH,cAAe,WAGjB,kBAACL,EAAA,EAAD,CACEC,MAAO,CACLV,OAAQC,EAAW,IAAM,MAAQ,MACjCyC,UAAWzC,EAAW,IAAM,GAAK,GACjC6D,aAAc,GACd5D,MAAO,OACPc,WAAY,WAGd,kBAACG,EAAA,EAAD,CACEC,OAAQE,EAAQ,KAChBZ,MAAO,CACLV,OAAQC,EAAW,IAAM,IAAM,IAC/BC,MAAOD,EAAW,IAAM,IAAM,QAIpC,kBAACsB,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU5B,EAAW,IAAM,GAAK,GAChCoC,MAAO,OACPK,UAAW,KAJf,wCAUF,kBAACjC,EAAA,EAAD,CACEC,MAAO,CACLV,OAAQ,IAERgB,WAAY,SACZC,eAAgB,aAChBH,cAAe,WAGjB,kBAACL,EAAA,EAAD,CACEC,MAAO,CACLV,OAAQC,EAAW,IAAM,MAAQ,MACjCyC,UAAWzC,EAAW,IAAM,GAAK,GACjC6D,aAAc,GACd5D,MAAO,OACPc,WAAY,WAGd,kBAACG,EAAA,EAAD,CACEC,OAAQE,EAAQ,KAChBZ,MAAO,CACLV,OAAQC,EAAW,IAAM,IAAM,IAC/BC,MAAOD,EAAW,IAAM,IAAM,QAIpC,kBAACsB,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU5B,EAAW,IAAM,GAAK,GAChCoC,MAAO,OACPK,UAAW,KAJf,mCAUF,kBAACjC,EAAA,EAAD,CACEC,MAAO,CACLV,OAAQ,IAERgB,WAAY,SACZC,eAAgB,aAChBH,cAAe,WAGjB,kBAACL,EAAA,EAAD,CACEC,MAAO,CACLV,OAAQC,EAAW,IAAM,MAAQ,MACjCyC,UAAWzC,EAAW,IAAM,GAAK,GACjC6D,aAAc,GACd5D,MAAO,OACPc,WAAY,WAGd,kBAACG,EAAA,EAAD,CACEC,OAAQE,EAAQ,KAChBZ,MAAO,CACLV,OAAQC,EAAW,IAAM,IAAM,IAC/BC,MAAOD,EAAW,IAAM,IAAM,QAIpC,kBAACsB,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU5B,EAAW,IAAM,GAAK,GAChCoC,MAAO,OACPK,UAAW,KAJf,iDAYN,kBAACjC,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfZ,MAAO,OACPe,eAAgB,SAChBD,WAAY,SACZH,IAAK,KAGP,kBAACM,EAAA,EAAD,CACEC,OAAQE,EAAQ,KAChBZ,MAAO,CAAEV,OAAQ,GAAIE,MAAO,MAE9B,kBAACqB,EAAA,EAAD,CAAMb,MAAO,CAAE+B,WAAY,EAAGZ,SAAU,GAAIQ,MAAO,SAAnD,cAIF,kBAAC5B,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,SACfZ,MAAO,IACPF,OAAQ,IACRa,IAAK,GACLI,eAAgB,kBAGlB,kBAACyC,EAAA,EAAD,CACEhD,MAAO,CACLR,MAAO,OACPF,OAAQ,GACRgB,WAAY,SACZU,gBAAiB,UACjBiC,YAAa,EACbhC,aAAc,EACdiC,YAAa,UACb3C,eAAgB,gBAChBH,cAAe,OAEjBwC,QAAS,kBAAM0B,EAAW8L,SAAS,WAEnC,kBAACrQ,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,MACPF,OAAQ,OACRc,cAAe,MAEfE,WAAY,SACZC,eAAgB,aAChBC,QAAS,KAGX,kBAACyL,EAAA,EAAD,CAAcxK,KAAK,UAAUC,KAAM,GAAI1B,MAAO,CAAE2B,MAAO,UACvD,kBAAC5B,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,SACfE,WAAY,aACZC,eAAgB,eAEhBjB,OAAQ,GACRyC,WAAY,KAGd,kBAAClB,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,GAAIQ,MAAO,OAAQG,WAAY,QAAxD,gBAGA,kBAACjB,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,GAAIQ,MAAO,SAApC,yBAKJ,kBAACH,EAAA,EAAD,CACEC,KAAK,aACLC,KAAM,GACNC,MAAM,OACN3B,MAAO,CAAE4L,YAAa,OAG1B,kBAAC5I,EAAA,EAAD,CACEhD,MAAO,CACLR,MAAO,OACPF,OAAQ,GACRgB,WAAY,SACZU,gBAAiB,OACjBiC,YAAa,EACbhC,aAAc,EACdiC,YAAa,UACb3C,eAAgB,gBAChBH,cAAe,MACf4B,UAAW,IAEbY,QAAS,kBAAM0B,EAAW8L,SAAS,SAAU,CAAE2B,OAAQ,WAEvD,kBAAChS,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,MACPF,OAAQ,OACRc,cAAe,MAEfE,WAAY,SACZC,eAAgB,aAChBC,QAAS,KAIX,kBAACgB,EAAA,EAAD,CAAWC,KAAK,eAAeC,KAAM,GAAIC,MAAM,YAC/C,kBAAC5B,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,SACfE,WAAY,aACZC,eAAgB,eAEhBjB,OAAQ,GACRyC,WAAY,KAGd,kBAAClB,EAAA,EAAD,CACEb,MAAO,CAAEmB,SAAU,GAAIQ,MAAO,UAAWG,WAAY,QADvD,eAKA,kBAACjB,EAAA,EAAD,CACEb,MAAO,CAAEmB,SAAU,GAAIQ,MAAO,UAAWG,WAAY,QADvD,8BAOJ,kBAACN,EAAA,EAAD,CACEC,KAAK,aACLC,KAAM,GACNC,MAAM,UACN3B,MAAO,CAAE4L,YAAa,OAG1B,kBAACiB,EAAA,EAAD,CAAQC,MAAM,UAAUlK,QAAS,kBAAM0B,EAAW8L,SAAS,eA2B7DnQ,GAAS2B,IAAWC,OAAO,CAC/BmL,UAAW,CACT5B,KAAM,EACNpK,gBAAiB,UACjBV,WAAY,SACZC,eAAgB,Y,UCpBLiT,GAvYD,SAAC,GAAoB,IAAlBlP,EAAiB,EAAjBA,WAAiB,EACJC,mBAAS,IADL,WACzBkP,EADyB,KACjBC,EADiB,OAERnP,mBAAS,IAFD,wBAGRA,mBAAS,KAHD,WAGnBoP,GAHmB,aAINpP,mBAAS,MAJH,wBAKFA,oBAAS,IALP,WAKhBqP,GALgB,aAMFrP,mBAAS,IANP,wBAOAA,mBAAS,KAPT,WAOzBsP,EAPyB,UA2JhC,OACE,kBAAC9T,EAAA,EAAD,CAAMC,MAAOC,GAAO+M,WAClB,yBAAKjD,GAAG,wBAiBR,kBAAChK,EAAA,EAAD,CACEC,MAAO,CACLV,OAAQH,EACRK,MAAO,OACPwB,gBAAiB,UACjBZ,cAAe,WAGjB,kBAACL,EAAA,EAAD,CACEC,MAAO,CACLV,OAAQ,MAERgB,WAAY,SACZC,eAAgB,SAChBH,cAAe,QAGjB,kBAACK,EAAA,EAAD,CACEC,OAAQE,EAAQ,KAChBZ,MAAO,CAAEV,OAAQ,GAAIE,MAAO,MAE9B,kBAACqB,EAAA,EAAD,CAAMb,MAAO,CAAE+B,WAAY,EAAGZ,SAAU,GAAIQ,MAAO,SAAnD,cAIF,kBAAC5B,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPc,WAAY,SACZC,eAAgB,SAChB4C,OAAQ,KAGV,kBAACtC,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,GAAIQ,MAAO,OAAQG,WAAY,MAAxD,wBAKF,kBAAC/B,EAAA,EAAD,CACEC,MAAO,CACLV,OAAQ,MACR0B,gBAAiB,OACjBiC,YAAa,EACbzD,MAAOD,EAAW,IAAM,MAAQ,MAChC2D,YAAa,OACb7C,UAAW,SACXY,aAAc,GACdkC,OAAQ,KAGV,kBAACpD,EAAA,EAAD,CACEC,MAAO,CACLM,WAAY,SACZC,eAAgB,SAChBC,QAAS,GACTwB,UAAW,KAGb,kBAACnB,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,GAAIW,WAAY,SAAzC,YAOF,kBAAC/B,EAAA,EAAD,CACEC,MAAO,CACLQ,QAAS,GACTL,IAAK,GACLG,WAAY,SACZC,eAAgB,SAChBf,MAAO,SAGT,kBAAC0B,EAAA,EAAD,CACEG,YAAY,kCASZyS,WAAW,EACX9T,MACkB,QAAhBwM,IAASC,IAAgB,CACvBrL,aAAc,OACd9B,OAAQ,GACR0B,gBAAiB,QACjBxB,MAAO,MACPgB,QAAS,EACTW,SAAU,GACV8B,YAAa,EACbqN,kBAAmB,OACnBpN,YAAa,OACbjC,aAAc,EACd8S,UAAW,UAGfnH,aAAc,SAAC9D,GAAD,OAAO4K,EAAU,MAAQ5K,OAM3C,kBAAC/I,EAAA,EAAD,CACEC,MAAO,CACLQ,QAAS,GACThB,MAAO,OACPc,WAAY,SACZC,eAAgB,WAGlB,kBAACyC,EAAA,EAAD,CACEhD,MAAO,CACLR,MAAO,MACPF,OAAQ,GACRgB,WAAY,SACZU,gBAAiB,UACjBiC,YAAa,EACbhC,aAAc,EACdd,IAAK,GACL+C,YAAa,UACb3C,eAAgB,UAElBqC,QAAS,WACPgR,GAAW,GApSL,WAClB,IAAII,EAAY,IAAI/G,EAAS+B,KAAKiF,kBAAkB,sBAAuB,CACzEvS,KAAM,cAGRuG,QAAQC,IAAI2L,GACZ5G,EACG+B,OACAkF,eAAejH,EAAS+B,KAAKmF,KAAKC,YAAYC,OAC9CxM,MAAK,WAOJoF,EACG+B,OACAsF,sBAAsBb,EAAQO,GAC9BnM,MAAK,SAAUiB,GACd,IAAImC,EAAOsJ,OAAOC,OAAO,gBAAiB,IAE9B,MAARvJ,GACFhD,QAAQC,IAAI,aAGdY,EAAE2L,QAAQxJ,GACPpD,MAAK,SAAU6M,GAAS,IAAD,EACtBzM,QAAQC,IAAIwM,EAAO5C,KAAM,QACzB6B,EAAQe,EAAO5C,KAAKvB,aACpBtI,QAAQC,IACNwM,EAAO5C,KAAO4C,EAAO5C,KAAKvB,YAAc,gBAG1C,SAAAtD,EACG+B,OACAC,cAFH,EAEgBC,aACbrH,MAAK,SAAUsH,GAMdpI,MACE,sDACA,CACEC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB+H,UAAWD,MAIdtH,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLC,QAAQC,IAAIF,EAAKA,KAAKqH,QACE,MAApBrH,EAAKA,KAAKqH,QACZ/K,EAAW8L,SAAS,UACpBnI,QAAQC,IAAI,mBAEZ5D,EAAW8L,SAAS,SAAU,CAAE2B,OAAQ,SACxC9J,QAAQC,IAAI,iBAGfE,OAAM,SAACW,GAAD,OAASd,QAAQC,IAAIa,SAE/BX,OAAM,SAAUW,GACfd,QAAQC,IAAIa,SAiBjBX,OAAM,SAACW,GACNd,QAAQC,IAAIa,YAIrBX,OAAM,SAACC,GAEUA,EAAM4C,KACH5C,EAAMsM,WAsMjBC,KAGF,kBAAC/T,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVX,QAAS,EACTmB,MAAO,OACPG,WAAY,QALhB,aA8EJ,kBAAC+S,GAAA,UAAD,CAAW7U,MAAM,aAUrBC,GAAS2B,IAAWC,OAAO,CAC/BmL,UAAW,CACT5B,KAAM,EACNpK,gBAAiB,UACjBV,WAAY,SACZC,eAAgB,YCwJLuU,I,OA/hBA,SAAC,GAAoB,IAAlBxQ,EAAiB,EAAjBA,WAAiB,EACTC,mBAAS,IADA,wBAELA,oBAAS,IAFJ,wBAGDA,mBAAS,OAHR,WAG1BC,EAH0B,KAGhBC,EAHgB,OAIDF,mBAAS,MAJR,WAI1BG,EAJ0B,KAIhBC,EAJgB,OAKDJ,mBAAS,IALR,wBAMTA,mBAAS,KANA,WAM1BwQ,EAN0B,KAMpBC,EANoB,OAODzQ,mBAAS,IAPR,WAO1B0M,EAP0B,KAOhBgE,EAPgB,OAQH1Q,mBAAS,IARN,WAQ1B2Q,EAR0B,KAQjBC,EARiB,OASL5Q,mBAAS,IATJ,WAS1BsJ,EAT0B,KASlBuH,EATkB,OAUH7Q,mBAAS,IAVN,wBAWDA,mBAAS,KAXR,WAW1B8Q,EAX0B,KAWhBC,GAXgB,QAYX/Q,mBAAS,GAZE,aAY1BgR,GAZ0B,MAYrBC,GAZqB,SAaTjR,mBAAS,GAbA,aAa1BkR,GAb0B,MAapBC,GAboB,SAcTnR,mBAAS,IAdA,aAc1BmB,GAd0B,MAcpBC,GAdoB,SAeXpB,mBAAS,IAfE,6BAgBPA,mBAAS,KAhBF,6BAiBOA,mBAAS,KAjBhB,aAiBZqC,IAjBY,gBAkBKrC,mBAAS,CAC7C,CAAE9C,KAAM,GAAIgO,eAAgB,GAAIC,eAAgB,KAnBjB,aAkB1BC,GAlB0B,MAkBbJ,GAlBa,MAsB3BoG,GAAe,SAAC7M,GAAO,IAAD,IAC1BA,EAAEwI,iBACFrJ,QAAQC,IAAI,cAAeyH,IAC3B1H,QAAQC,IAAImN,GACH,SAAGpI,EAAS+B,OAAOC,cAAhB,EAA6BsB,YACzC,SAAAtD,EACG+B,OACAC,cAFH,EAEgBC,aACbrH,MAAK,SAACsH,GAAa,IAAD,EACjBpI,MAAM,uDAAwD,CAC5DC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB+H,UAAWD,EACXlF,MAAO0F,GACPN,OAAQ,CACN5N,KAAM4T,EACNrL,YACE,4EACF+G,UAAS,SAAE9D,EAAS+B,OAAOC,kBAAlB,EAAE,EAA6BsB,YACxCS,QAAS+D,EACTrG,MAAOwG,EACPjE,SAAUA,EACVhL,MAAO4H,EACPyB,cAAe,EACf4B,kBAAmB,SACnBvI,SAAU4M,GACV1M,UAAW4M,QAGd5N,MAAK,kBAAMvD,EAAW8L,SAAS,SAAU,CAAE2B,OAAQ,gBAItDnC,GAAoB,SAACC,EAAOC,GAChC,IAAMC,EAAM,IAAOJ,IACO,SAAtBG,EAAME,OAAOvO,KACfsO,EAAOF,GAAOpO,KAAOqO,EAAME,OAAOC,MACH,mBAAtBH,EAAME,OAAOvO,KACtBsO,EAAOF,GAAOH,eAAiBQ,OAAOJ,EAAME,OAAOC,OAEnDF,EAAOF,GAAOJ,eAAiBK,EAAME,OAAOC,MAG9CV,GAAeQ,IAejBjJ,qBAAU,WACRC,MAAM,iDAAkD,CACtDC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBK,SAAUhC,OAGXmC,MAAK,SAACS,GAAD,OAASA,EAAIP,UAClBF,MAAK,SAACG,GAAD,OAAUpB,GAAgBoB,EAAKA,KAAKG,WAC3C,CAACzC,KACJoB,qBAAU,YACR,WAAC,UAAA3E,EAAAoG,OAAA,kEAAApG,EAAA,MACwBqG,OADxB,mBAEgB,YAFhB,EACOC,OADP,uBAGG9D,EAAY,4CAHf,4CAAAxC,EAAA,MAOsBqG,IAAiC,KAPvD,OAOKhE,EAPL,OAQCC,EAAYD,GARb,6DAAD,KAUC,IAEH,IAAIkE,GAAO,YACPhE,EACFgE,GAAO,WACc,MAAZlE,IACTyD,QAAQC,IAAI1D,GACZgE,IAAyB,2CACzBA,IAA6B,CAC3BG,SAAUnE,EAASoE,OAAOD,SAC1BE,UAAWrE,EAASoE,OAAOC,YAE1BhB,MAAK,SAACiB,GACLb,QAAQC,IAAIY,EAAE,IACdkM,EAAQlM,EAAE,GAAGiM,MACbE,EAAYnM,EAAE,GAAGmI,UACjBmE,EAAUtM,EAAE,GAAG+E,QACfsH,EAAWrM,EAAE,GAAGrH,MAChB+T,GAAOhR,EAASoE,OAAOD,UACvB+M,GAAQlR,EAASoE,OAAOC,WACxBZ,QAAQC,IAAI6M,EAAM9D,EAAUpD,EAAQqH,MAErC9M,OAAM,SAACW,GAAD,OAASd,QAAQC,IAAIa,OAGhCL,GAAOtB,KAAKC,UAAU7C,GACtByD,QAAQC,IAAIQ,IAEZA,GAAOtB,KAAKC,UAAU7C,GACtByD,QAAQC,IAAIQ,IAEZT,QAAQC,IAAI,kBAyCZ,OACE,kBAACnI,EAAA,EAAD,CAAMC,MAAO,CAACC,GAAO+M,UAAW,CAAEhM,gBAAiB,UACjD,kBAACjB,EAAA,EAAD,CACEC,MAAO,CAAEV,OAAQH,EAAWK,MAAO,OAAQwB,gBAAiB,SAE5D,kBAACjB,EAAA,EAAD,CACEC,MAAO,CACLV,OAAQ,MACR0B,gBAAiB,cACjBV,WAAY,SACZC,eAAgB,SAChBH,cAAe,QAGjB,kBAACK,EAAA,EAAD,CACEC,OAAQE,EAAQ,KAChBZ,MAAO,CAAEV,OAAQ,GAAIE,MAAO,MAE9B,kBAACqB,EAAA,EAAD,CAAMb,MAAO,CAAE+B,WAAY,EAAGZ,SAAU,GAAIQ,MAAO,SAAnD,cAKF,kBAAC5B,EAAA,EAAD,CAAMC,MAAO,CAAEO,eAAgB,SAAUD,WAAY,WACnD,kBAACO,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,KAAzB,uBACA,kBAACN,EAAA,EAAD,CAAMb,MAAO,CAAE2B,MAAO,UAAtB,mDAIF,kBAAC5B,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPF,OAAQ,MAERiB,eAAgB,SAChBD,WAAY,SACZ0B,UAAW,GACXqO,kBAAmB,EACnBC,kBAAmB,YAGrB,kBAACzP,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,KAFd,4BAOA,kBAACD,EAAA,EAAD,CACElB,MAAO,CACLR,MAAOD,EAAW,IAAM,MAAQ,IAChCD,OAAQ,GACR2D,YAAa,EACbC,YAAa,UACb1C,QAAS,GACTwB,UAAW,GACXf,aAAc,EACdG,aAAc,QAEhBwL,aAAc,SAAC9D,GAAD,OAAOwM,GAAYxM,IACjCzH,YAAY,oBA8Bd,kBAACtB,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPwB,gBAAiB,SACjBZ,cAAe,MACfE,WAAY,SACZC,eAAgB,iBAGlB,kBAACM,EAAA,EAAD,KAAgB,KAATkU,EAAsBA,EAAO,WACpC,kBAAClU,EAAA,EAAD,KAAoB,KAAboQ,EAA0BA,EAAW,WAC5C,kBAACpQ,EAAA,EAAD,KAAkB,KAAXgN,EAAwBA,EAAS,WACxC,kBAAChN,EAAA,EAAD,KAAmB,KAAZqU,EAAyBA,EAAU,aAG9C,kBAACnV,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPgB,QAAS,GACTwB,UAAW,KAGb,kBAACjC,EAAA,EAAD,CAAMC,MAAO,CAAEM,WAAY,SAAUC,eAAgB,WACnD,kBAACM,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,KAFd,0BASF,oCACE,0BAAMkQ,SAAUsE,IACd,kBAAC5V,EAAA,EAAD,CACEC,MAAO,CACLiD,YAAa,EAEbC,YAAa,UACb1D,MAAO,OACP4D,aAAc,EACdnC,aAAc,EACde,UAAW,IAGb,yBAAKuP,UAAU,YACZ5B,GAAY7L,KAAI,SAAC0N,EAAY3B,GAAb,OACf,kBAAC,WAAD,CAAU/F,IAAQ0H,EAAL,IAAmB3B,GAC9B,kBAAC9P,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,SACfE,WAAY,aACZC,eAAgB,WAGlB,kBAACR,EAAA,EAAD,CACEC,MAAO,CACLR,MAAO,OACPY,cAAe,MACfE,WAAY,SACZC,eAAgB,kBAGlB,kBAACR,EAAA,EAAD,CAAMC,MAAO,CAAER,MAAO,MAAOoM,YAAa,KACxC,yBAAK2F,UAAU,uBAGb,2BACEvR,MAAO,CACLR,MAAO,MACPF,OAAQ,GACR6D,OAAQ,EACRF,YAAa,EACb7B,aAAc,OACdH,aAAc,GAEhBI,YAAY,mBACZqP,KAAK,OACLa,UAAU,eACVxH,GAAG,OACHtI,KAAK,OACLwO,MAAOuB,EAAW/P,KAClB8J,SAAU,SAACuE,GACTF,GAAkBC,EAAOC,GACzBnK,GAAQmK,QAsBhB,kBAACtO,EAAA,EAAD,CACExB,MAAO,CAAE4L,YAAa,IACtBnK,KAAK,SACLC,KAAM,GACNC,MAAM,UACNiB,QAAS,YAhTR,SAACiN,GAC1B,IAAME,EAAM,IAAOJ,IACnBI,EAAOzN,OAAOuN,EAAO,GACrBN,GAAeQ,GA8SW0B,CAAmB5B,OAIzB,kBAAC9P,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfZ,MAAO,MACPc,WAAY,SACZC,eAAgB,kBAGlB,yBAAKgR,UAAU,uBAEb,2BACEvR,MAAO,CACLR,MAAO,MACPF,OAAQ,GACR6D,OAAQ,EACR/B,aAAc,QAEhBC,YAAY,WACZqP,KAAK,OACLa,UAAU,eACVxH,GAAG,iBACHtI,KAAK,iBACLwO,MAAOuB,EAAW9B,eAClBnE,SAAU,SAACuE,GAAD,OACRF,GAAkBC,EAAOC,OAI/B,yBAAKyB,UAAU,uBAGb,2BACEvR,MAAO,CACLR,MAAO,MACPF,OAAQ,GACRyC,YAAa,GACbX,aAAc,QAEhBC,YAAY,eACZqP,KAAK,OACLa,UAAU,eACVxH,GAAG,iBACHtI,KAAK,iBACLwO,MAAOuB,EAAW/B,eAClBlE,SAAU,SAACuE,GAAD,OACRF,GAAkBC,EAAOC,eAU3C,kBAAC/P,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfZ,MAAO,OACPc,WAAY,SACZC,eAAgB,WA2BlB,kBAACyC,EAAA,EAAD,CACEhD,MAAO,CACLR,MAAO,OACPF,OAAQ,GACRgB,WAAY,SACZU,gBAAiB,OACjBiC,YAAa,EACbhC,aAAc,EACde,UAAW,GACXkB,YAAa,UACb3C,eAAgB,UAElBqC,QAAS,YA9ZD,WACtB,IAAMmN,EAAM,IAAOJ,IACnBI,EAAO2B,KAAK,CAAEjQ,KAAM,GAAIgO,eAAgB,GAAIC,eAAgB,KAC5DH,GAAeQ,GA4ZC4B,KAGF,kBAAC9Q,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVX,QAAS,EACTmB,MAAO,UACPG,WAAY,QALhB,gBAYJ,yBAAKyP,UAAU,iBACb,kBAACvO,EAAA,EAAD,CACEhD,MAAO,CACLR,MAAO,OACPF,OAAQ,GACRgB,WAAY,SACZU,gBAAiB,UACjBiC,YAAa,EACbhC,aAAc,EACde,UAAW,GACXkB,YAAa,UACb3C,eAAgB,UAElBqC,QAAS+S,IAET,kBAAC9U,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVX,QAAS,EACTmB,MAAO,OACPG,WAAY,QALhB,YAYJ,6BACA,6BAAMsF,KAAKC,UAAUsI,GAAa,KAAM,QAQhD,kBAACkF,GAAA,UAAD,CAAW7U,MAAM,YAOjBC,GAAS2B,IAAWC,OAAO,CAC/BmL,UAAW,CACT5B,KAAM,EACNpK,gBAAiB,UACjBV,WAAY,SACZC,eAAgB,Y,oBCjbLqV,GA1HF,SAAC,GAAmB,EAAjBtR,WAAkB,IAAD,EACOC,mBAAS,CAC7C,CAAE9C,KAAM,GAAIgO,eAAgB,GAAIC,eAAgB,KAFnB,wBAKPnL,mBAAS,KALF,WAKxBmB,EALwB,KAKlBC,EALkB,OAMCpB,mBAAS,IANV,WAMxB+G,EANwB,KAMduK,EANc,OAOLtR,mBAAS,IAPJ,WAOxB0F,EAPwB,KAOjB6L,EAPiB,KAuC/BhP,qBAAU,WACRC,MAAM,iDAAkD,CACtDC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBK,SAAUhC,MAGXmC,MAAK,SAACS,GAAD,OAASA,EAAIP,UAClBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,EAAKA,KAAKG,MAAO2N,EAAS9N,EAAKA,KAAKG,WAEnD,CAACzC,IAqCJ,OACE,kBAAC3F,EAAA,EAAD,CACEC,MAAO,CACLoL,KAAM,EACNpK,gBAAiB,QACjBV,WAAY,SACZC,eAAgB,WAGlB,kBAACM,EAAA,EAAD,KAAmB,MAAZyK,GAAgC,IAAZA,EAAiB,OAASA,GACrD,kBAAC,aAAD,CACEtL,MAAO,CAAEiD,YAAa,EAAGzD,MAAO,IAAKF,OAAQ,IAC7CsN,aAAc,SAAC9D,GAAD,OAAOnD,EAAQmD,MAErB,KAATpD,EACC,kBAACgE,EAAA,EAAD,CACEC,8BAA8B,EAC9B3B,KAAMiC,EACNL,WAjDY,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAClB,kBAAC7G,EAAA,EAAD,CACEhD,MAAO,CACLR,MAAOD,EAAW,IAAM,MAAQ,MAChCD,OAAQ,GACRc,cAAe,MACfE,WAAY,SACZC,eAAgB,aAChB4C,OAAQ,EACR3C,QAAS,EACTyC,YAAa,EACbC,YAAa,OACbjC,aAAc,GACdD,gBAAiB,OACjBX,UAAW,UAEbuC,QAAS,kBApBOmT,EAoBUlM,EAAKpI,UAnBjCoU,EAAYE,GADK,IAACA,IAsBhB,kBAACtV,EAAA,EAAD,CACEC,OAAQ,CAAEC,IAAKkJ,EAAKkD,WACpB/M,MAAO,CACLR,MAAO,GACPF,OAAQ,GACR2D,YAAa,EACbC,YAAa,QACbjC,aAAc,MAGlB,kBAACJ,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,GAAIY,WAAY,IAAM8H,EAAKpI,QAsBhDyI,mBAAoB,kBAClB,kBAACrJ,EAAA,EAAD,CAAMb,MAAO,CAAEmB,SAAU,KAAzB,4BAEFgJ,sBAAuB,CACrB3K,MAAO,UAGT,OCvHJwW,GAAQC,cACRC,GAAMC,cACGC,eAEf,SAASC,GAAT,GAAuD,IAAnCpQ,EAAkC,EAAlCA,MAAOqQ,EAA2B,EAA3BA,YAAahS,EAAc,EAAdA,WAGtC,OAAqC,IAFdgS,EAAYrQ,EAAMsQ,OAAOtQ,EAAM4J,OAAO/F,KAAK0M,QAE/CC,cACV,KAIP,kBAACC,EAAA,EAAD,KACE,kBAAC3W,EAAA,EAAD,CAAMC,MAAO,CAAEI,cAAe,QAC3B6F,EAAMsQ,OAAOzS,KAAI,SAAC6S,EAAO9G,GAAW,IAC3B2G,EAAYF,EAAYK,EAAM7M,KAA9B0M,QACFI,OACoBC,IAAxBL,EAAQM,YACJN,EAAQM,iBACUD,IAAlBL,EAAQ1J,MACR0J,EAAQ1J,MACR6J,EAAMlV,KAENsV,EAAY9Q,EAAM4J,QAAUA,EA0DlC,OACE,kBAAC7M,EAAA,EAAD,CACEgU,kBAAkB,SAClBC,mBAAoBF,EAAY,CAAEzL,UAAU,GAAS,GACrD4L,mBAAoBV,EAAQW,yBAC5BC,OAAQZ,EAAQa,aAChBzU,QA9DY,WACd,IAAMkN,EAAQxL,EAAWgT,KAAK,CAC5B5G,KAAM,WACNV,OAAQ2G,EAAM7M,IACdyN,mBAAmB,IAGhBR,GAAcjH,EAAM0H,kBACvBlT,EAAW8L,SAASuG,EAAMlV,OAuD1BgW,YAnDgB,WAClBnT,EAAWgT,KAAK,CACd5G,KAAM,eACNV,OAAQ2G,EAAM7M,OAiDd9J,MAAO,CACLoL,KAAM,EACN7K,eAAgB,SAChBD,WAAY,SACZhB,OAAQ,GACRkB,QAAS,EACTQ,gBAAiB,SAOnB,kBAACjB,EAAA,EAAD,KACY,GAAT8P,EACC,kBAAC9P,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfE,WAAY,SACZC,eAAgB,SAChB0C,YAAa,EACbjC,gBAAiB+V,EAAY,UAAY,cACzC7T,YAAa6T,EAAY,UAAY,cACrCvX,MAAO,OACPyB,aAAc,GACdT,QAAS,IAGX,kBAACuL,EAAA,EAAD,CACEtK,KAAK,OACLC,KAAM,GACNC,MAAOoV,EAAY,UAAY,SAEhCA,EACC,kBAAClW,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVY,WAAY,GACZJ,MAAO,YAGRiV,GAED,MAGN,kBAAC7W,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CACEC,MAAO,CACLI,cAAe,MACfE,WAAY,SACZC,eAAgB,SAChB0C,YAAa,EACbjC,gBAAiB+V,EAAY,UAAY,cACzC7T,YAAa6T,EAAY,UAAY,cACrCvX,MAAO,OACPyB,aAAc,GACdT,QAAS,IAGX,kBAACuL,EAAA,EAAD,CACEtK,KAAK,OACLC,KAAM,GACNC,MAAOoV,EAAY,UAAY,SAEhCA,EACC,kBAAClW,EAAA,EAAD,CACEb,MAAO,CACLmB,SAAU,GACVY,WAAY,GACZJ,MAAO,YAGRiV,GAED,cAa1B,SAASc,KACP,OACE,kBAACxB,GAAIyB,UAAL,CAAeC,OAAQvB,IACrB,kBAACH,GAAI2B,OAAL,CAAYpW,KAAK,OAAOqW,UAAWzT,IACnC,kBAAC6R,GAAI2B,OAAL,CAAYpW,KAAK,UAAUqW,UAAWpK,KA2F7BqK,IA7EH,WAAO,IAAD,EACQxT,mBAAS,MADjB,qBAEhB,OACE,kBAACyT,EAAA,EAAD,KACE,kBAAChC,GAAM2B,UAAP,CACEM,cAAe,CACbC,YAAa,CACXlX,gBAAiB,WAEnBmX,gBAAiB,OACjBC,iBAAkB,CAChBtW,WAAY,QAEduW,aAAa,IASf,kBAACrC,GAAM6B,OAAP,CACEpW,KAAK,UACLqW,UAAWlG,GACX4E,QAAS,CACP1J,MAAO,eAGX,kBAACkJ,GAAM6B,OAAP,CACEpW,KAAK,QACLqW,UAAWtE,GACXgD,QAAS,CACP1J,MAAO,eAGX,kBAACkJ,GAAM6B,OAAP,CACEpW,KAAK,OACLqW,UAAWlC,GACXY,QAAS,CACP1J,MAAO,eAGX,kBAACkJ,GAAM6B,OAAP,CACEpW,KAAK,SACLqW,UAAWhD,GACX0B,QAAS,CACP1J,MAAO,YAQX,kBAACkJ,GAAM6B,OAAP,CAAcpW,KAAK,SAASqW,UAAWJ,QAwBhC9V,IAAWC,OAAO,CAC/BmL,UAAW,CACT5B,KAAM,EACNpK,gBAAiB,OACjBV,WAAY,SACZC,eAAgB,a,iECjTpBtB,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,uC","file":"static/js/app.7b208ae5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/newIcon4.57719745.png\";","import { Dimensions } from 'react-native';\nexport const winHeight = Dimensions.get(\"window\").height;\n\nexport const winWidth = Dimensions.get(\"window\").width;\n","import React from \"react\";\nimport {\n  Button,\n  TextInput,\n  Dimensions,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n} from \"react-native\";\n\nimport { winWidth } from \"../utils/window\";\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  FontAwesome5,\n  FontAwesome,\n  AntDesign,\n} from \"@expo/vector-icons\";\n\nconst windowHeight = Dimensions.get(\"screen\").height;\nconst windowWidth = Dimensions.get(\"screen\").width;\n\nexport interface HeaderProps {\n  onTap(): any;\n  onLogoTap(): any;\n  filterShown?: boolean;\n  onFilter(): any;\n  // catTap(): any;\n}\n\nconst Header = (props: HeaderProps) => {\n  const { onTap, onLogoTap, filterShown, onFilter } = props;\n  return (\n    <View style={styles.header}>\n      <View\n        style={{\n          width: \"100%\",\n          top: 0,\n          height: \"100%\",\n          flexDirection: \"row\",\n          alignSelf: \"flex-start\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          padding: winWidth > 767 ? 5 : 1,\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"flex-start\",\n            justifyContent: \"flex-start\",\n            top: winWidth > 767 ? 5 : 10,\n          }}\n          // onFocus={onLogoTap}\n        >\n          <Image\n            source={{ uri: require(\"../../assets/newicon4.png\") }}\n            style={{ width: 35, height: 35, top: winWidth > 767 ? -2 : -5 }}\n          />\n          <Text style={styles.headerText}>Krisearch</Text>\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: winWidth > 767 ? \"flex-start\" : \"flex-end\",\n            width: \"69%\",\n            justifyContent: winWidth > 767 ? \"flex-start\" : \"flex-end\",\n            left: -15,\n          }}\n        >\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              backgroundColor: \"#fff\",\n              width: winWidth > 767 ? \"55%\" : \"65%\",\n              height: 40,\n              padding: 5,\n              justifyContent: \"space-between\",\n              borderRadius: 10,\n              top: winWidth > 767 ? null : 3,\n            }}\n          >\n            <TextInput\n              style={{\n                width: winWidth > 767 ? \"90%\" : \"95%\",\n                height: winWidth > 767 ? 40 : 35,\n                fontSize: winWidth > 767 ? 16 : 16,\n                backgroundColor: \"#fff\",\n                outlineColor: \"#fff\",\n                borderRadius: 10,\n                padding: 5,\n              }}\n              placeholder=\"Search for Crops\"\n              placeholderTextColor=\"\t#808080\"\n              onFocus={onTap}\n            />\n            <AntDesign name=\"search1\" size={20} color=\"#808080\" />\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Header;\n\nconst styles = StyleSheet.create({\n  header: {\n    width: \"100%\",\n    height: 70,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"#346beb\",\n    padding: 5,\n  },\n  headerText: {\n    fontSize: winWidth > 767 ? 25 : 20,\n    color: \"#fff\",\n    fontWeight: \"600\",\n    marginLeft: 2,\n    alignSelf: \"flex-start\",\n    marginTop: winWidth < 767 ? 0 : 0,\n  },\n});\n","const hideNumber = (phone : number)=>{\n    var a=[];\n    var b;\n    var c;\n    var newString=[];\n    let i=0;\n\n    a = phone.toString().split('');\n   \n    a.splice(1,0,\"X\");\n    a.splice(3,2,\"X\");\n    a.splice(6,5,\"X\");\n    a.splice(1,0,\"X\");\n   \n    \n    return a;\n\n    \n\n\n}\n\nexport default hideNumber","import { Entypo, MaterialIcons, SimpleLineIcons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Dimensions,\n  Image,\n} from \"react-native\";\nimport getSmallString from \"../utils/getSmallString\";\nimport hideNumber from \"../utils/hideNumber\";\n\nexport interface CardProps {\n  name: string;\n  avatar?: string;\n  crop?: string;\n  phone?: number;\n  address?: string;\n  onPress: any;\n  cropAvatar?: string;\n  isCrop?: boolean;\n}\n\nexport default function Card(props: CardProps) {\n  const {\n    name,\n    avatar,\n    crop,\n    phone,\n    address,\n    onPress,\n    cropAvatar,\n    isCrop,\n  } = props;\n\n  const windowWidth = Dimensions.get(\"window\").width;\n  const cardWidth = windowWidth / 2 - 30;\n\n  const toTitleCase = (phrase: string) => {\n    // if(str.length>20){\n    //     str =str.substring(0,19)+\"...\";\n    //     return str;\n    // }\n    // else{\n    //     return str\n    // }\n\n    if (phrase.length > 15) {\n      phrase = phrase.substring(0, 14) + \"...\";\n    }\n    return phrase\n      .toLowerCase()\n      .split(\" \")\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(\" \");\n  };\n\n  return (\n    <TouchableOpacity onPress={() => onPress()}>\n      <View\n        style={\n          windowWidth > 767\n            ? {\n                width: 190,\n                height: 190,\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderColor: \"#fff\",\n                borderRadius: 10,\n                alignItems: \"center\",\n                margin: 5,\n                marginBottom: 5,\n                shadowColor: \"#346beb\",\n                shadowOffset: {\n                  width: 1,\n                  height: 3,\n                },\n                shadowOpacity: 0.2,\n                shadowRadius: 2.22,\n\n                elevation: 5,\n              }\n            : {\n                width: windowWidth * 0.45,\n                height: 185,\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderColor: \"#fff\",\n                borderRadius: 10,\n                alignItems: \"center\",\n                margin: 6,\n\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: -2,\n                  height: 4,\n                },\n                shadowOpacity: 0.15,\n                shadowRadius: 2.22,\n\n                elevation: 3,\n              }\n        }\n      >\n        <Image\n          source={{ uri: avatar }}\n          style={\n            !isCrop\n              ? {\n                  width: 105,\n                  height: 105,\n                  borderWidth: 1,\n                  borderColor: \"#fff\",\n                  borderRadius: 105,\n                }\n              : {\n                  width: 105,\n                  height: 105,\n                  resizeMode: \"contain\",\n                  borderWidth: 1,\n                  borderColor: \"#fff\",\n                }\n          }\n        />\n        <Text style={{ fontWeight: \"500\", fontSize: 16, marginTop: 10 }}>\n          {toTitleCase(name)}\n        </Text>\n\n        {!isCrop ? (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-evenly\",\n              alignItems: \"center\",\n\n              padding: 5,\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Text> {crop}</Text>\n            </View>\n            <Entypo name=\"dot-single\" size={15} style={{ marginTop: 5 }} />\n            <View>\n              <Text>{address}</Text>\n            </View>\n          </View>\n        ) : null}\n\n        {!isCrop ? (\n          <View style={{ marginBottom: 15 }}>\n            <Text>{phone ? hideNumber(phone) : \"Not available\"}</Text>\n          </View>\n        ) : null}\n      </View>\n    </TouchableOpacity>\n  );\n}\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  Dimensions,\n  ScrollView,\n  StyleSheet,\n  Text,\n  Image,\n  TouchableOpacity,\n  View,\n  ActivityIndicator,\n  FlatList,\n  Platform,\n  TextInput,\n} from \"react-native\";\nimport Header, { HeaderProps } from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport Farmers from \"../data/farmers.json\";\nimport Crops from \"../data/items.json\";\nimport { Modalize } from \"react-native-modalize\";\nimport Card from \"../components/Card\";\n\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  AntDesign,\n  FontAwesome5,\n  FontAwesome,\n  MaterialIcons,\n} from \"@expo/vector-icons\";\nimport hideNumber from \"../utils/hideNumber\";\nimport getSmallString from \"../utils/getSmallString\";\nimport States from \"../data/states.json\";\nimport Data from \"../data/items.json\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { render } from \"react-dom\";\nimport lottie from \"lottie-web\";\nimport { BlurView } from \"expo-blur\";\nimport { add } from \"date-fns\";\nimport * as Location from \"expo-location\";\nimport firebase from \"../firebase/firebase\";\n\nconst Home = ({ navigation }) => {\n  const [location, setLocation] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const cropper = \"\";\n  const [blur, setblur] = useState(false);\n  const [placer, setplacer] = useState(false);\n  const [crop, setcrop] = useState([]);\n  const [parent, setparent] = useState(false);\n  const [farmers, setfarmers] = useState([]);\n  const [dispfarmers, setdispfarmers] = useState([]);\n  const [modalName, setmodalName] = useState(\"\");\n  const [firstScroll, setfirstScroll] = useState(0);\n  const [selectedState, setselectedState] = useState(\"\");\n  const [cats, setcats] = useState(false);\n  const [val, setval] = useState(\"\");\n  const [tempVal, settempVal] = useState(\"\");\n  const [addr, setaddr] = useState(\"\");\n  const [tempAddr, settempAddr] = useState(\"\");\n  const [parenter, setparenter] = useState(\"\");\n  const [term, setterm] = useState(\"\");\n  const [filteractive, setfilteractive] = useState(false);\n  const [addrToggle, setaddrToggle] = useState(false);\n  const [cropToggle, setcropToggle] = useState(false);\n  const [merge, setmerge] = useState(false);\n  const [dater, setdater] = useState(false);\n  const [tempDater, settempDater] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [tempStartDate, settempStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [tempEndDate, settempEndDate] = useState(new Date());\n  const [show, setshow] = useState(\"\");\n  const [applied, setapplied] = useState(false);\n  const [focused, setfocused] = useState([]);\n  const [cropFinal, setcropFinal] = useState(\"\");\n  const [filter, setfilter] = useState([\n    {\n      gender: \"\",\n      state: \"\",\n      harvestDate: \"\",\n    },\n  ]);\n\n  const [tempGen, settempGen] = useState(\"\");\n  const [tempState, settempState] = useState(\"\");\n  const [tempDate, settempDate] = useState(\"\");\n  const [sendVal, setsendVal] = useState(0);\n  const [filteredBlur, setfilteredBlur] = useState([]);\n  const [selectedCrop, setselectedCrop] = useState(false);\n  const [mapCroptoFarmer, setmapCroptoFarmer] = useState([]);\n\n  const tempValues = () => {\n    console.log(tempGen, tempState, tempDate);\n  };\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/farmers\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        farmerName: true,\n        farmingArea: true,\n        gender: tempGen,\n        harvestDate: tempEndDate.toLocaleDateString(),\n        orderBy: \"\",\n        cropName: cropFinal,\n        pageNo: 0,\n        quantity: true,\n        state: tempState,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data.data.list), setfarmers(data.data.list);\n      })\n      .catch((error) => console.error(error));\n  }, [sendVal, firstScroll]);\n\n  console.log(farmers);\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        cropName: show,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => setfilteredBlur(data.data.list));\n  }, [show]);\n\n  const renderMatch = ({ item }) => (\n    <TouchableOpacity\n      style={{\n        width: winWidth > 767 ? \"50%\" : \"97%\",\n        height: 50,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        margin: 2,\n        padding: 5,\n        borderWidth: 1,\n        borderColor: \"#fff\",\n        borderRadius: 10,\n        backgroundColor: \"#fff\",\n        alignSelf: \"center\",\n      }}\n      onPress={() => {\n        setcropFinal(item.name), setsendVal(sendVal + 1);\n      }}\n    >\n      <Image\n        source={{ uri: item.cropImage }}\n        style={{\n          width: 45,\n          height: 45,\n          borderWidth: 1,\n          borderColor: \"green\",\n          borderRadius: 45,\n        }}\n      />\n      <Text style={{ fontSize: 20, marginLeft: 5 }}>{item.name}</Text>\n    </TouchableOpacity>\n  );\n\n  const showDetails = (id) => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/farmer/details/\" + id, {\n      method: \"get\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: null,\n    })\n      .then((res) => res.json())\n      .then((data) => setfocused(data.data.list))\n      .catch((err) => console.log(err));\n\n    OpenProfile();\n  };\n\n  console.log(focused);\n\n  const cropSearch = (item) => {\n    alert(item);\n    setselectedCrop(true);\n    {\n      farmers.map((i) => {\n        if (i.cropName == item) {\n          console.log(i.farmerName);\n        } else {\n          console.log(\"NO MATCH\");\n        }\n      });\n    }\n  };\n\n  console.log(mapCroptoFarmer);\n\n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestPermissionsAsync();\n      if (status !== \"granted\") {\n        setErrorMsg(\"Permission to access location was denied\");\n        return;\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n      setLocation(location);\n    })();\n  }, []);\n\n  let text = \"Waiting..\";\n  if (errorMsg) {\n    text = \"errorMsg\";\n  } else if (location != null) {\n    console.log(location);\n    Location.setGoogleApiKey(\"AIzaSyBM1KjPdMGHYcIiXTbDl4v_GAAjbOO6OPA\");\n    Location.reverseGeocodeAsync({\n      latitude: location.coords.latitude,\n      longitude: location.coords.longitude,\n    })\n      .then((e) => {\n        console.log(e);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  text = JSON.stringify(location);\n  console.log(text);\n\n  const handleLoad = () => {\n    setfirstScroll(firstScroll + 1);\n  };\n\n  const modalizeFilterRef = useRef<Modalize>(null);\n  const onOpenfilter = () => {\n    modalizeFilterRef.current?.open();\n  };\n\n  const onCloseFilter = () => {\n    modalizeFilterRef.current?.close();\n  };\n\n  const modalizeRef = useRef<Modalize>(null);\n  const OpenProfile = () => {\n    modalizeRef.current?.open();\n  };\n\n  const CloseProfile = () => {\n    modalizeRef.current?.close();\n  };\n\n  const genderData = [\n    {\n      key: \"m\",\n      text: \"Men\",\n    },\n    {\n      key: \"f\",\n      text: \"Women\",\n    },\n  ];\n\n  const renderItems = ({ item }) => (\n    <Card\n      key={item.id}\n      name={item.farmerName}\n      avatar={item.farmerImage}\n      phone={item.phone}\n      address={item.state}\n      crop={\n        item.crops[0].cropName +\n        (item.crops.length - 1 == 0 ? \"\" : \" + \" + (item.crops.length - 1))\n      }\n      onPress={() => {\n        // console.log(item.farmerName),\n        // setfarmer(item.id),\n        //   // console.log(item.crops.map((i) => i.quantity));\n        //   onOpen(),\n        //   setmodalName(item.farmerName);\n        console.log(\"Pressed\");\n        showDetails(item.id);\n      }}\n    />\n  );\n\n  return (\n    <View\n      style={{\n        width: \"100%\",\n        height: winHeight,\n        backgroundColor: \"#deebff\",\n      }}\n    >\n      <Header\n        onTap={() => {\n          setblur(true), setshow(\"\");\n        }}\n        onLogoTap={() => {\n          console.log(\"Logo\");\n        }}\n        onFilter={() => console.log(\"Filter\")}\n      />\n      <View\n        style={{\n          width: \"100%\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          flexDirection: \"row\",\n          backgroundColor: \"#deebff\",\n          padding: 5,\n        }}\n      >\n        <TouchableOpacity\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: \"#346beb\",\n            height: 30,\n            width: 80,\n            padding: 3,\n            borderRadius: 5,\n          }}\n          onPress={() => onOpenfilter()}\n        >\n          <AntDesign name=\"filter\" size={15} color=\"#fff\" />\n          <Text\n            style={{\n              fontSize: 15,\n              fontWeight: \"500\",\n              marginLeft: 2,\n              color: \"#fff\",\n            }}\n          >\n            {\" \"}\n            Filter\n          </Text>\n        </TouchableOpacity>\n      </View>\n      {farmers !== null ? (\n        <FlatList\n          showsVerticalScrollIndicator={false}\n          data={farmers}\n          renderItem={renderItems}\n          ListEmptyComponent={() => (\n            <Text style={{ fontSize: 30 }}> Oops ! Didnt find that</Text>\n          )}\n          contentContainerStyle={{\n            flexDirection: \"row\",\n            width: \"100%\",\n            flexWrap: \"wrap\",\n            alignItems: \"flex-start\",\n            justifyContent: \"center\",\n            backgroundColor: \"#deebff\",\n            padding: winWidth > 767 ? 10 : 2,\n          }}\n          onEndReached={() => handleLoad()}\n        />\n      ) : null}\n      <View style={{ width: \"100%\", height: 40 }} />\n      <Modalize\n        ref={modalizeFilterRef}\n        modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.88}\n        modalStyle={winWidth > 767 ? { width: 400, alignSelf: \"center\" } : null}\n        threshold={100}\n        closeOnOverlayTap={true}\n        mod\n      >\n        <View\n          style={{\n            width: \"100%\",\n            flexDirection: \"row\",\n            alignItems: \"flex-start\",\n            justifyContent: \"space-between\",\n            padding: 5,\n            top: 5,\n          }}\n        >\n          {/* <TouchableOpacity onPress={() => onCloseFilter()}>\n                Close Filter\n              </TouchableOpacity> */}\n          <Text style={{ fontSize: 16, marginLeft: 7, fontWeight: \"600\" }}>\n            Filter Results\n          </Text>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n\n              width: \"50%\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <TouchableOpacity\n              style={{\n                width: 60,\n                height: 30,\n                backgroundColor: \"#fff\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n\n                borderRadius: 10,\n                borderColor: \"#3A48ED\",\n                borderWidth: 2,\n              }}\n              onPress={() => {\n                settempGen(\"\");\n                settempState(\"\");\n                settempDate(\"\");\n                setsendVal(0);\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 16,\n                  color: \"#3A48ED\",\n                }}\n              >\n                Reset\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={{\n                width: 60,\n                height: 30,\n                backgroundColor: \"#3ECF8E\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n\n                borderRadius: 10,\n                borderColor: \"#3ECF8E\",\n                borderWidth: 2,\n              }}\n              onPress={() => {\n                tempValues();\n                setsendVal(sendVal + 1);\n                onCloseFilter();\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 16,\n                  color: \"#fff\",\n                }}\n              >\n                Apply\n              </Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={() => {\n                onCloseFilter();\n              }}\n            >\n              <View\n                style={{\n                  width: 25,\n                  height: 25,\n                  borderWidth: 2,\n                  borderColor: \"#A1C7FF\",\n                  alignItems: \"center\",\n                  alignSelf: \"flex-end\",\n                  justifyContent: \"center\",\n                  flexDirection: \"row\",\n                  backgroundColor: \"#A1C7FF\",\n                  borderRadius: 25,\n                }}\n              >\n                <AntDesign name=\"close\" size={20} color=\"#3A48ED\" />\n              </View>\n            </TouchableOpacity>\n          </View>\n        </View>\n        <View\n          style={{\n            width: \"95%\",\n            alignSelf: \"center\",\n            height: 1,\n            backgroundColor: \"#C0C0C0\",\n            marginTop: 10,\n            alignItems: \"center\",\n          }}\n        ></View>\n        <Text\n          style={{\n            color: \"#6F6F6F\",\n            fontSize: 15,\n            marginTop: 3,\n            marginLeft: 7,\n            padding: 5,\n          }}\n        >\n          By Gender\n        </Text>\n        <View\n          style={{\n            width: \"32%\",\n            marginTop: 10,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            padding: 5,\n            marginLeft: 7,\n            alignSelf: \"flex-start\",\n          }}\n        >\n          {genderData.map((item) => {\n            return (\n              <View key={item.key} style={styles.buttonContainer}>\n                <TouchableOpacity\n                  style={styles.circle}\n                  onPress={() => {\n                    settempGen(item.key);\n                  }}\n                >\n                  {tempGen === item.key && (\n                    <View style={styles.checkedCircle} />\n                  )}\n                </TouchableOpacity>\n                <Text style={{ fontSize: 16, marginLeft: 5 }}>{item.text}</Text>\n              </View>\n            );\n          })}\n        </View>\n        <View\n          style={{\n            width: \"100%\",\n            marginTop: 10,\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            justifyContent: \"space-evenly\",\n            padding: 5,\n            alignSelf: \"flex-start\",\n          }}\n        >\n          <View\n            style={{\n              width: \"95%\",\n              alignSelf: \"center\",\n              height: 1,\n              backgroundColor: \"#C0C0C0\",\n              marginTop: 10,\n              alignItems: \"center\",\n            }}\n          ></View>\n          <Text\n            style={{\n              color: \"#6F6F6F\",\n              fontSize: 15,\n              marginTop: 10,\n              marginLeft: 0,\n              marginBottom: 5,\n              padding: 5,\n            }}\n          >\n            By States\n          </Text>\n\n          <TouchableOpacity\n            onPress={() => setaddrToggle(!addrToggle)}\n            style={{\n              flexDirection: \"row\",\n              backgroundColor: \"#d6d9ff\",\n              borderWidth: 2,\n              borderColor: \"#7b42ff\",\n              borderRadius: 5,\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              padding: 5,\n              minWidth: \"30%\",\n\n              marginLeft: 7,\n            }}\n          >\n            <Text style={{ fontSize: 15 }}>\n              {tempAddr ? tempAddr : \"All States\"}\n            </Text>\n            <AntDesign name=\"down\" size={12} />\n          </TouchableOpacity>\n          {addrToggle ? (\n            <View style={{ marginTop: 10 }}>\n              {States.map((item) => {\n                return (\n                  <View key={item.code} style={styles.buttonnewContainer}>\n                    <TouchableOpacity\n                      style={styles.circle}\n                      onPress={() => {\n                        settempState(item.name);\n                        // settempAddr(item.name);\n                        // // setaddr(item.name);\n                        // setaddrToggle(false);\n                      }}\n                    >\n                      {tempState === item.name && (\n                        <View style={styles.checkedCircle} />\n                      )}\n                    </TouchableOpacity>\n                    <Text style={{ fontSize: 16, marginLeft: 5 }}>\n                      {item.name}\n                    </Text>\n                  </View>\n                );\n              })}\n            </View>\n          ) : null}\n        </View>\n        <View\n          style={{\n            width: \"100%\",\n            marginTop: 10,\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            justifyContent: \"space-evenly\",\n            padding: 5,\n            alignSelf: \"flex-start\",\n          }}\n        >\n          <View\n            style={{\n              width: \"95%\",\n              alignSelf: \"center\",\n              height: 1,\n              backgroundColor: \"#C0C0C0\",\n              marginTop: 10,\n              alignItems: \"center\",\n            }}\n          ></View>\n          <View>\n            <Text\n              style={{\n                color: \"#6F6F6F\",\n                fontSize: 15,\n                marginTop: 10,\n                marginLeft: 0,\n                marginBottom: 5,\n                zIndex: 1000,\n                padding: 5,\n              }}\n            >\n              By Harvest Date\n            </Text>\n            <View\n              style={{\n                flex: 1,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                width: \"100%\",\n                height: 150,\n                padding: 5,\n              }}\n            >\n              <View>\n                <Text style={{ marginBottom: 10 }}>From</Text>\n                <DatePicker\n                  dateFormat=\"dd/MM/yyyy\"\n                  selected={\n                    tempStartDate < new Date() ? new Date() : tempStartDate\n                  }\n                  onChange={(date) => {\n                    date < new Date().toLocaleDateString()\n                      ? alert(\"Start Date cannot be less than today\")\n                      : settempStartDate(date);\n                  }}\n                  customInput={\n                    <TextInput\n                      style={{\n                        backgroundColor: \"#d6d9ff\",\n                        borderRadius: 5,\n                        borderColor: \"#7b42ff\",\n                        height: 35,\n                        borderWidth: 2,\n                        padding: 5,\n                        fontSize: 15,\n                        width: 100,\n                      }}\n                    />\n                  }\n                />\n              </View>\n              <View style={{ marginLeft: 20 }}>\n                <Text style={{ marginBottom: 10 }}>To</Text>\n                <DatePicker\n                  dateFormat=\"dd/MM/yyyy\"\n                  popperPlacement=\"bottom-right\"\n                  selected={tempEndDate}\n                  onChange={(date) => {\n                    settempEndDate(date);\n                    // date <= tempStartDate\n                    //   ? alert(\n                    //       \"End Date cannot be less than or equal to Start Date\"\n                    //     )\n                    //   : settempEndDate(date);\n                    // settempDater(true);\n                  }}\n                  customInput={\n                    <TextInput\n                      style={{\n                        backgroundColor: \"#d6d9ff\",\n                        borderRadius: 5,\n                        borderColor: \"#7b42ff\",\n                        height: 35,\n                        borderWidth: 2,\n                        padding: 5,\n                        fontSize: 15,\n                        width: 100,\n                      }}\n                    />\n                  }\n                />\n              </View>\n            </View>\n          </View>\n          <View\n            style={{\n              width: \"95%\",\n              alignSelf: \"center\",\n              height: 1,\n\n              marginTop: 100,\n              alignItems: \"center\",\n            }}\n          ></View>\n        </View>\n        <View\n          style={{\n            width: \"100%\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-evenly\",\n            alignSelf: \"flex-end\",\n\n            marginTop: \"30%\",\n          }}\n        ></View>\n      </Modalize>\n      <Modalize\n        ref={modalizeRef}\n        modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.88}\n        modalStyle={winWidth > 767 ? { width: 400, alignSelf: \"center\" } : null}\n        threshold={100}\n        closeOnOverlayTap={true}\n        mod\n      >\n        <View>\n          <View\n            style={{\n              backgroundColor: \"#3A48ED\",\n              width: \"100%\",\n              height: 170,\n              borderWidth: 1,\n              top: -2,\n              borderRadius: 15,\n              borderColor: \"#3A48ED\",\n              shadowColor: \"#000\",\n              shadowOffset: {\n                width: 0,\n                height: 4,\n              },\n              shadowOpacity: 0.32,\n              shadowRadius: 5.46,\n\n              elevation: 9,\n            }}\n          >\n            <TouchableOpacity\n              onPress={() => CloseProfile()}\n              style={{\n                alignItems: \"center\",\n                marginTop: 5,\n                marginRight: 2,\n                padding: 5,\n                justifyContent: \"center\",\n                alignSelf: \"flex-end\",\n                backgroundColor: \"rgba(0,0,0,0.2)\",\n                borderRadius: 10,\n                height: 35,\n                width: 70,\n              }}\n            >\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Text\n                  style={{\n                    fontSize: 15,\n                    fontWeight: 500,\n                    color: \"#fff\",\n                    marginRight: 5,\n                  }}\n                >\n                  Close\n                </Text>\n                <SimpleLineIcons\n                  name=\"close\"\n                  size={15}\n                  color=\"#fff\"\n                  onPress={() => CloseProfile()}\n                />\n              </View>\n            </TouchableOpacity>\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                padding: 2,\n                top: -10,\n              }}\n            >\n              <View style={{ width: \"40%\", height: \"100%\", padding: 5 }}>\n                {focused.map((i) => {\n                  return (\n                    <Image\n                      source={{ uri: i.farmerImage }}\n                      style={{\n                        height: 120,\n                        width: 120,\n                        borderRadius: 120,\n                        borderColor: \"#fff\",\n                        borderWidth: 2,\n                      }}\n                    />\n                  );\n                })}\n              </View>\n              <View\n                style={{\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-evenly\",\n                  width: \"60%\",\n                  height: \"100%\",\n                }}\n              >\n                <View\n                  style={{\n                    flexDirection: \"column\",\n                    alignItems: \"flex-start\",\n                    width: \"100%\",\n                    height: \"100%\",\n                    justifyContent: \"space-evenly\",\n                  }}\n                >\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                    <Feather name=\"user\" size={20} color=\"#fff\" />\n\n                    {focused.map((i) => {\n                      return (\n                        <Text\n                          style={{\n                            fontSize: 20,\n                            color: \"#fff\",\n                            fontWeight: \"700\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          {i.farmerName}\n                        </Text>\n                      );\n                    })}\n                  </View>\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                    <Feather name=\"map-pin\" size={20} color=\"#fff\" />\n                    {focused.map((i) => {\n                      return (\n                        <Text\n                          style={{\n                            fontSize: 20,\n                            color: \"#fff\",\n                            fontWeight: \"700\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          {i.state}\n                        </Text>\n                      );\n                    })}\n                  </View>\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                    <Feather name=\"phone\" size={20} color=\"#fff\" />\n                    {focused.map((i) => {\n                      return (\n                        <Text\n                          style={{\n                            fontSize: 20,\n                            color: \"#fff\",\n                            fontWeight: \"700\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          {i.phone}\n                        </Text>\n                      );\n                    })}\n                  </View>\n                </View>\n              </View>\n            </View>\n            <View style={{ top: -40 }}>\n              <Text\n                style={{\n                  marginTop: winWidth < 400 ? 40 : 60,\n                  padding: 5,\n                  fontWeight: \"500\",\n                  color: \"#6F6F6F\",\n                  fontSize: 20,\n                  marginLeft: 5,\n                }}\n              >\n                Farming Details\n              </Text>\n              <View\n                style={{\n                  width: \"95%\",\n                  alignSelf: \"center\",\n                  height: 1,\n                  backgroundColor: \"#C0C0C0\",\n                }}\n              ></View>\n              <View\n                style={{\n                  flexDirection: \"column\",\n                  marginTop: 10,\n                  padding: 10,\n                  height: winWidth < 400 ? 100 : 180,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    width: \"100%\",\n                    justifyContent: \"space-between\",\n                    marginBottom: 10,\n                  }}\n                >\n                  <View style={{ flexDirection: \"column\", width: \"50%\" }}>\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Entypo name=\"leaf\" size={20} color=\"#9F99FF\" />\n\n                      <Text\n                        style={{\n                          fontSize: 12,\n                          color: \"#6F6F6F\",\n                          fontWeight: \"600\",\n                        }}\n                      >\n                        Crop\n                      </Text>\n                    </View>\n                    <View>\n                      <Text style={{ fontSize: 20 }}>Crop</Text>\n                    </View>\n                  </View>\n\n                  <View\n                    style={{\n                      flexDirection: \"column\",\n                      width: \"50%\",\n                      alignItems: \"flex-end\",\n                    }}\n                  >\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <SimpleLineIcons\n                        name=\"calendar\"\n                        size={20}\n                        color=\"#9F99FF\"\n                      />\n                      <Text\n                        style={{\n                          fontSize: 12,\n                          color: \"#6F6F6F\",\n                          marginLeft: 5,\n                          fontWeight: \"600\",\n                        }}\n                      >\n                        Harvest Date\n                      </Text>\n                    </View>\n                    <View>\n                      <Text style={{ fontSize: 20 }}>Harvest Date</Text>\n                    </View>\n                  </View>\n                </View>\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    width: \"100%\",\n                    justifyContent: \"space-between\",\n                    marginTop: 5,\n                  }}\n                >\n                  <View style={{ flexDirection: \"column\", width: \"50%\" }}>\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <SimpleLineIcons\n                        name=\"size-fullscreen\"\n                        size={20}\n                        color=\"#9F99FF\"\n                      />\n                      <Text\n                        style={{\n                          fontSize: 12,\n                          color: \"#6F6F6F\",\n                          fontWeight: \"600\",\n                          marginLeft: 5,\n                        }}\n                      >\n                        Farming Area\n                      </Text>\n                    </View>\n                    <View style={{ marginTop: 5 }}>\n                      {focused.map((i) => {\n                        return (\n                          <Text style={{ fontSize: 20 }}>{i.totalLand}</Text>\n                        );\n                      })}\n                    </View>\n                  </View>\n\n                  <View\n                    style={{\n                      flexDirection: \"column\",\n                      width: \"50%\",\n                      alignItems: \"flex-end\",\n                    }}\n                  >\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <SimpleLineIcons\n                        name=\"speedometer\"\n                        size={20}\n                        color=\"#9F99FF\"\n                      />\n                      <Text\n                        style={{\n                          fontSize: 12,\n                          color: \"#6F6F6F\",\n                          marginLeft: 5,\n                          fontWeight: \"600\",\n                        }}\n                      >\n                        Quantity\n                      </Text>\n                    </View>\n                    <View>\n                      <Text style={{ fontSize: 20, marginLeft: 5 }}>\n                        Quantity q\n                      </Text>\n                    </View>\n                  </View>\n                </View>\n                <View></View>\n              </View>\n              <View\n                style={{\n                  width: \"95%\",\n                  alignSelf: \"center\",\n                  height: 1,\n                  backgroundColor: \"#C0C0C0\",\n                  marginTop: winWidth < 400 ? 30 : 10,\n                }}\n              />\n            </View>\n            <View\n              style={{\n                width: \"100%\",\n                flexDirection: \"column\",\n                top: -29,\n                alignItems: \"center\",\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 15,\n                  color: \"#808080\",\n                  marginLeft: 5,\n                }}\n              >\n                Coming soon\n              </Text>\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-evenly\",\n                  top: 5,\n                }}\n              >\n                <TouchableOpacity\n                  style={{\n                    width: winWidth < 400 ? 70 : 90,\n                    height: winWidth < 400 ? 30 : 40,\n                    backgroundColor: \"#A9A9A9\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flexDirection: \"row\",\n                    borderRadius: 10,\n                  }}\n                  onPress={() =>\n                    alert(\n                      \"Click to chat feature helps you connect directly to this farmer in one click. Feature Coming soon !\"\n                    )\n                  }\n                >\n                  <FontAwesome5 name=\"whatsapp\" size={20} color=\"#fff\" />\n                  <Text\n                    style={{\n                      fontSize: winWidth < 400 ? 16 : 20,\n                      color: \"#fff\",\n                      marginLeft: 5,\n                    }}\n                  >\n                    Chat\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={{\n                    width: winWidth < 400 ? 70 : 90,\n                    height: winWidth < 400 ? 30 : 40,\n                    backgroundColor: \"#A9A9A9\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flexDirection: \"row\",\n                    borderRadius: 10,\n                  }}\n                  onPress={() => alert(\"Feature Coming soon !\")}\n                >\n                  <Text\n                    style={{\n                      fontSize: winWidth < 400 ? 16 : 20,\n                      color: \"#fff\",\n                      marginLeft: 5,\n                    }}\n                  >\n                    Buy\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={{\n                    width: winWidth < 400 ? 90 : 120,\n                    height: winWidth < 400 ? 35 : 40,\n                    backgroundColor: \"#fff\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flexDirection: \"row\",\n                    borderRadius: 10,\n                    borderColor: \"#A9A9A9\",\n                    borderWidth: 2,\n                    padding: 5,\n                  }}\n                  onPress={() =>\n                    alert(\n                      \"Support the farmer by any kind. Feature Coming Soon !\"\n                    )\n                  }\n                >\n                  <FontAwesome name=\"handshake-o\" size={15} color=\"#A9A9A9\" />\n                  <Text\n                    style={{\n                      fontSize: winWidth < 400 ? 16 : 20,\n                      color: \"#A9A9A9\",\n                      marginLeft: 5,\n                    }}\n                  >\n                    Support\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </View>\n        </View>\n      </Modalize>\n      {blur ? (\n        <View\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n            position: \"absolute\",\n          }}\n        >\n          <BlurView\n            tint=\"dark\"\n            intensity={40}\n            style={[StyleSheet.absoluteFill, styles.nonBlurredContent]}\n          >\n            <View\n              style={{\n                backgroundColor: \"#fff\",\n                height: 55,\n                width: winWidth > 767 ? \"50%\" : \"97%\",\n                alignSelf: \"center\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                borderRadius: 8,\n                padding: 20,\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 4,\n                },\n                shadowOpacity: 0.32,\n                shadowRadius: 5.46,\n                marginTop: 10,\n                elevation: 9,\n              }}\n            >\n              <TextInput\n                style={\n                  Platform.OS === \"web\" && {\n                    outlineColor: \"#fff\",\n                    height: 40,\n                    backgroundColor: \"white\",\n                    width: \"95%\",\n                    padding: 5,\n                    fontSize: 20,\n                  }\n                }\n                placeholder=\"Search for Crops\"\n                autoFocus={true}\n                editable={true}\n                onChangeText={(text) => {\n                  console.log(text);\n                  setshow(text);\n                }}\n              />\n              <Button title=\"Close Blur\" onPress={() => setblur(false)} />\n            </View>\n            {show !== \"\" ? (\n              <FlatList\n                showsVerticalScrollIndicator={false}\n                data={filteredBlur}\n                renderItem={renderMatch}\n                ListEmptyComponent={() => (\n                  <View style={styles.container}>\n                    <Text style={{ fontSize: 30 }}>\n                      {\" \"}\n                      Oops ! Didnt find that\n                    </Text>\n                  </View>\n                )}\n                contentContainerStyle={{\n                  width: \"100%\",\n                }}\n              />\n            ) : null}\n          </BlurView>\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default Home;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: winHeight,\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginRight: 5,\n  },\n  buttonnewContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginRight: 5,\n    padding: 5,\n  },\n\n  circle: {\n    height: 25,\n    width: 25,\n    borderRadius: 25,\n    borderWidth: 1,\n    borderColor: \"#3A48ED\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  checkedCircle: {\n    width: 25,\n    height: 25,\n    borderRadius: 25,\n    backgroundColor: \"#3A48ED\",\n  },\n});\n","import firebase from \"firebase\";\n\nconst config ={\n    // apiKey: \"AIzaSyB5JDxo5zw-8iIGx32LIxYbOFEIxL6-BeU\",\n    // authDomain: \"fbpauth.firebaseapp.com\",\n    // projectId: \"fbpauth\",\n    // storageBucket: \"fbpauth.appspot.com\",\n    // messagingSenderId: \"950860507824\",\n    // appId: \"1:950860507824:web:d8f7b06916d3075e75e975\"\n    apiKey: \"AIzaSyCx6yWRJshRYo8dYyShWDruWlrXt_eL7Io\",\n    authDomain: \"krisearch-5a05d.firebaseapp.com\",\n    projectId: \"krisearch-5a05d\",\n    storageBucket: \"krisearch-5a05d.appspot.com\",\n    messagingSenderId: \"976628563758\",\n    appId: \"1:976628563758:web:5ecf6cd6bab45e920c04bf\",\n    measurementId: \"G-NZ5VYEJE75\"\n}\n\nfirebase.initializeApp(config);\nexport default firebase;","import { StatusBar } from \"expo-status-bar\";\nimport React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  Image,\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  Platform,\n  TouchableOpacity,\n  ScrollView,\n  FlatList,\n} from \"react-native\";\nimport Header from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport firebase from \"../firebase/firebase\";\nimport { firestore } from \"firebase\";\nimport * as Location from \"expo-location\";\nimport { Modalize } from \"react-native-modalize\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport S3FileUpload from \"react-s3\";\nimport { uploadFile } from \"react-s3\";\n\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  AntDesign,\n  FontAwesome5,\n  FontAwesome,\n  MaterialIcons,\n  Ionicons,\n} from \"@expo/vector-icons\";\nimport DynamicForm from \"../components/dynamicForm\";\nimport DynForm from \"../components/DynForm\";\n\nconst Profile = ({ navigation }) => {\n  const config = {\n    bucketName: \"claro-farmers\",\n\n    region: \"ap-south-1\",\n    accessKeyId: \"AKIA5J56SHX3SQWUR2EF\",\n    secretAccessKey: \"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\",\n  };\n\n  const modalizeRef = useRef<Modalize>(null);\n\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onClose = () => {\n    modalizeRef.current?.close();\n  };\n  const [crop, setcrop] = useState([]);\n  const [firstName, setfirstName] = useState(\"\");\n  const [qty, setqty] = useState(\"\");\n  const [hdate, sethdate] = useState([]);\n  const [tempCrop, settempCrop] = useState(\"\");\n  const [tempfirstName, settempfirstName] = useState(\"\");\n  const [tempqty, settempqty] = useState(\"\");\n  const [tempArea, settempArea] = useState(\"\");\n  const [tempfa, settempfa] = useState(0);\n  const [farmarea, setfarmarea] = useState(0);\n  const [temphDate, settemphDate] = useState(\"\");\n  const [area, setarea] = useState(\"\");\n  const [details, setdetails] = useState([]);\n  const [image, setimage] = useState(\"\");\n  const [tempImage, settempImage] = useState(\"\");\n  const [modData, setmodData] = useState(false);\n  const [block, setblock] = useState(\"\");\n  const [irState, setirState] = useState(\"\");\n  const [mainCrop, setmainCrop] = useState([]);\n  const [confirmCrops, setconfirmCrops] = useState([]);\n  const [location, setLocation] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [filteredBlur, setfilteredBlur] = useState([]);\n\n  useEffect(() => {\n    firebase\n      .auth()\n      .currentUser?.getIdToken()\n      .then(function (idtoken) {\n        console.log(idtoken);\n        fetch(\"http://staging.clarolabs.in:7050/Ksearch/farmer/get\", {\n          method: \"post\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            authToken: idtoken,\n          }),\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            // console.log(data.data.farmer);\n            console.log(data.data.farmer);\n            setfirstName(data.data.farmer.name);\n            setblock(data.data.farmer.block);\n            setirState(data.data.farmer.state);\n            setimage(data.data.farmer.farmerImage);\n            setfarmarea(data.data.farmer.totalLandSize);\n            setInputFields(data.data.crops);\n            setmainCrop(data.data.crops);\n            console.log(data.data.crops);\n          })\n          .catch((err) => console.log(err));\n      });\n  }, []);\n\n  // var docRef = firestore()\n  //   .collection(\"users\")\n  //   .doc(firebase.auth().currentUser?.uid);\n  // docRef.get().then(function (doc) {\n  //   if (doc.exists) {\n  //     console.log(\"DocData:\", doc.data());\n  //     // console.log(doc.data().crop);\n  //     setcrop(doc.data().crop);\n  //     // console.log(doc.data().firstName);\n  //     setfirstName(doc.data().firstName);\n  //     // console.log(doc.data().quantity);\n  //     setqty(doc.data().quantity);\n  //     // console.log(doc.data().harvestDate);\n  //     sethdate(doc.data().harvestDate);\n  //   } else {\n  //     console.log(\"No such document!\");\n  //   }\n  // });\n\n  // const [location, setLocation] = useState(null);\n  // const [errorMsg, setErrorMsg] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestPermissionsAsync();\n      if (status !== \"granted\") {\n        setErrorMsg(\"Permission to access location was denied\");\n        return;\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n      setLocation(location);\n    })();\n  }, []);\n\n  let text = \"Waiting..\";\n  if (errorMsg) {\n    text = \"errorMsg\";\n  } else if (location) {\n    console.log(location);\n    text = JSON.stringify(location);\n    console.log(text);\n  }\n  // const getLocation = () => {};\n  // const handleEdit = () => {\n  //   console.log(firstName);\n  //   console.log(tempfirstName);\n  //   setfirstName(tempfirstName);\n  //   setcrop(tempCrop);\n  //   firebase\n  //     .firestore()\n  //     .collection(\"users\")\n  //     .doc(firebase.auth().currentUser?.uid)\n  //     .set({\n  //       firstName: tempfirstName,\n  //       location: text,\n  //       crop: crop,\n  //       quantity: qty,\n  //       harvestDate: hdate,\n  //       area: tempArea,\n  //     })\n  //     .then(function () {\n  //       console.log(\"Updated Successfully\");\n  //     })\n  //     .catch(function (err) {\n  //       console.log(err);\n  //     });\n\n  //   console.log(crop);\n  //   console.log(qty);\n  //   console.log(hdate);\n  // };\n  console.log(firstName);\n  useEffect(() => {\n    (async () => {\n      if (Platform.OS !== \"web\") {\n        const {\n          status,\n        } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== \"granted\") {\n          alert(\"Sorry, we need camera roll permissions to make this work!\");\n        }\n      }\n    })();\n  }, []);\n\n  const editImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    // console.log(result.uri);\n\n    if (!result.cancelled) {\n      settempImage(result.uri);\n    }\n  };\n  // const editImage = () => {\n  //   console.log(\"Clicked Edit\");\n  //   useEffect(() => {\n  //     (async () => {\n  //       if (Platform.OS !== \"web\") {\n  //         const {\n  //           status,\n  //         } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n  //         if (status !== \"granted\") {\n  //           alert(\"Sorry, we need camera roll permissions to make this work!\");\n  //         }\n  //       }\n  //     })();\n  //   }, []);\n\n  //   let result = await ImagePicker.launchImageLibraryAsync({\n  //     mediaTypes: ImagePicker.MediaTypeOptions.All,\n  //     allowsEditing: true,\n  //     aspect: [4, 3],\n  //     quality: 1,\n  //   });\n\n  //   console.log(result);\n\n  //   if (!result.cancelled) {\n  //     settempImage(result.uri);\n  //   }\n  // };\n\n  const [inputFields, setInputFields] = useState([\n    { name: \"\", harvestingTime: \"\", estimatedYield: 0 },\n  ]);\n\n  const uploadImage = (e) => {\n    console.log(e.target.files[0]);\n    S3FileUpload.uploadFile(e.target.files[0], config)\n      .then((data) => console.log(data))\n      .catch((err) => console.log(err));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"inputFields\", inputFields);\n  };\n\n  const handleInputChange = (index, event) => {\n    const values = [...inputFields];\n    if (event.target.name === \"name\") {\n      values[index].name = event.target.value;\n    } else if (event.target.name === \"estimatedYield\") {\n      values[index].estimatedYield = Number(event.target.value);\n    } else {\n      values[index].harvestingTime = event.target.value;\n    }\n\n    setInputFields(values);\n  };\n\n  //   const handleAddFields = () => {\n  //     const values = [...inputFields];\n  //     values.push({ firstName: \"\", lastName: \"\" });\n  //     setInputFields(values);\n  //   };\n\n  //   const handleRemoveFields = (index) => {\n  //     const values = [...inputFields];\n  //     values.splice(index, 1);\n  //     setInputFields(values);\n  //   };\n\n  //   const handleInputChange = (index, event) => {\n  //     const values = [...inputFields];\n  //     if (event.target.name === \"firstName\") {\n  //       values[index].firstName = event.target.value;\n  //     } else {\n  //       values[index].lastName = event.target.value;\n  //     }\n\n  //     setInputFields(values);\n  //   };\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        cropName: null,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => setfilteredBlur(data.data.list));\n  }, []);\n\n  const handleAddFields = () => {\n    const values = [...inputFields];\n    values.push({ name: \"\", harvestingTime: \"\", estimatedYield: \"\" });\n    setInputFields(values);\n  };\n\n  const handleRemoveFields = (index) => {\n    const values = [...inputFields];\n    values.splice(index, 1);\n    setInputFields(values);\n  };\n\n  const renderItems = ({ item }) => {\n    return (\n      <View\n        style={{\n          width: \"100%\",\n          height: 60,\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          backgroundColor: \"#fff\",\n          marginBottom: 3,\n          borderWidth: 1,\n          padding: 5,\n          borderColor: \"#e8e8e8\",\n          borderRadius: 5,\n          shadowColor: \"#346beb\",\n          shadowOffset: {\n            width: 1,\n            height: 3,\n          },\n          shadowOpacity: 0.2,\n          shadowRadius: 2.22,\n\n          elevation: 5,\n        }}\n      >\n        {/* {\n          filteredBlur.map((i)=>{\n            if(item.name==i.cropName){\n              \n            }\n          })\n        } */}\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"flex-start\",\n          }}\n        >\n          <Image\n            source={{\n              uri:\n                \"https://www.jaipuriaschoolballia.in/wp-content/uploads/2016/11/blank-img.jpg\",\n            }}\n            style={{\n              height: 45,\n              width: 45,\n              marginRight: 5,\n              borderRadius: \"50%\",\n              borderColor: \"green\",\n            }}\n          />\n          <Text style={{ fontSize: 16 }}>{item.name}</Text>\n          <Entypo name=\"dot-single\" size={20} color=\"black\" />\n          <Text style={{ fontSize: 16 }}>{item.estimatedYield} Quintal</Text>\n        </View>\n        <Text style={{ fontSize: 16 }}>{item.harvestingTime}</Text>\n      </View>\n    );\n  };\n\n  const dummyCrops = [\n    {\n      name: \"Rice\",\n      harvestingTime: \"12/01/2022\",\n      estimatedYield: 9,\n    },\n    {\n      name: \"Baley\",\n      harvestingTime: \"14/02/2021\",\n      estimatedYield: 5,\n    },\n  ];\n  function updateData() {\n    console.log(\"FirstName\", firstName);\n    console.log(tempfirstName);\n    var updatedName = tempfirstName;\n\n    console.log(firstName);\n    console.log(tempfa);\n    console.log(inputFields);\n    setmainCrop(inputFields);\n\n    firebase\n      .auth()\n      .currentUser?.getIdToken()\n      .then((idtoken) => {\n        fetch(\"http://staging.clarolabs.in:7050/Ksearch/farmer/save\", {\n          method: \"post\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            authToken: idtoken,\n            crops: inputFields,\n            farmer: {\n              name: tempfirstName == \"\" || null ? firstName : updatedName,\n              farmerImage:\n                \"https://cdn.pixabay.com/photo/2020/07/01/12/58/icon-5359553__340.png\",\n\n              contactNo: \"+11230981231\",\n              village: \"Paikpara\",\n              block: \"Shyampur\",\n              district: \"South 24 Pgs\",\n              state: \"West Bengal\",\n              totalLandSize: tempfa == 0 || null ? farmarea : tempfa,\n              totalLandSizeUnit: \"Kattha\",\n              latitude: 22,\n              longitude: 88,\n            },\n          }),\n        })\n          .then(() => console.log(\"Successful\"))\n          .catch((err) => console.log(err));\n      });\n  }\n  return (\n    <View>\n      <ScrollView>\n        <View style={{ width: \"100%\", elevation: 1000 }}>\n          <Header onTap={() => navigation.navigate(\"Home\")} />\n        </View>\n\n        <View\n          style={{\n            backgroundColor: \"#deebff\",\n            width: \"100%\",\n            height: winHeight,\n            alignItems: \"center\",\n            // justifyContent: \"center\",\n          }}\n        >\n          {/* <Button title=\"Share Location\" onPress={() => getLocation()} /> */}\n          <View\n            style={{ backgroundColor: \"#346beb\", width: \"100%\", height: \"20%\" }}\n          ></View>\n          <View\n            style={{\n              width: winWidth < 768 ? \"90%\" : \"35%\",\n\n              margin: 10,\n              marginTop: -100,\n              padding: 5,\n              backgroundColor: \"#fff\",\n              borderWidth: 1,\n              borderRadius: 10,\n              borderColor: \"#fff\",\n              zIndex: 999,\n              shadowColor: \"#346beb\",\n              shadowOffset: {\n                width: 1,\n                height: 3,\n              },\n              shadowOpacity: 0.2,\n              shadowRadius: 2.22,\n\n              elevation: 5,\n            }}\n          >\n            <View\n              style={{\n                width: \"100%\",\n                height: 100,\n                borderBottomWidth: 2,\n                borderBottomColor: \"#fff\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n\n                borderRadius: 10,\n              }}\n            >\n              <Image\n                source={{\n                  uri: image,\n                }}\n                style={{\n                  height: 95,\n                  width: 95,\n                  marginBottom: 3,\n                  borderColor: \"#\",\n                }}\n              />\n              <View\n                style={{\n                  height: 100,\n                  flexDirection: \"column\",\n                  width: winWidth > 768 ? \"70%\" : \"70%\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n\n                  marginBottom: 3,\n                }}\n              >\n                {/* {details.map((i) => {\n                return (\n                  <Text\n                    style={{\n                      fontSize: 18,\n\n                      fontWeight: \"600\",\n                      marginBottom: 5,\n                    }}\n                  >\n                    {i.name}\n                  </Text>\n                );\n              })} */}\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n\n                    justifyContent: \"flex-end\",\n                    width: \"90%\",\n                  }}\n                >\n                  <Feather\n                    name=\"user\"\n                    size={20}\n                    color=\"#000\"\n                    style={{ marginTop: -2, marginRight: 5 }}\n                  />\n                  <Text\n                    style={{\n                      fontSize: 18,\n\n                      fontWeight: \"600\",\n                    }}\n                  >\n                    {firstName}\n                  </Text>\n                </View>\n\n                {/* <Text\n                style={{\n                  fontSize: 18,\n\n                  marginBottom: 5,\n                }}\n              >\n                {area}\n              </Text> */}\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    width: \"90%\",\n                  }}\n                >\n                  {firebase.auth().currentUser == null ? (\n                    <Text>Not Found</Text>\n                  ) : (\n                    <Text>{firebase.auth().currentUser?.phoneNumber}</Text>\n                  )}\n                  {/* <Text style={{ fontSize: 16 }}>\n                  {firebase.auth().currentUser.phoneNumber == null\n                    ? \"Not found\"\n                    : firebase.auth().currentUser.phoneNumber}\n                </Text> */}\n                </View>\n              </View>\n            </View>\n\n            {/* <Text>Welcome {firebase.auth().currentUser.phoneNumber}</Text>\n          <Text>{firstName}</Text> */}\n            <View\n              style={{\n                marginTop: 5,\n\n                width: \"100%\",\n              }}\n            >\n              <View\n                style={{\n                  width: \"100%\",\n                  alignItems: \"center\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text\n                  style={{ fontWeight: \"500\", color: \"#6F6F6F\", fontSize: 18 }}\n                >\n                  Personal Details\n                </Text>\n                <TouchableOpacity\n                  // style={{\n                  //   width: 100,\n                  //   height: 30,\n                  //   backgroundColor: \"#3ECF8E\",\n                  //   alignItems: \"center\",\n                  //   justifyContent: \"center\",\n                  //   padding: 5,\n                  //   borderRadius: 10,\n                  //   borderColor: \"#3ECF8E\",\n                  //   borderWidth: 2,\n                  // }}\n                  style={{\n                    width: 120,\n                    height: 30,\n                    alignItems: \"center\",\n                    backgroundColor: \"#3ECF8E\",\n                    borderWidth: 1,\n                    borderRadius: 5,\n\n                    borderColor: \"#3ECF8E\",\n                    justifyContent: \"center\",\n                  }}\n                  onPress={() => onOpen()}\n                >\n                  <Text\n                    style={{\n                      fontSize: 14,\n                      padding: 5,\n                      color: \"#fff\",\n                      fontWeight: \"500\",\n                    }}\n                  >\n                    Edit Profile\n                  </Text>\n                </TouchableOpacity>\n                <Button\n                  title=\"Log out\"\n                  onPress={() => {\n                    firebase.auth().signOut();\n                    navigation.navigate(\"Landing\");\n                  }}\n                />\n              </View>\n\n              <View\n                style={{\n                  width: \"100%\",\n                  height: 1,\n                  // backgroundColor: \"#D3D3D3\",\n                  marginTop: 5,\n                }}\n              />\n              <View\n                style={{\n                  width: \"100%\",\n                  marginTop: 10,\n\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <View\n                  style={{ alignItems: \"center\", justifyContent: \"center\" }}\n                >\n                  <Text style={{ color: \"grey\", fontSize: 13 }}>\n                    Farming Area\n                  </Text>\n                  <Text style={{ fontSize: 16, marginTop: 3 }}>\n                    {farmarea} Acres\n                  </Text>\n                </View>\n                <View\n                  style={{ alignItems: \"center\", justifyContent: \"center\" }}\n                >\n                  <Text style={{ color: \"grey\", fontSize: 13 }}>Region</Text>\n                  <Text style={{ fontSize: 16, marginTop: 3 }}>{block}</Text>\n                </View>\n                <View\n                  style={{ alignItems: \"center\", justifyContent: \"center\" }}\n                >\n                  <Text style={{ color: \"grey\", fontSize: 13 }}>State</Text>\n                  <Text style={{ fontSize: 16, marginTop: 3 }}>{irState}</Text>\n                </View>\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  height: 1,\n                  backgroundColor: \"#D3D3D3\",\n                  marginTop: 5,\n                }}\n              />\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  width: \"100%\",\n                  marginTop: 10,\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  // backgroundColor: \"red\",\n                }}\n              >\n                <View style={{ width: \"100%\" }}>\n                  <View\n                    style={{\n                      width: \"100%\",\n                      alignItems: \"center\",\n                      flexDirection: \"row\",\n                      justifyContent: \"flex-start\",\n                      marginTop: 20,\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontWeight: \"500\",\n                        color: \"#6F6F6F\",\n                        fontSize: 18,\n                        marginBottom: 10,\n                      }}\n                    >\n                      Crop Details\n                    </Text>\n                    {/* <TouchableOpacity\n                    // style={{\n                    //   width: 100,\n                    //   height: 30,\n                    //   backgroundColor: \"#3ECF8E\",\n                    //   alignItems: \"center\",\n                    //   justifyContent: \"center\",\n                    //   padding: 5,\n                    //   borderRadius: 10,\n                    //   borderColor: \"#3ECF8E\",\n                    //   borderWidth: 2,\n                    // }}\n                    style={{\n                      width: 120,\n                      height: 30,\n                      alignItems: \"center\",\n                      backgroundColor: \"#3ECF8E\",\n                      borderWidth: 1,\n                      borderRadius: 5,\n\n                      borderColor: \"#3ECF8E\",\n                      justifyContent: \"center\",\n                    }}\n                    onPress={() => onOpen()}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 14,\n                        padding: 5,\n                        color: \"#fff\",\n                        fontWeight: \"500\",\n                      }}\n                    >\n                      Edit Crops\n                    </Text>\n                  </TouchableOpacity> */}\n                  </View>\n\n                  <View\n                    style={{\n                      height: winHeight * 0.4,\n                      marginBottom: 20,\n                    }}\n                  >\n                    <FlatList\n                      showsVerticalScrollIndicator={false}\n                      data={mainCrop}\n                      renderItem={renderItems}\n                      ListEmptyComponent={() => (\n                        <View style={styles.container}>\n                          <Text style={{ fontSize: 30 }}>\n                            {\" \"}\n                            Loading your crops..\n                          </Text>\n                        </View>\n                      )}\n                      contentContainerStyle={{\n                        flex: 1,\n                      }}\n                    />\n\n                    {/* \n                  <ScrollView showsVerticalScrollIndicator={true}>\n                    {mainCrop.map((item) => {\n                      return (\n                        <View\n                          style={{\n                            width: \"100%\",\n                            height: 60,\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                            backgroundColor: \"#fff\",\n                            marginBottom: 3,\n                            borderWidth: 1,\n                            padding: 5,\n                            borderColor: \"#e8e8e8\",\n                            borderRadius: 5,\n                            shadowColor: \"#346beb\",\n                            shadowOffset: {\n                              width: 1,\n                              height: 3,\n                            },\n                            shadowOpacity: 0.2,\n                            shadowRadius: 2.22,\n\n                            elevation: 5,\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                              justifyContent: \"flex-start\",\n                            }}\n                          >\n                            <Image\n                              source={{\n                                uri:\n                                  \"https://www.jaipuriaschoolballia.in/wp-content/uploads/2016/11/blank-img.jpg\",\n                              }}\n                              style={{\n                                height: 40,\n                                width: 40,\n                                marginRight: 5,\n                                borderRadius: \"50%\",\n                              }}\n                            />\n                            <Text style={{ fontSize: 14 }}>{item.name}</Text>\n                            <Entypo name=\"dot-single\" size={20} color=\"black\" />\n                            <Text style={{ fontSize: 14 }}>\n                              {item.estimatedYield} Quintal\n                            </Text>\n                          </View>\n                          <Text style={{ fontSize: 14 }}>\n                            {item.harvestingTime}\n                          </Text>\n                        </View>\n                      );\n                    })}\n                  </ScrollView> */}\n\n                    {/* <View>\n                    <Text style={{ color: \"grey\" }}>Crop</Text>\n                    {dummyCrops.map((i) => {\n                      return <Text>{i.name}</Text>;\n                    })}\n                  </View>\n                  <View>\n                    <Text style={{ color: \"grey\" }}>Harvest Date</Text>\n                    {dummyCrops.map((i) => {\n                      return <Text>{i.harvestingTime}</Text>;\n                    })}\n                  </View>\n                  <View>\n                    <Text style={{ color: \"grey\" }}>Quantity</Text>\n                    {dummyCrops.map((i) => {\n                      return <Text>{i.estimatedYield}</Text>;\n                    })}\n                  </View> */}\n\n                    {/* {dummyCrops.map((i) => {\n                    return (\n                      <View style={{ flexDirection: \"row\" }}>\n                        <Text style={{ color: \"grey\" }}>{i.name}</Text>\n                        <Text style={{ color: \"grey\" }}>\n                          {i.harvestingTime}\n                        </Text>\n                        <Text style={{ color: \"grey\" }}>\n                          {i.estimatedYield}\n                        </Text>\n                      </View>\n                    );\n                  })} */}\n                  </View>\n\n                  {/* <Text style={{ color: \"grey\" }}>Crop</Text> */}\n                  {/* <Text style={{ fontSize: 18, marginTop: 3 }}>{crop}</Text> */}\n                  {/* {dummyCrops.map((i) => {\n                  return <Text>{i.name}</Text>;\n                })} */}\n                </View>\n                <View>\n                  {/* <Text style={{ color: \"grey\" }}>Harvest Date</Text> */}\n                  {/* <Text style={{ fontSize: 18, marginTop: 3 }}>{hdate}</Text> */}\n                </View>\n              </View>\n              <input type=\"file\" onChange={uploadImage} />\n              {/* <Text>{crop}</Text>\n            <Text>{qty}</Text>\n\n            <Text>{hdate}</Text> */}\n              {/* <View\n              style={{\n                width: \"100%\",\n                height: 1,\n                backgroundColor: \"#D3D3D3\",\n                marginTop: 5,\n              }}\n            /> */}\n              <View style={{ marginBottom: 10, width: \"100%\" }}>\n                <TouchableOpacity\n                  // style={{\n                  //   width: 100,\n                  //   height: 30,\n                  //   backgroundColor: \"#3ECF8E\",\n                  //   alignItems: \"center\",\n                  //   justifyContent: \"center\",\n                  //   padding: 5,\n                  //   borderRadius: 10,\n                  //   borderColor: \"#3ECF8E\",\n                  //   borderWidth: 2,\n                  // }}\n                  style={{\n                    width: \"100%\",\n                    height: 30,\n                    alignItems: \"center\",\n                    backgroundColor: \"#000\",\n                    borderWidth: 1,\n                    borderRadius: 5,\n\n                    borderColor: \"#000\",\n                    justifyContent: \"center\",\n                  }}\n                  onPress={() => {\n                    firebase.auth().signOut();\n                    navigation.navigate(\"Landing\");\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 14,\n                      padding: 5,\n                      color: \"#fff\",\n                      fontWeight: \"500\",\n                    }}\n                  >\n                    Log Out\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </View>\n        </View>\n        <Modalize\n          ref={modalizeRef}\n          modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight}\n          threshold={100}\n          modalStyle={\n            winWidth > 767 ? { width: 400, alignSelf: \"center\" } : null\n          }\n          closeOnOverlayTap={true}\n          mod\n        >\n          {/* <View\n          style={{\n            width: \"100%\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            padding: 5,\n          }}\n        >\n          <Text style={{ fontSize: 16 }}>Edit your profile here</Text>\n          <SimpleLineIcons name=\"close\" size={25} onPress={() => onClose()} />\n        </View> */}\n          <ScrollView>\n            <View\n              style={{\n                width: \"100%\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                padding: 5,\n                top: 5,\n              }}\n            >\n              {/* <TouchableOpacity onPress={() => onCloseFilter()}>\n                Close Filter\n              </TouchableOpacity> */}\n              <Text style={{ fontSize: 16, marginLeft: 7, fontWeight: \"600\" }}>\n                Edit your Profile\n              </Text>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n\n                  width: \"50%\",\n                  justifyContent: \"flex-end\",\n                }}\n              >\n                {/* <TouchableOpacity\n              style={{\n                width: 60,\n                height: 30,\n                backgroundColor: \"#fff\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n\n                borderRadius: 10,\n                borderColor: \"#3A48ED\",\n                borderWidth: 2,\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 16,\n                  color: \"#3A48ED\",\n                }}\n              >\n                Reset\n              </Text>\n            </TouchableOpacity> */}\n                <TouchableOpacity\n                  style={{\n                    width: 60,\n                    height: 30,\n                    backgroundColor: \"#3ECF8E\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n\n                    borderRadius: 10,\n                    borderColor: \"#3ECF8E\",\n                    borderWidth: 2,\n                    marginRight: 10,\n                  }}\n                  onPress={updateData}\n                >\n                  <Text\n                    style={{\n                      fontSize: 16,\n                      color: \"#fff\",\n                    }}\n                  >\n                    Save\n                  </Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity onPress={onClose}>\n                  <View\n                    style={{\n                      width: 25,\n                      height: 25,\n                      borderWidth: 2,\n                      borderColor: \"#A1C7FF\",\n                      alignItems: \"center\",\n                      alignSelf: \"flex-end\",\n                      justifyContent: \"center\",\n                      flexDirection: \"row\",\n                      backgroundColor: \"#A1C7FF\",\n                      borderRadius: 25,\n                    }}\n                  >\n                    <AntDesign name=\"close\" size={20} color=\"#3A48ED\" />\n                  </View>\n                </TouchableOpacity>\n              </View>\n            </View>\n            <View style={{ padding: 10 }}>\n              <Text style={{ fontSize: 12, marginTop: 20 }}>Name</Text>\n              <TextInput\n                style={{\n                  width: winWidth < 768 ? \"80%\" : 200,\n                  height: 40,\n                  borderWidth: 1,\n                  borderColor: \"#D3D3D3\",\n                  padding: 10,\n                  marginTop: 5,\n                  borderRadius: 5,\n                }}\n                onChangeText={(e) => settempfirstName(e)}\n                defaultValue={firstName}\n                placeholder=\"Enter your name\"\n              />\n              <Text style={{ fontSize: 12, marginTop: 20 }}>Farming Area</Text>\n              <TextInput\n                textContentType=\"telephoneNumber\"\n                style={{\n                  width: winWidth < 768 ? \"80%\" : 200,\n                  height: 40,\n                  borderWidth: 1,\n                  borderColor: \"#D3D3D3\",\n                  padding: 10,\n                  marginTop: 5,\n                  borderRadius: 5,\n                }}\n                defaultValue={farmarea != null ? farmarea : \" \"}\n                onChangeText={(e) => settempfa(e)}\n                placeholder=\"Enter Farming Area\"\n              />\n              <View style={{ marginTop: 20 }}>\n                <Text\n                  style={{ fontSize: 16, marginLeft: 7, fontWeight: \"600\" }}\n                >\n                  Edit your crops here\n                </Text>\n\n                {/* <DynamicForm /> */}\n                {/* <DynForm /> */}\n\n                <>\n                  <form onSubmit={handleSubmit}>\n                    <View\n                      style={{\n                        borderWidth: 1,\n\n                        borderColor: \"#f5f5f5\",\n                        width: \"100%\",\n                        marginBottom: 5,\n                        borderRadius: 5,\n                        marginTop: 5,\n                      }}\n                    >\n                      <div className=\"form-row\">\n                        {inputFields.map((inputField, index) => (\n                          <Fragment key={`${inputField}~${index}`}>\n                            <View\n                              style={{\n                                flexDirection: \"column\",\n                                alignItems: \"flex-start\",\n                                justifyContent: \"center\",\n                                marginTop: 10,\n                                backgroundColor: \"#f5f5f5\",\n                                borderColor: \"#f5f5f5\",\n                                borderWidth: 1,\n                                borderRadius: 10,\n                              }}\n                            >\n                              <View\n                                style={{\n                                  width: \"100%\",\n                                  flexDirection: \"row\",\n                                  alignItems: \"center\",\n                                  justifyContent: \"space-between\",\n                                }}\n                              >\n                                <View style={{ width: \"90%\", marginRight: 10 }}>\n                                  <div className=\"form-group col-sm-6\">\n                                    {/* <label htmlFor=\"firstName\">First Name</label> */}\n\n                                    <input\n                                      style={{\n                                        width: \"90%\",\n                                        height: 30,\n                                        margin: 3,\n                                        borderWidth: 1,\n                                        outlineColor: \"#fff\",\n                                        borderRadius: 5,\n                                      }}\n                                      placeholder=\"Type to add crop\"\n                                      type=\"text\"\n                                      className=\"form-control\"\n                                      id=\"name\"\n                                      name=\"name\"\n                                      value={inputField.name}\n                                      onChange={(event) => {\n                                        handleInputChange(index, event);\n                                      }}\n                                    />\n                                  </div>\n                                </View>\n\n                                <AntDesign\n                                  style={{ marginRight: 10 }}\n                                  name=\"delete\"\n                                  size={24}\n                                  color=\"#ff7878\"\n                                  onPress={() => {\n                                    handleRemoveFields(index);\n                                  }}\n                                />\n                              </View>\n                              <View\n                                style={{\n                                  flexDirection: \"row\",\n                                  width: \"90%\",\n                                  alignItems: \"center\",\n                                  justifyContent: \"space-between\",\n                                }}\n                              >\n                                <div className=\"form-group col-sm-4\">\n                                  {/* <label htmlFor=\"lastName\">Last Name</label> */}\n                                  <input\n                                    style={{\n                                      width: \"85%\",\n                                      height: 25,\n                                      margin: 3,\n                                      outlineColor: \"#fff\",\n                                    }}\n                                    placeholder=\"Quantity\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"estimatedYield\"\n                                    name=\"estimatedYield\"\n                                    value={inputField.estimatedYield}\n                                    onChange={(event) =>\n                                      handleInputChange(index, event)\n                                    }\n                                  />\n                                </div>\n                                <div className=\"form-group col-sm-4\">\n                                  {/* <label htmlFor=\"date\">Date</label> */}\n                                  <input\n                                    style={{\n                                      width: \"85%\",\n                                      height: 25,\n                                      marginLeft: -10,\n                                      outlineColor: \"#fff\",\n                                    }}\n                                    placeholder=\"Harvest Date\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"harvestingTime\"\n                                    name=\"harvestingTime\"\n                                    value={inputField.harvestingTime}\n                                    onChange={(event) =>\n                                      handleInputChange(index, event)\n                                    }\n                                  />\n                                </div>\n                              </View>\n                            </View>\n                          </Fragment>\n                        ))}\n                      </div>\n                    </View>\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        width: \"100%\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      {/* <View>\n                  <button\n                    className=\"btn btn-primary mr-2\"\n                    type=\"submit\"\n                    onSubmit={handleSubmit}\n                    style={{\n                      width: 100,\n                      height: 30,\n                      alignItems: \"center\",\n                      backgroundColor: \"#8f98ff\",\n                      borderWidth: 1.5,\n                      borderRadius: 5,\n                      marginLeft: 10,\n                      marginTop: 10,\n                      borderColor: \"#3A48ED\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    <Text style={{ color: \"#fff\", fontWeight: \"500\" }}>\n                      {\" \"}\n                      Done\n                    </Text>\n                  </button>\n                </View> */}\n                      <TouchableOpacity\n                        style={{\n                          width: \"100%\",\n                          height: 35,\n                          alignItems: \"center\",\n                          backgroundColor: \"#3A48ED\",\n                          borderWidth: 1,\n                          borderRadius: 5,\n                          marginTop: 10,\n                          borderColor: \"#3A48ED\",\n                          justifyContent: \"center\",\n                        }}\n                        onPress={() => {\n                          handleAddFields();\n                        }}\n                      >\n                        <Text\n                          style={{\n                            fontSize: 15,\n                            padding: 5,\n                            color: \"#fff\",\n                            fontWeight: \"700\",\n                          }}\n                        >\n                          + Add Crop\n                        </Text>\n                      </TouchableOpacity>\n                    </View>\n                    <div className=\"submit-button\"></div>\n                    <br />\n                    {/* <pre>{JSON.stringify(inputFields, null, 2)}</pre> */}\n                  </form>\n                </>\n              </View>\n\n              {/* <TextInput\n            style={{\n              width: winWidth < 768 ? \"80%\" : 200,\n              height: 40,\n              borderWidth: 1,\n              borderColor: \"#D3D3D3\",\n              padding: 10,\n              marginTop: 10,\n              borderRadius: 5,\n            }}\n            onChangeText={(e) => settempqty(e)}\n            defaultValue={qty}\n            placeholder=\"Enter Quantity\"\n          />\n          <TextInput\n            style={{\n              width: winWidth < 768 ? \"80%\" : 200,\n              height: 40,\n              borderWidth: 1,\n              borderColor: \"#D3D3D3\",\n              padding: 10,\n              marginTop: 10,\n              borderRadius: 5,\n            }}\n            onChangeText={(e) => settemphDate(e)}\n            defaultValue={hdate}\n            placeholder=\"Enter harvest date\"\n          />\n          <TextInput\n            style={{\n              width: winWidth < 768 ? \"80%\" : 200,\n              height: 40,\n              borderWidth: 1,\n              borderColor: \"#D3D3D3\",\n              padding: 10,\n              marginTop: 10,\n              borderRadius: 5,\n            }}\n            onChangeText={(e) => settempArea(e)}\n            placeholder=\"Enter farming area\"\n          /> */}\n              {/* <View\n            style={{\n              width: \"100%\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <TouchableOpacity\n              style={{\n                width: \"30%\",\n                height: 40,\n                alignItems: \"center\",\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderRadius: 5,\n                top: 30,\n                borderColor: \"#346beb\",\n                justifyContent: \"center\",\n              }}\n              onPress={() => console.log(\"Resetting\")}\n            >\n              <Text\n                style={{\n                  fontSize: 15,\n                  padding: 5,\n                  color: \"#346beb\",\n                  fontWeight: \"700\",\n                }}\n              >\n                Reset\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={{\n                width: \"30%\",\n                height: 40,\n                alignItems: \"center\",\n                backgroundColor: \"#3ECF8E\",\n                borderWidth: 1,\n                borderRadius: 5,\n                top: 30,\n                borderColor: \"#3ECF8E\",\n                justifyContent: \"center\",\n              }}\n              onPress={() => updateData()}\n            >\n              <Text\n                style={{\n                  fontSize: 15,\n                  padding: 5,\n                  color: \"#fff\",\n                  fontWeight: \"700\",\n                }}\n              >\n                Save\n              </Text>\n            </TouchableOpacity>\n\n          \n          </View> */}\n            </View>\n          </ScrollView>\n        </Modalize>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default Profile;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n} from \"react-native\";\nimport Header from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport firebase from \"../firebase/firebase\";\nimport { firestore } from \"firebase\";\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  AntDesign,\n  FontAwesome5,\n  FontAwesome,\n  MaterialIcons,\n} from \"@expo/vector-icons\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nconst Landing = ({ navigation }) => {\n  const [usere, setusere] = useState(null);\n  const [datas, setdatas] = useState([]);\n  {\n    firebase.auth().onAuthStateChanged((user) => {\n      // navigation.navigate(user ? \"Profile\" : \"Login\");\n      if (user) {\n        firebase\n          .auth()\n          .currentUser?.getIdToken()\n          .then((idtoken) => {\n            // settoken(idtoken);\n            console.log(idtoken);\n\n            // console.log(token);\n\n            fetch(\"http://staging.clarolabs.in:7050/Ksearch/farmer/get\", {\n              method: \"post\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                authToken: idtoken,\n              }),\n            })\n              .then((res) => res.json())\n\n              .then((data) => {\n                console.log(data.data.farmer);\n                if (data.data.farmer == null) {\n                  // navigation.navigate(\"SignUp\");\n                  console.log(\"New User\");\n                  navigation.navigate(\"SignUp\");\n                } else {\n                  console.log(\"Already Signed Up\");\n                  navigation.navigate(\"Homely\", { screen: \"Home\" });\n                }\n              })\n\n              .catch(function (err) {\n                console.log(err);\n              });\n\n            // .then((data) => {\n            //   // // console.log(data.json());\n            //   // if (data !== null) {\n            //   //   console.log(\"Found\");\n            //   //   // console.log(data.json());\n            //   //   // navigation.navigate(\"Homely\", { screen: \"Home\" });\n            //   // } else {\n            //   //   console.log(\"No data found\");\n            //   //   // navigation.navigate(\"SignUp\");\n            //   // }\n            // })\n          })\n          .catch(function (err) {\n            console.log(err);\n          });\n        // var docRef = firestore()\n        //   .collection(\"users\")\n        //   .doc(firebase.auth().currentUser?.uid);\n        // docRef.get().then(function (doc) {\n        //   if (doc.exists) {\n        //     console.log(\"DocData:\", doc.data());\n        //     navigation.navigate(\"Homely\", { screen: \"Home\" });\n        //     // navigation.navigate(\"Profile\");\n        //   } else {\n        //     console.log(\"No such document!\");\n        //     navigation.navigate(\"SignUp\");\n        //   }\n        // });\n      } else {\n        null;\n      }\n    });\n  }\n  // var docRef = firestore()\n  //                 .collection(\"users\")\n  //                 .doc(firebase.auth().currentUser?.uid);\n  //               docRef.get().then(function (doc) {\n  //                 if (doc.exists) {\n  //                   console.log(\"DocData:\", doc.data());\n  //                   navigation.navigate(\"Profile\");\n  //                 } else {\n  //                   console.log(\"No such document!\");\n  //                   navigation.navigate(\"SignUp\");\n  //                 }\n  //               });\n\n  const responsive = {\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 1,\n      slidesToSlide: 1, // optional, default to 1.\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 1,\n      slidesToSlide: 1, // optional, default to 1.\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1,\n      slidesToSlide: 1, // optional, default to 1.\n    },\n  };\n  return (\n    <View style={styles.container}>\n      <View\n        style={{\n          width: winWidth > 768 ? \"40%\" : \"100%\",\n\n          height: winWidth > 768 ? 400 : 350,\n          marginTop: -100,\n        }}\n      >\n        <Carousel\n          additionalTransfrom={0}\n          autoPlay={true}\n          arrows={false}\n          autoPlaySpeed={3000}\n          centerMode={false}\n          className=\"\"\n          containerClass=\"container\"\n          dotListClass=\"\"\n          draggable\n          focusOnSelect={false}\n          infinite\n          itemClass=\"\"\n          keyBoardControl\n          minimumTouchDrag={80}\n          renderButtonGroupOutside={false}\n          renderDotsOutside={true}\n          responsive={responsive}\n        >\n          <View\n            style={{\n              height: 400,\n\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n              flexDirection: \"column\",\n            }}\n          >\n            <View\n              style={{\n                height: winWidth > 768 ? \"80%\" : \"60%\",\n                marginTop: winWidth > 768 ? 10 : 30,\n                marginBottom: 10,\n                width: \"100%\",\n                alignItems: \"center\",\n              }}\n            >\n              <Image\n                source={require(\"../../assets/onBoarding/i1.png\")}\n                style={{\n                  height: winWidth > 768 ? 400 : 300,\n                  width: winWidth > 768 ? 400 : 300,\n                }}\n              />\n            </View>\n            <Text\n              style={{\n                fontSize: winWidth > 768 ? 25 : 20,\n                color: \"#fff\",\n                marginTop: 10,\n              }}\n            >\n              Discover the ones who grow our food\n            </Text>\n          </View>\n          <View\n            style={{\n              height: 400,\n\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n              flexDirection: \"column\",\n            }}\n          >\n            <View\n              style={{\n                height: winWidth > 768 ? \"80%\" : \"60%\",\n                marginTop: winWidth > 768 ? 10 : 30,\n                marginBottom: 10,\n                width: \"100%\",\n                alignItems: \"center\",\n              }}\n            >\n              <Image\n                source={require(\"../../assets/onBoarding/i3.png\")}\n                style={{\n                  height: winWidth > 768 ? 400 : 300,\n                  width: winWidth > 768 ? 400 : 300,\n                }}\n              />\n            </View>\n            <Text\n              style={{\n                fontSize: winWidth > 768 ? 25 : 20,\n                color: \"#fff\",\n                marginTop: 10,\n              }}\n            >\n              Get onboard with other farmers\n            </Text>\n          </View>\n          <View\n            style={{\n              height: 400,\n\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n              flexDirection: \"column\",\n            }}\n          >\n            <View\n              style={{\n                height: winWidth > 768 ? \"80%\" : \"60%\",\n                marginTop: winWidth > 768 ? 10 : 30,\n                marginBottom: 10,\n                width: \"100%\",\n                alignItems: \"center\",\n              }}\n            >\n              <Image\n                source={require(\"../../assets/onBoarding/i2.png\")}\n                style={{\n                  height: winWidth > 768 ? 350 : 250,\n                  width: winWidth > 768 ? 350 : 250,\n                }}\n              />\n            </View>\n            <Text\n              style={{\n                fontSize: winWidth > 768 ? 25 : 20,\n                color: \"#fff\",\n                marginTop: 10,\n              }}\n            >\n              Farm-to-Plate helps you buy crops directly\n            </Text>\n          </View>\n        </Carousel>\n      </View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          width: \"100%\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          top: 20,\n        }}\n      >\n        <Image\n          source={require(\"../../assets/newIcon4.png\")}\n          style={{ height: 60, width: 60 }}\n        />\n        <Text style={{ marginLeft: 5, fontSize: 40, color: \"#fff\" }}>\n          Krisearch\n        </Text>\n      </View>\n      <View\n        style={{\n          flexDirection: \"column\",\n          width: 300,\n          height: 100,\n          top: 60,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <TouchableOpacity\n          style={{\n            width: \"100%\",\n            height: 60,\n            alignItems: \"center\",\n            backgroundColor: \"#3ECF8E\",\n            borderWidth: 1,\n            borderRadius: 5,\n            borderColor: \"#3ECF8E\",\n            justifyContent: \"space-between\",\n            flexDirection: \"row\",\n          }}\n          onPress={() => navigation.navigate(\"Login\")}\n        >\n          <View\n            style={{\n              width: \"80%\",\n              height: \"100%\",\n              flexDirection: \"row\",\n\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n              padding: 10,\n            }}\n          >\n            <FontAwesome5 name=\"tractor\" size={30} style={{ color: \"#fff\" }} />\n            <View\n              style={{\n                flexDirection: \"column\",\n                alignItems: \"flex-start\",\n                justifyContent: \"space-evenly\",\n\n                height: 50,\n                marginLeft: 10,\n              }}\n            >\n              <Text style={{ fontSize: 20, color: \"#fff\", fontWeight: \"600\" }}>\n                I'm a Farmer\n              </Text>\n              <Text style={{ fontSize: 14, color: \"#fff\" }}>\n                Get onboard with us\n              </Text>\n            </View>\n          </View>\n          <AntDesign\n            name=\"arrowright\"\n            size={30}\n            color=\"#fff\"\n            style={{ marginRight: 10 }}\n          />\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={{\n            width: \"100%\",\n            height: 60,\n            alignItems: \"center\",\n            backgroundColor: \"#fff\",\n            borderWidth: 2,\n            borderRadius: 5,\n            borderColor: \"#3ECF8E\",\n            justifyContent: \"space-between\",\n            flexDirection: \"row\",\n            marginTop: 20,\n          }}\n          onPress={() => navigation.navigate(\"Homely\", { screen: \"Home\" })}\n        >\n          <View\n            style={{\n              width: \"80%\",\n              height: \"100%\",\n              flexDirection: \"row\",\n\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n              padding: 10,\n            }}\n          >\n            {/* <FontAwesome5 name=\"tractor\" size={30} style={{ color: \"#fff\" }} /> */}\n            <AntDesign name=\"shoppingcart\" size={30} color=\"#3ECF8E\" />\n            <View\n              style={{\n                flexDirection: \"column\",\n                alignItems: \"flex-start\",\n                justifyContent: \"space-evenly\",\n\n                height: 50,\n                marginLeft: 10,\n              }}\n            >\n              <Text\n                style={{ fontSize: 20, color: \"#3ECF8E\", fontWeight: \"600\" }}\n              >\n                I'm a Buyer\n              </Text>\n              <Text\n                style={{ fontSize: 14, color: \"#3ECF8E\", fontWeight: \"500\" }}\n              >\n                Buy fresh crops directly\n              </Text>\n            </View>\n          </View>\n          <AntDesign\n            name=\"arrowright\"\n            size={30}\n            color=\"#3ECF8E\"\n            style={{ marginRight: 10 }}\n          />\n        </TouchableOpacity>\n        <Button title=\"To test\" onPress={() => navigation.navigate(\"Test\")} />\n        {/* <TouchableOpacity\n            style={{\n              width: \"100%\",\n              height: 40,\n              alignItems: \"center\",\n              backgroundColor: \"#fff\",\n              borderWidth: 1,\n              borderRadius: 5,\n              borderColor: \"#fff\",\n              justifyContent: \"center\",\n            }}\n            onPress={() => navigation.navigate(\"Homely\", { screen: \"Home\" })}\n          >\n            <Text style={{ fontSize: 20, color: \"#3ECF8E\" }}>I'm a Buyer</Text>\n          </TouchableOpacity> */}\n        {/* <Button\n          title=\"I'm a Buyer\"\n          onPress={() => navigation.navigate(\"Home\")}\n        /> */}\n      </View>\n    </View>\n  );\n};\n\nexport default Landing;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#3A48ED\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TextInput,\n  TouchableOpacity,\n  Platform,\n} from \"react-native\";\nimport firebase from \"../firebase/firebase\";\nimport { firestore } from \"firebase\";\nimport { winHeight, winWidth } from \"../utils/window\";\nimport OtpInput from \"react-otp-input\";\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  AntDesign,\n  FontAwesome5,\n  FontAwesome,\n  MaterialIcons,\n} from \"@expo/vector-icons\";\n\nconst Login = ({ navigation }) => {\n  const [number, setnumber] = useState(\"\");\n  const [temp, settemp] = useState(\"\");\n  const [user, setuser] = useState(\"\");\n  const [token, settoken] = useState(null);\n  const [otpsent, setotpsent] = useState(false);\n  const [gotCode, setgotCode] = useState(\"\");\n  const [tempCode, settempCode] = useState(\"\");\n\n  const handleClick = () => {\n    let recaptcha = new firebase.auth.RecaptchaVerifier(\"recaptcha-container\", {\n      size: \"invisible\",\n    });\n    let n = \"+919176689903\";\n    console.log(tempCode);\n    firebase\n      .auth()\n      .setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n      .then(() => {\n        // Existing and future Auth states are now persisted in the current\n        // session only. Closing the window would clear any existing state even\n        // if a user forgets to sign out.\n        // ...\n        // New sign-in will be persisted with session persistence.\n\n        firebase\n          .auth()\n          .signInWithPhoneNumber(number, recaptcha)\n          .then(function (e) {\n            let code = window.prompt(\"Enter the OTP\", \"\");\n            // let code = gotCode;\n            if (code == null) {\n              console.log(\"Null Code\");\n            }\n\n            e.confirm(code)\n              .then(function (result) {\n                console.log(result.user, \"user\");\n                setuser(result.user.phoneNumber);\n                console.log(\n                  result.user ? result.user.phoneNumber : \"not verified\"\n                );\n\n                firebase\n                  .auth()\n                  .currentUser?.getIdToken()\n                  .then(function (idtoken) {\n                    // settoken(idtoken);\n                    // console.log(idtoken);\n\n                    // console.log(token);\n\n                    fetch(\n                      \"http://staging.clarolabs.in:7050/Ksearch/farmer/get\",\n                      {\n                        method: \"post\",\n                        headers: {\n                          Accept: \"application/json\",\n                          \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify({\n                          authToken: idtoken,\n                        }),\n                      }\n                    )\n                      .then((response) => response.json())\n                      .then((data) => {\n                        console.log(data.data.farmer);\n                        if (data.data.farmer == null) {\n                          navigation.navigate(\"SignUp\");\n                          console.log(\"Not Available\");\n                        } else {\n                          navigation.navigate(\"Homely\", { screen: \"Home\" });\n                          console.log(\"available\");\n                        }\n                      })\n                      .catch((err) => console.log(err));\n                  })\n                  .catch(function (err) {\n                    console.log(err);\n                  });\n\n                // var docRef = firestore()\n                //   .collection(\"users\")\n                //   .doc(firebase.auth().currentUser?.uid);\n                // docRef.get().then(function (doc) {\n                //   if (doc.exists) {\n                //     console.log(\"DocData:\", doc.data());\n                //     // navigation.navigate(\"Profile\");\n                //     navigation.navigate(\"Homely\", { screen: \"Profile\" });\n                //   } else {\n                //     console.log(\"No such document!\");\n                //     navigation.navigate(\"SignUp\");\n                //   }\n                // });\n              })\n              .catch((err) => {\n                console.log(err);\n              });\n          });\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n      });\n  };\n\n  const checkUser = (data) => {\n    if (data == null) {\n      console.log(\"Doesnt Exist\");\n\n      firebase\n        .auth()\n        .currentUser?.getIdToken()\n        .then(function (idtoken) {\n          fetch(\"http://staging.clarolabs.in:7050/Ksearch/farmer/save\", {\n            method: \"post\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              authToken: idtoken,\n              crops: [\n                {\n                  name: \"Sugarcane\",\n                  estimatedYield: 5,\n\n                  harvestingTime: \"31/02/2022\",\n                },\n              ],\n              farmer: {\n                name: \"Evan Chatterjee\",\n                farmerImage: \"string\",\n                contactNo: \"string\",\n                village: \"string\",\n                block: \"string\",\n                district: \"string\",\n                state: \"string\",\n                totalLandSize: 20,\n                totalLandSizeUnit: \"Kattha\",\n                latitude: 0,\n                longitude: 0,\n              },\n            }),\n          });\n        })\n        .then(() => navigation.navigate(\"Homely\", { screen: \"Home\" }))\n        .catch((err) => console.log(err));\n    } else {\n      console.log(\"Exists\");\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <div id=\"recaptcha-container\"></div>\n      {/* <View style={{ width: \"100%\", backgroundColor: \"yellow\" }}>\n        <TextInput\n          placeholder=\"enter number\"\n          style={{\n            width: 200,\n            height: 50,\n            borderWidth: 2,\n            borderColor: \"green\",\n          }}\n          onChangeText={(e) => settemp(e)}\n        />\n        <Button title=\"Submit\" onPress={() => setnumber(temp)} />\n        <Button title=\"Click here\" onPress={() => handleClick()} />\n        <StatusBar style=\"auto\" />\n        <Text>{user}</Text>\n      </View> */}\n      <View\n        style={{\n          height: winHeight,\n          width: \"100%\",\n          backgroundColor: \"#346beb\",\n          flexDirection: \"column\",\n        }}\n      >\n        <View\n          style={{\n            height: \"20%\",\n\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            flexDirection: \"row\",\n          }}\n        >\n          <Image\n            source={require(\"../../assets/newIcon4.png\")}\n            style={{ height: 60, width: 60 }}\n          />\n          <Text style={{ marginLeft: 5, fontSize: 40, color: \"#fff\" }}>\n            Krisearch\n          </Text>\n        </View>\n        <View\n          style={{\n            width: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            margin: 10,\n          }}\n        >\n          <Text style={{ fontSize: 20, color: \"#fff\", fontWeight: 600 }}>\n            You are ready to go\n          </Text>\n        </View>\n\n        <View\n          style={{\n            height: \"60%\",\n            backgroundColor: \"#fff\",\n            borderWidth: 1,\n            width: winWidth < 768 ? \"90%\" : \"30%\",\n            borderColor: \"#fff\",\n            alignSelf: \"center\",\n            borderRadius: 10,\n            margin: 10,\n          }}\n        >\n          <View\n            style={{\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              padding: 10,\n              marginTop: 10,\n            }}\n          >\n            <Text style={{ fontSize: 25, fontWeight: \"bold\" }}>Sign In</Text>\n            {/* <SimpleLineIcons\n              name=\"close\"\n              size={25}\n              onPress={() => navigation.navigate(\"Landing\")}\n            /> */}\n          </View>\n          <View\n            style={{\n              padding: 10,\n              top: 20,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              width: \"100%\",\n            }}\n          >\n            <TextInput\n              placeholder=\"Enter your 10-digit number here\"\n              // style={{\n              //   width: \"70%\",\n              //   height: 40,\n              //   borderWidth: 1,\n              //   borderColor: \"#A9A9A9\",\n              //   borderRadius: 5,\n              //   padding: 5,\n              // }}\n              focusable={true}\n              style={\n                Platform.OS === \"web\" && {\n                  outlineColor: \"#fff\",\n                  height: 40,\n                  backgroundColor: \"white\",\n                  width: \"95%\",\n                  padding: 5,\n                  fontSize: 20,\n                  borderWidth: 1,\n                  borderBottomColor: \"#000\",\n                  borderColor: \"#fff\",\n                  borderRadius: 5,\n                  textAlign: \"center\",\n                }\n              }\n              onChangeText={(e) => setnumber(\"+91\" + e)}\n            />\n          </View>\n\n          {/* <Button title=\"Submit\" onPress={() => setnumber(temp)} /> */}\n\n          <View\n            style={{\n              padding: 10,\n              width: \"100%\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <TouchableOpacity\n              style={{\n                width: \"60%\",\n                height: 40,\n                alignItems: \"center\",\n                backgroundColor: \"#3ECF8E\",\n                borderWidth: 1,\n                borderRadius: 5,\n                top: 30,\n                borderColor: \"#3ECF8E\",\n                justifyContent: \"center\",\n              }}\n              onPress={() => {\n                setotpsent(true);\n                handleClick();\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 15,\n                  padding: 5,\n                  color: \"#fff\",\n                  fontWeight: \"700\",\n                }}\n              >\n                Get OTP\n              </Text>\n            </TouchableOpacity>\n            {/* {otpsent ? (\n              <View\n                style={{\n                  padding: 10,\n                  top: 20,\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  width: \"100%\",\n                }}\n              >\n                <TextInput\n                  placeholder=\"Enter the OTP\"\n                  // style={{\n                  //   width: \"70%\",\n                  //   height: 40,\n                  //   borderWidth: 1,\n                  //   borderColor: \"#A9A9A9\",\n                  //   borderRadius: 5,\n                  //   padding: 5,\n                  // }}\n                  style={\n                    Platform.OS === \"web\" && {\n                      outlineColor: \"#fff\",\n                      height: 40,\n                      backgroundColor: \"white\",\n                      width: \"95%\",\n                      padding: 5,\n                      fontSize: 20,\n                      borderWidth: 1,\n                      borderBottomColor: \"#000\",\n                      borderColor: \"#fff\",\n                      borderRadius: 5,\n                    }\n                  }\n                  onChangeText={(e) => settempCode(e)}\n                />\n                <TouchableOpacity\n                  style={{\n                    width: \"60%\",\n                    height: 40,\n                    alignItems: \"center\",\n                    backgroundColor: \"#3ECF8E\",\n                    borderWidth: 1,\n                    borderRadius: 5,\n                    top: 30,\n                    borderColor: \"#3ECF8E\",\n                    justifyContent: \"center\",\n                  }}\n                  onPress={() => {\n                    setgotCode(tempCode);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 15,\n                      padding: 5,\n                      color: \"#fff\",\n                      fontWeight: \"700\",\n                    }}\n                  >\n                    Verify and Login\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            ) : null} */}\n          </View>\n\n          <StatusBar style=\"auto\" />\n          {/* <Text>{user}</Text> */}\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Login;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#346beb\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TextInput,\n  TouchableOpacity,\n  FlatList,\n} from \"react-native\";\nimport firebase from \"../firebase/firebase\";\nimport PreData from \"../data/refFarmers.json\";\nimport { winHeight, winWidth } from \"../utils/window\";\nimport * as Location from \"expo-location\";\nimport Crops from \"../data/items.json\";\nimport dynamicForm from \"../components/dynamicForm\";\nimport DynamicForm from \"../components/dynamicForm\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  AntDesign,\n  FontAwesome5,\n  FontAwesome,\n  MaterialIcons,\n  Ionicons,\n} from \"@expo/vector-icons\";\n\nconst SignUp = ({ navigation }) => {\n  const [name, setname] = useState(\"\");\n  const [filled, setfilled] = useState(false);\n  const [location, setLocation] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [cropName, setcropName] = useState(\"\");\n  const [city, setcity] = useState(\"\");\n  const [district, setdistrict] = useState(\"\");\n  const [country, setcountry] = useState(\"\");\n  const [region, setregion] = useState(\"\");\n  const [locData, setlocData] = useState([]);\n  const [userName, setuserName] = useState(\"\");\n  const [lat, setlat] = useState(0);\n  const [long, setlong] = useState(0);\n  const [show, setshow] = useState(\"\");\n  const [qty, setqty] = useState(\"\");\n  const [hdate, sethdate] = useState(\"\");\n  const [filteredBlur, setfilteredBlur] = useState([]);\n  const [inputFields, setInputFields] = useState([\n    { name: \"\", harvestingTime: \"\", estimatedYield: 0 },\n  ]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"inputFields\", inputFields);\n    console.log(userName);\n    let phone = firebase.auth().currentUser?.phoneNumber;\n    firebase\n      .auth()\n      .currentUser?.getIdToken()\n      .then((idtoken) => {\n        fetch(\"http://staging.clarolabs.in:7050/Ksearch/farmer/save\", {\n          method: \"post\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            authToken: idtoken,\n            crops: inputFields,\n            farmer: {\n              name: userName,\n              farmerImage:\n                \"https://www.shareicon.net/data/512x512/2016/09/01/822718_user_512x512.png\",\n              contactNo: firebase.auth().currentUser?.phoneNumber,\n              village: city,\n              block: country,\n              district: district,\n              state: region,\n              totalLandSize: 0,\n              totalLandSizeUnit: \"Kattha\",\n              latitude: lat,\n              longitude: long,\n            },\n          }),\n        }).then(() => navigation.navigate(\"Homely\", { screen: \"Home\" }));\n      });\n  };\n\n  const handleInputChange = (index, event) => {\n    const values = [...inputFields];\n    if (event.target.name === \"name\") {\n      values[index].name = event.target.value;\n    } else if (event.target.name === \"estimatedYield\") {\n      values[index].estimatedYield = Number(event.target.value);\n    } else {\n      values[index].harvestingTime = event.target.value;\n    }\n\n    setInputFields(values);\n  };\n\n  const handleAddFields = () => {\n    const values = [...inputFields];\n    values.push({ name: \"\", harvestingTime: \"\", estimatedYield: \"\" });\n    setInputFields(values);\n  };\n\n  const handleRemoveFields = (index) => {\n    const values = [...inputFields];\n    values.splice(index, 1);\n    setInputFields(values);\n  };\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        cropName: show,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => setfilteredBlur(data.data.list));\n  }, [show]);\n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestPermissionsAsync();\n      if (status !== \"granted\") {\n        setErrorMsg(\"Permission to access location was denied\");\n        return;\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n      setLocation(location);\n    })();\n  }, []);\n\n  let text = \"Waiting..\";\n  if (errorMsg) {\n    text = \"errorMsg\";\n  } else if (location != null) {\n    console.log(location);\n    Location.setGoogleApiKey(\"AIzaSyBM1KjPdMGHYcIiXTbDl4v_GAAjbOO6OPA\");\n    Location.reverseGeocodeAsync({\n      latitude: location.coords.latitude,\n      longitude: location.coords.longitude,\n    })\n      .then((e) => {\n        console.log(e[0]);\n        setcity(e[0].city);\n        setdistrict(e[0].district);\n        setregion(e[0].region);\n        setcountry(e[0].name);\n        setlat(location.coords.latitude);\n        setlong(location.coords.longitude);\n        console.log(city, district, region, country);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  text = JSON.stringify(location);\n  console.log(text);\n\n  text = JSON.stringify(location);\n  console.log(text);\n\n  console.log(\"Reached Signup\");\n\n  const getCrop = (e) => {\n    Crops.map((item) => {\n      if (item.name.toLocaleLowerCase().includes(e.toLowerCase())) {\n        console.log(item.name);\n      }\n    });\n  };\n\n  const renderMatch = ({ item }) => (\n    <TouchableOpacity\n      style={{\n        width: winWidth > 767 ? \"50%\" : \"97%\",\n        height: 50,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        margin: 2,\n        padding: 5,\n        borderWidth: 1,\n        borderColor: \"#fff\",\n        borderRadius: 10,\n        backgroundColor: \"#fff\",\n        alignSelf: \"center\",\n      }}\n      onPress={() => console.log(item.name)}\n    >\n      <Image\n        source={{ uri: item.cropImage }}\n        style={{\n          width: 45,\n          height: 45,\n          borderWidth: 1,\n          borderColor: \"green\",\n          borderRadius: 45,\n        }}\n      />\n      <Text style={{ fontSize: 20, marginLeft: 5 }}>{item.name}</Text>\n    </TouchableOpacity>\n  );\n  return (\n    <View style={[styles.container, { backgroundColor: \"#fff\" }]}>\n      <View\n        style={{ height: winHeight, width: \"100%\", backgroundColor: \"#fff\" }}\n      >\n        <View\n          style={{\n            height: \"15%\",\n            backgroundColor: \"transparent\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            flexDirection: \"row\",\n          }}\n        >\n          <Image\n            source={require(\"../../assets/newIcon6.png\")}\n            style={{ height: 40, width: 40 }}\n          />\n          <Text style={{ marginLeft: 5, fontSize: 30, color: \"#000\" }}>\n            Krisearch\n          </Text>\n        </View>\n\n        <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n          <Text style={{ fontSize: 18 }}>Create your account</Text>\n          <Text style={{ color: \"green\" }}>\n            Number successfully verified. Lets get started\n          </Text>\n        </View>\n        <View\n          style={{\n            width: \"100%\",\n            height: \"20%\",\n\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginTop: 20,\n            borderBottomWidth: 1,\n            borderBottomColor: \"#d6d6d6\",\n          }}\n        >\n          <Text\n            style={{\n              fontSize: 16,\n            }}\n          >\n            Please tell us your name\n          </Text>\n          <TextInput\n            style={{\n              width: winWidth < 768 ? \"80%\" : 200,\n              height: 40,\n              borderWidth: 1,\n              borderColor: \"#D3D3D3\",\n              padding: 10,\n              marginTop: 10,\n              borderRadius: 5,\n              outlineColor: \"#fff\",\n            }}\n            onChangeText={(e) => setuserName(e)}\n            placeholder=\"Enter your name\"\n          />\n          {/* <TouchableOpacity\n            style={{\n              width: \"80%\",\n              height: 35,\n              backgroundColor: \"#3ECF8E\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              padding: 5,\n              borderRadius: 5,\n              borderColor: \"#3ECF8E\",\n              borderWidth: 2,\n              flexDirection: \"row\",\n              marginTop: 15,\n            }}\n          >\n            <Entypo name=\"location\" size={24} color=\"#fff\" />\n            <Text\n              style={{\n                fontSize: 16,\n                color: \"#fff\",\n                marginLeft: 10,\n              }}\n            >\n              Share Location\n            </Text>\n          </TouchableOpacity> */}\n          {/* <Text>SignUp Form</Text>\n          <Text>{text}</Text> */}\n          <View\n            style={{\n              width: \"100%\",\n              backgroundColor: \"yellow\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"space-evenly\",\n            }}\n          >\n            <Text>{city !== \"\" || null ? city : \"Loading\"}</Text>\n            <Text>{district !== \"\" || null ? district : \"Loading\"}</Text>\n            <Text>{region !== \"\" || null ? region : \"Loading\"}</Text>\n            <Text>{country !== \"\" || null ? country : \"Loading\"}</Text>\n          </View>\n        </View>\n        <View\n          style={{\n            width: \"100%\",\n            padding: 10,\n            marginTop: 15,\n          }}\n        >\n          <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n            <Text\n              style={{\n                fontSize: 16,\n              }}\n            >\n              List your crops below\n            </Text>\n          </View>\n\n          <>\n            <form onSubmit={handleSubmit}>\n              <View\n                style={{\n                  borderWidth: 1,\n\n                  borderColor: \"#f5f5f5\",\n                  width: \"100%\",\n                  marginBottom: 5,\n                  borderRadius: 5,\n                  marginTop: 5,\n                }}\n              >\n                <div className=\"form-row\">\n                  {inputFields.map((inputField, index) => (\n                    <Fragment key={`${inputField}~${index}`}>\n                      <View\n                        style={{\n                          flexDirection: \"column\",\n                          alignItems: \"flex-start\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        <View\n                          style={{\n                            width: \"100%\",\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                          }}\n                        >\n                          <View style={{ width: \"90%\", marginRight: 10 }}>\n                            <div className=\"form-group col-sm-6\">\n                              {/* <label htmlFor=\"firstName\">First Name</label> */}\n\n                              <input\n                                style={{\n                                  width: \"90%\",\n                                  height: 30,\n                                  margin: 3,\n                                  borderWidth: 1,\n                                  outlineColor: \"#fff\",\n                                  borderRadius: 5,\n                                }}\n                                placeholder=\"Type to add crop\"\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"name\"\n                                name=\"name\"\n                                value={inputField.name}\n                                onChange={(event) => {\n                                  handleInputChange(index, event);\n                                  setshow(event);\n                                }}\n                              />\n                              {/* {show !== \"\" ? (\n                                <FlatList\n                                  showsVerticalScrollIndicator={false}\n                                  data={filteredBlur}\n                                  renderItem={renderMatch}\n                                  ListEmptyComponent={() => (\n                                    <Text style={{ fontSize: 30 }}>\n                                      {\" \"}\n                                      Oops ! Didnt find that\n                                    </Text>\n                                  )}\n                                  contentContainerStyle={{\n                                    width: \"100%\",\n                                  }}\n                                />\n                              ) : null} */}\n                            </div>\n                          </View>\n\n                          <AntDesign\n                            style={{ marginRight: 10 }}\n                            name=\"delete\"\n                            size={24}\n                            color=\"#ff7878\"\n                            onPress={() => {\n                              handleRemoveFields(index);\n                            }}\n                          />\n                        </View>\n                        <View\n                          style={{\n                            flexDirection: \"row\",\n                            width: \"90%\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                          }}\n                        >\n                          <div className=\"form-group col-sm-4\">\n                            {/* <label htmlFor=\"lastName\">Last Name</label> */}\n                            <input\n                              style={{\n                                width: \"85%\",\n                                height: 25,\n                                margin: 3,\n                                outlineColor: \"#fff\",\n                              }}\n                              placeholder=\"Quantity\"\n                              type=\"text\"\n                              className=\"form-control\"\n                              id=\"estimatedYield\"\n                              name=\"estimatedYield\"\n                              value={inputField.estimatedYield}\n                              onChange={(event) =>\n                                handleInputChange(index, event)\n                              }\n                            />\n                          </div>\n                          <div className=\"form-group col-sm-4\">\n                            {/* <label htmlFor=\"date\">Date</label> */}\n\n                            <input\n                              style={{\n                                width: \"85%\",\n                                height: 25,\n                                marginLeft: -10,\n                                outlineColor: \"#fff\",\n                              }}\n                              placeholder=\"Harvest Date\"\n                              type=\"text\"\n                              className=\"form-control\"\n                              id=\"harvestingTime\"\n                              name=\"harvestingTime\"\n                              value={inputField.harvestingTime}\n                              onChange={(event) =>\n                                handleInputChange(index, event)\n                              }\n                            />\n                          </div>\n                        </View>\n                      </View>\n                    </Fragment>\n                  ))}\n                </div>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  width: \"100%\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                {/* <View>\n                  <button\n                    className=\"btn btn-primary mr-2\"\n                    type=\"submit\"\n                    onSubmit={handleSubmit}\n                    style={{\n                      width: 100,\n                      height: 30,\n                      alignItems: \"center\",\n                      backgroundColor: \"#8f98ff\",\n                      borderWidth: 1.5,\n                      borderRadius: 5,\n                      marginLeft: 10,\n                      marginTop: 10,\n                      borderColor: \"#3A48ED\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    <Text style={{ color: \"#fff\", fontWeight: \"500\" }}>\n                      {\" \"}\n                      Done\n                    </Text>\n                  </button>\n                </View> */}\n                <TouchableOpacity\n                  style={{\n                    width: \"100%\",\n                    height: 35,\n                    alignItems: \"center\",\n                    backgroundColor: \"#fff\",\n                    borderWidth: 1,\n                    borderRadius: 5,\n                    marginTop: 10,\n                    borderColor: \"#3A48ED\",\n                    justifyContent: \"center\",\n                  }}\n                  onPress={() => {\n                    handleAddFields();\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 15,\n                      padding: 5,\n                      color: \"#3A48ED\",\n                      fontWeight: \"700\",\n                    }}\n                  >\n                    + Add Crop\n                  </Text>\n                </TouchableOpacity>\n              </View>\n              <div className=\"submit-button\">\n                <TouchableOpacity\n                  style={{\n                    width: \"100%\",\n                    height: 35,\n                    alignItems: \"center\",\n                    backgroundColor: \"#3ECF8E\",\n                    borderWidth: 1,\n                    borderRadius: 5,\n                    marginTop: 10,\n                    borderColor: \"#3ECF8E\",\n                    justifyContent: \"center\",\n                  }}\n                  onPress={handleSubmit}\n                >\n                  <Text\n                    style={{\n                      fontSize: 15,\n                      padding: 5,\n                      color: \"#fff\",\n                      fontWeight: \"700\",\n                    }}\n                  >\n                    Submit\n                  </Text>\n                </TouchableOpacity>\n              </div>\n              <br />\n              <pre>{JSON.stringify(inputFields, null, 2)}</pre>\n            </form>\n          </>\n        </View>\n      </View>\n\n      {/* {preCheck} */}\n\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n};\n\nexport default SignUp;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#346beb\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n  FlatList,\n} from \"react-native\";\nimport Header from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport firebase from \"../firebase/firebase\";\nimport { firestore } from \"firebase\";\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  AntDesign,\n  FontAwesome5,\n  FontAwesome,\n  MaterialIcons,\n} from \"@expo/vector-icons\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { TextInput } from \"react-native-gesture-handler\";\n\nconst Test = ({ navigation }) => {\n  const [inputFields, setInputFields] = useState([\n    { name: \"\", harvestingTime: \"\", estimatedYield: 0 },\n  ]);\n\n  const [show, setshow] = useState(\"\");\n  const [selected, setselected] = useState(\"\");\n  const [crops, setcrops] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"inputFields\", inputFields);\n  };\n\n  const handleInputChange = (index, event) => {\n    const values = [...inputFields];\n    if (event.target.name === \"name\") {\n      values[index].name = event.target.value;\n    } else if (event.target.name === \"estimatedYield\") {\n      values[index].estimatedYield = Number(event.target.value);\n    } else {\n      values[index].harvestingTime = event.target.value;\n    }\n\n    setInputFields(values);\n  };\n\n  const handleAddFields = () => {\n    const values = [...inputFields];\n    values.push({ name: \"\", harvestingTime: \"\", estimatedYield: \"\" });\n    setInputFields(values);\n  };\n\n  const handleRemoveFields = (index) => {\n    const values = [...inputFields];\n    values.splice(index, 1);\n    setInputFields(values);\n  };\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        cropName: show,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data.data.list), setcrops(data.data.list);\n      });\n  }, [show]);\n\n  const cropSearch = (n) => {\n    setselected(n);\n  };\n\n  const renderMatch = ({ item }) => (\n    <TouchableOpacity\n      style={{\n        width: winWidth > 767 ? \"50%\" : \"97%\",\n        height: 50,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        margin: 2,\n        padding: 5,\n        borderWidth: 1,\n        borderColor: \"#000\",\n        borderRadius: 10,\n        backgroundColor: \"#fff\",\n        alignSelf: \"center\",\n      }}\n      onPress={() => cropSearch(item.name)}\n    >\n      <Image\n        source={{ uri: item.cropImage }}\n        style={{\n          width: 45,\n          height: 45,\n          borderWidth: 1,\n          borderColor: \"green\",\n          borderRadius: 45,\n        }}\n      />\n      <Text style={{ fontSize: 20, marginLeft: 5 }}>{item.name}</Text>\n    </TouchableOpacity>\n  );\n  return (\n    <View\n      style={{\n        flex: 1,\n        backgroundColor: \"white\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Text>{selected == null || selected == \"\" ? \"Null\" : selected}</Text>\n      <TextInput\n        style={{ borderWidth: 1, width: 100, height: 30 }}\n        onChangeText={(e) => setshow(e)}\n      />\n      {show !== \"\" ? (\n        <FlatList\n          showsVerticalScrollIndicator={false}\n          data={crops}\n          renderItem={renderMatch}\n          ListEmptyComponent={() => (\n            <Text style={{ fontSize: 30 }}> Oops ! Didnt find that</Text>\n          )}\n          contentContainerStyle={{\n            width: \"100%\",\n          }}\n        />\n      ) : null}\n    </View>\n  );\n};\n\nexport default Test;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { winWidth, winHeight } from \"./src/utils/window\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Home from \"./src/screens/HomeScreen\";\nimport Search from \"./src/screens/SearchScreen\";\nimport Welcome from \"./src/screens/SplashScreen\";\nimport Header from \"../claro_krisearch/src/components/header\";\nimport Profile from \"./src/screens/ProfileScreen\";\nimport { Feather } from \"@expo/vector-icons\";\nimport Landing from \"./src/screens/LandingScreen\";\nimport Login from \"./src/screens/Login\";\nimport { auth } from \"firebase\";\nimport SignUp from \"./src/screens/SignUp\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport Test from \"./src/screens/testScreen\";\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\nconst Drawer = createDrawerNavigator();\n\nfunction MyTabBar({ state, descriptors, navigation }) {\n  const focusedOptions = descriptors[state.routes[state.index].key].options;\n\n  if (focusedOptions.tabBarVisible === false) {\n    return null;\n  }\n\n  return (\n    <KeyboardAvoidingView>\n      <View style={{ flexDirection: \"row\" }}>\n        {state.routes.map((route, index) => {\n          const { options } = descriptors[route.key];\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const isFocused = state.index === index;\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: \"tabPress\",\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!isFocused && !event.defaultPrevented) {\n              navigation.navigate(route.name);\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: \"tabLongPress\",\n              target: route.key,\n            });\n          };\n\n          // if (index === 1) {\n          //   return (\n          //     <TouchableOpacity\n          //       accessibilityRole=\"button\"\n          //       accessibilityState={isFocused ? { selected: true } : {}}\n          //       accessibilityLabel={options.tabBarAccessibilityLabel}\n          //       testID={options.tabBarTestID}\n          //       onPress={onPress}\n          //       onLongPress={onLongPress}\n          //       style={{\n          //         flex: 1,\n          //         justifyContent: \"center\",\n          //         alignItems: \"center\",\n          //         height: 65,\n          //         width: 65,\n          //         backgroundColor: isFocused ? \"#346beb\" : \"#fff\",\n          //         position: \"absolute\",\n          //         left: winWidth / 2 - 30,\n          //         bottom: 15,\n          //         margin: 5,\n          //         borderRadius: 35,\n          //         borderWidth: 2,\n          //         borderColor: isFocused ? \"#fff\" : \"#deebff\",\n          //       }}\n          //     >\n          //       {/* <Text style={{ color: isFocused ? \"#673ab7\" : \"#222\" }}>\n          //       {label}\n          //     </Text> */}\n          //       <Feather\n          //         name=\"search\"\n          //         size={30}\n          //         color={isFocused ? \"#fff\" : \"#346beb\"}\n          //       />\n          //     </TouchableOpacity>\n          //   );\n          // }\n\n          return (\n            <TouchableOpacity\n              accessibilityRole=\"button\"\n              accessibilityState={isFocused ? { selected: true } : {}}\n              accessibilityLabel={options.tabBarAccessibilityLabel}\n              testID={options.tabBarTestID}\n              onPress={onPress}\n              onLongPress={onLongPress}\n              style={{\n                flex: 1,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: 45,\n                padding: 5,\n                backgroundColor: \"#fff\",\n              }}\n            >\n              {/* <Text style={{ color: isFocused ? \"#673ab7\" : \"#222\" }}>\n              {label}\n            </Text> */}\n\n              <View>\n                {index == 0 ? (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      borderWidth: 2,\n                      backgroundColor: isFocused ? \"#deebff\" : \"transparent\",\n                      borderColor: isFocused ? \"#deebff\" : \"transparent\",\n                      width: \"110%\",\n                      borderRadius: 20,\n                      padding: 5,\n                    }}\n                  >\n                    <Feather\n                      name=\"home\"\n                      size={20}\n                      color={isFocused ? \"#346beb\" : \"#222\"}\n                    />\n                    {isFocused ? (\n                      <Text\n                        style={{\n                          fontSize: 16,\n                          marginLeft: 15,\n                          color: \"#346beb\",\n                        }}\n                      >\n                        {label}\n                      </Text>\n                    ) : null}\n                  </View>\n                ) : (\n                  <View>\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        borderWidth: 2,\n                        backgroundColor: isFocused ? \"#deebff\" : \"transparent\",\n                        borderColor: isFocused ? \"#deebff\" : \"transparent\",\n                        width: \"110%\",\n                        borderRadius: 20,\n                        padding: 5,\n                      }}\n                    >\n                      <Feather\n                        name=\"user\"\n                        size={20}\n                        color={isFocused ? \"#346beb\" : \"#222\"}\n                      />\n                      {isFocused ? (\n                        <Text\n                          style={{\n                            fontSize: 14,\n                            marginLeft: 15,\n                            color: \"#346beb\",\n                          }}\n                        >\n                          {label}\n                        </Text>\n                      ) : null}\n                    </View>\n                  </View>\n                )}\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n    </KeyboardAvoidingView>\n  );\n}\n\nfunction Homely() {\n  return (\n    <Tab.Navigator tabBar={MyTabBar}>\n      <Tab.Screen name=\"Home\" component={Home} />\n      <Tab.Screen name=\"Profile\" component={Profile} />\n    </Tab.Navigator>\n  );\n}\n\nfunction MyDrawer() {\n  return (\n    <Drawer.Navigator>\n      <Drawer.Screen name=\"Home\" component={Home} />\n      <Drawer.Screen name=\"Profile\" component={Profile} />\n    </Drawer.Navigator>\n  );\n}\n\nconst App = () => {\n  const [user, setuser] = useState(null);\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        screenOptions={{\n          headerStyle: {\n            backgroundColor: \"#346beb\",\n          },\n          headerTintColor: \"#fff\",\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n          headerShown: false,\n        }}\n      >\n        {/* <Stack.Screen\n          name=\"Welcome\"\n          component={Welcome}\n          options={{ headerShown: false }}\n        /> */}\n\n        <Stack.Screen\n          name=\"Landing\"\n          component={Landing}\n          options={{\n            title: \"Krisearch\",\n          }}\n        />\n        <Stack.Screen\n          name=\"Login\"\n          component={Login}\n          options={{\n            title: \"Krisearch\",\n          }}\n        />\n        <Stack.Screen\n          name=\"Test\"\n          component={Test}\n          options={{\n            title: \"Krisearch\",\n          }}\n        />\n        <Stack.Screen\n          name=\"SignUp\"\n          component={SignUp}\n          options={{\n            title: \"SignUp\",\n          }}\n        />\n        {/* {winWidth > 768 ? (\n          <Drawer.Screen name=\"MyDrawer\" component={MyDrawer} />\n        ) : (\n          <Stack.Screen name=\"Homely\" component={Homely} />\n        )} */}\n        <Stack.Screen name=\"Homely\" component={Homely} />\n        {/* <Stack.Screen\n          name=\"Home\"\n          component={Home}\n          options={{\n            title: \"Krisearch\",\n          }}\n        /> */}\n        {/* <Stack.Screen name=\"Search\" component={Search} /> */}\n\n        {/* <Stack.Screen\n          name=\"Profile\"\n          component={Profile}\n          options={{\n            title: \"Profile\",\n          }}\n        /> */}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/newicon4.57719745.png\";","module.exports = __webpack_public_path__ + \"static/media/i1.8211ac32.png\";","module.exports = __webpack_public_path__ + \"static/media/i3.a1e5f140.png\";","module.exports = __webpack_public_path__ + \"static/media/i2.65396ed0.png\";","module.exports = __webpack_public_path__ + \"static/media/newIcon6.3b0c0b69.png\";"],"sourceRoot":""}