{"version":3,"sources":["src/utils/window.ts","src/components/header.tsx","src/utils/hideNumber.ts","src/components/Card.tsx","src/utils/getSmallString.ts","src/screens/HomeScreen.tsx","src/screens/SearchScreen.tsx","src/screens/SplashScreen.tsx","src/screens/ProfileScreen.tsx","App.tsx","assets/newicon2.png","assets/icon1.png"],"names":["winHeight","Dimensions","get","height","winWidth","width","Header","props","onTap","onLogoTap","onFilter","filterShown","View","style","styles","header","top","flexDirection","alignSelf","alignItems","justifyContent","padding","TouchableOpacity","onFocus","Image","source","uri","require","Text","headerText","backgroundColor","borderRadius","TextInput","fontSize","outlineColor","marginTop","placeholder","placeholderTextColor","AntDesign","name","size","color","borderColor","marginLeft","onPress","StyleSheet","create","fontWeight","hideNumber","phone","a","toString","split","splice","Card","avatar","crop","address","isCrop","cropAvatar","windowWidth","borderWidth","margin","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","Entypo","getSmallString","str","length","substring","Home","navigation","useState","farmer","setfarmer","modalizeRef","useRef","onClose","current","close","setcrop","farmers","setfarmers","setmodalName","firstScroll","setfirstScroll","selectedState","val","setval","addr","setaddr","term","filteractive","setfilteractive","addrToggle","setaddrToggle","merge","setmerge","dater","setdater","Date","startDate","setStartDate","endDate","setEndDate","console","log","useEffect","fetch","method","headers","Accept","body","JSON","stringify","gender","harvestDate","state","then","response","json","data","list","slice","catch","error","renderItems","item","key","id","farmerName","farmerImage","crops","map","i","cropName","quantity","open","onOpen","filteredFarmers","Data","filter","toLocaleLowerCase","includes","toLowerCase","type","genderFilter","addrFilter","harvestResult","dt","mergeResult","modalizeFilterRef","onCloseFilter","container","navigate","onOpenfilter","FlatList","showsVerticalScrollIndicator","renderItem","ListEmptyComponent","contentContainerStyle","flexWrap","ActivityIndicator","onEndReached","ref","modalHeight","threshold","modalStyle","closeOnOverlayTap","mod","cIndex","marginRight","SimpleLineIcons","Feather","land","alert","FontAwesome5","FontAwesome","text","buttonContainer","circle","checkedCircle","minWidth","States","code","buttonnewContainer","zIndex","flex","dateFormat","selected","onChange","date","customInput","Search","blur","setblur","setterm","placer","setplacer","hideFAB","sethideFAB","parent","setparent","renderFarmers","filteredCrops","filteredParents","flat","borderTopLeftRadius","borderTopRightRadius","ScrollView","bounces","image","position","tint","intensity","absoluteFill","nonBlurredContent","Platform","OS","autoFocus","editable","onChangeText","dynamic","setSearch","right","Welcome","setTimeout","replace","StatusBar","Profile","Button","title","Stack","createStackNavigator","Tab","createBottomTabNavigator","MyTabBar","descriptors","routes","index","options","tabBarVisible","KeyboardAvoidingView","route","label","undefined","tabBarLabel","isFocused","event","emit","target","canPreventDefault","defaultPrevented","onLongPress","accessibilityRole","accessibilityState","accessibilityLabel","tabBarAccessibilityLabel","testID","tabBarTestID","left","bottom","App","NavigationContainer","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","headerShown","Screen","component","tabBar","tabBarOptions","keyboardHidesTabBar","module","exports"],"mappings":"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","file":"static/js/app.07de0a02.chunk.js","sourcesContent":["import { Dimensions } from 'react-native';\nexport const winHeight = Dimensions.get(\"window\").height;\n\nexport const winWidth = Dimensions.get(\"window\").width;\n","import React from \"react\";\nimport {\n  Button,\n  TextInput,\n  Dimensions,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n} from \"react-native\";\n\nimport { winWidth } from \"../utils/window\";\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  FontAwesome5,\n  FontAwesome,\n  AntDesign,\n} from \"@expo/vector-icons\";\n\nconst windowHeight = Dimensions.get(\"screen\").height;\nconst windowWidth = Dimensions.get(\"screen\").width;\n\nexport interface HeaderProps {\n  onTap(): any;\n  onLogoTap(): any;\n  filterShown?: boolean;\n  onFilter(): any;\n  // catTap(): any;\n}\n\nconst Header = (props: HeaderProps) => {\n  const { onTap, onLogoTap, filterShown, onFilter } = props;\n  return (\n    <View style={styles.header}>\n      <View\n        style={{\n          width: \"100%\",\n          top: winWidth > 767 ? 0 : 10,\n          height: \"100%\",\n          flexDirection: \"row\",\n          alignSelf: \"flex-start\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          padding: winWidth > 767 ? 5 : 1,\n        }}\n      >\n        <TouchableOpacity\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"flex-start\",\n            justifyContent: \"flex-start\",\n            top: winWidth > 767 ? 5 : 10,\n          }}\n          onFocus={onLogoTap}\n        >\n          <Image\n            source={{ uri: require(\"../../assets/newicon2.png\") }}\n            style={{ width: 30, height: 30, top: -2 }}\n          />\n          <Text style={styles.headerText}>Krisearch</Text>\n        </TouchableOpacity>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: winWidth > 767 ? \"flex-start\" : \"flex-end\",\n            width: \"69%\",\n            justifyContent: winWidth > 767 ? \"flex-start\" : \"flex-end\",\n          }}\n        >\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              backgroundColor: \"#fff\",\n              width: winWidth > 767 ? \"55%\" : \"65%\",\n              height: 40,\n              padding: 5,\n              justifyContent: \"space-between\",\n              borderRadius: 10,\n              top: winWidth > 767 ? null : 3,\n            }}\n          >\n            <TextInput\n              style={{\n                width: winWidth > 767 ? \"90%\" : \"95%\",\n                height: winWidth > 767 ? 40 : 35,\n                fontSize: winWidth > 767 ? 16 : 16,\n                backgroundColor: \"#fff\",\n                outlineColor: \"#fff\",\n                borderRadius: 10,\n                padding: 5,\n                marginTop: winWidth < 767 ? 0 : 0,\n              }}\n              placeholder=\"Search for Crops\"\n              placeholderTextColor=\"\t#808080\"\n              onFocus={onTap}\n            />\n            <AntDesign name=\"search1\" size={20} color=\"#808080\" />\n          </View>\n\n          <AntDesign\n            name=\"filter\"\n            size={25}\n            style={{\n              alignSelf: \"center\",\n              borderColor: \"#deebff\",\n              width: 40,\n              height: 40,\n              marginLeft: 10,\n              alignItems: \"center\",\n              marginTop: winWidth < 767 ? 10 : -5,\n              justifyContent: \"center\",\n              padding: 11,\n              borderRadius: 40,\n            }}\n            color=\"#deebff\"\n            onPress={onFilter}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Header;\n\nconst styles = StyleSheet.create({\n  header: {\n    width: \"100%\",\n    height: winWidth > 767 ? 70 : 90,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"#346beb\",\n    padding: 5,\n  },\n  headerText: {\n    fontSize: winWidth > 767 ? 22 : 20,\n    color: \"#fff\",\n    fontWeight: \"600\",\n    marginLeft: 2,\n    alignSelf: \"flex-start\",\n  },\n});\n","const hideNumber = (phone : number)=>{\n    var a=[];\n    var b;\n    var c;\n    var newString=[];\n    let i=0;\n\n    a = phone.toString().split('');\n   \n    a.splice(1,0,\"X\");\n    a.splice(3,2,\"X\");\n    a.splice(6,5,\"X\");\n    a.splice(1,0,\"X\");\n   \n    \n    return a;\n\n    \n\n\n}\n\nexport default hideNumber","import { Entypo, MaterialIcons, SimpleLineIcons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Dimensions,\n  Image,\n} from \"react-native\";\nimport getSmallString from \"../utils/getSmallString\";\nimport hideNumber from \"../utils/hideNumber\";\n\nexport interface CardProps {\n  name: string;\n  avatar?: string;\n  crop?: string;\n  phone?: number;\n  address?: string;\n  onPress: any;\n  cropAvatar?: string;\n  isCrop?: boolean;\n}\n\nexport default function Card(props: CardProps) {\n  const {\n    name,\n    avatar,\n    crop,\n    phone,\n    address,\n    onPress,\n    cropAvatar,\n    isCrop,\n  } = props;\n\n  const windowWidth = Dimensions.get(\"window\").width;\n  const cardWidth = windowWidth / 2 - 30;\n\n  return (\n    <TouchableOpacity onPress={() => onPress()}>\n      <View\n        style={\n          windowWidth > 767\n            ? {\n                width: 200,\n                height: 185,\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderColor: \"#fff\",\n                borderRadius: 10,\n                alignItems: \"center\",\n                margin: 5,\n                marginBottom: 5,\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 3,\n                },\n                shadowOpacity: 0.15,\n                shadowRadius: 2.22,\n\n                elevation: 3,\n              }\n            : {\n                width: windowWidth * 0.45,\n                height: 185,\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderColor: \"#fff\",\n                borderRadius: 10,\n                alignItems: \"center\",\n                margin: 6,\n\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 3,\n                },\n                shadowOpacity: 0.15,\n                shadowRadius: 2.22,\n\n                elevation: 3,\n              }\n        }\n      >\n        <Image\n          source={{ uri: avatar }}\n          style={\n            !isCrop\n              ? {\n                  width: 105,\n                  height: 105,\n                  borderWidth: 1,\n                  borderColor: \"#fff\",\n                  borderRadius: 105,\n                }\n              : {\n                  width: 140,\n                  height: 140,\n                  borderWidth: 1,\n                  borderColor: \"#fff\",\n                  borderRadius: 100,\n                }\n          }\n        />\n        <Text style={{ fontWeight: \"500\", fontSize: 16, marginTop: 10 }}>\n          {name}\n        </Text>\n\n        {!isCrop ? (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-evenly\",\n              alignItems: \"center\",\n              marginTop: 5,\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Text> {crop}</Text>\n            </View>\n            <Entypo name=\"dot-single\" size={15} style={{ marginTop: 5 }} />\n            <View>\n              <Text>{address}</Text>\n            </View>\n          </View>\n        ) : null}\n\n        {!isCrop ? (\n          <View>\n            <Text>{phone ? hideNumber(phone) : \"Not available\"}</Text>\n          </View>\n        ) : null}\n      </View>\n    </TouchableOpacity>\n  );\n}\n","const getSmallString=(str : string)=>{\n    if(str.length>20){\n        str =str.substring(0,19)+\"...\";\n        return str;\n    }\n    else{\n        return str\n    }\n}\n\nexport default getSmallString","import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  Dimensions,\n  ScrollView,\n  StyleSheet,\n  Text,\n  Image,\n  TouchableOpacity,\n  View,\n  ActivityIndicator,\n  FlatList,\n} from \"react-native\";\nimport Header, { HeaderProps } from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport Farmers from \"../data/farmers.json\";\nimport Crops from \"../data/items.json\";\nimport { Modalize } from \"react-native-modalize\";\nimport Card from \"../components/Card\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  AntDesign,\n  FontAwesome5,\n  FontAwesome,\n} from \"@expo/vector-icons\";\nimport hideNumber from \"../utils/hideNumber\";\nimport getSmallString from \"../utils/getSmallString\";\nimport States from \"../data/states.json\";\nimport Data from \"../data/items.json\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { render } from \"react-dom\";\n\nconst Home = ({ navigation }) => {\n  const [farmer, setfarmer] = useState(0);\n  const modalizeRef = useRef<Modalize>(null);\n\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onClose = () => {\n    modalizeRef.current?.close();\n  };\n\n  const genderData = [\n    {\n      key: \"m\",\n      text: \"Men\",\n    },\n    {\n      key: \"f\",\n      text: \"Women\",\n    },\n  ];\n\n  const [isLoading, setLoading] = useState(true);\n  const [sata, setSata] = useState([]);\n\n  const cropper = \"rice\";\n\n  const [crop, setcrop] = useState([]);\n  const [farmers, setfarmers] = useState([]);\n  const [modalName, setmodalName] = useState(\"\");\n  const [firstScroll, setfirstScroll] = useState(0);\n  const [selectedState, setselectedState] = useState(\"\");\n  const [cats, setcats] = useState(false);\n  const [val, setval] = useState(\"\");\n  const [addr, setaddr] = useState(\"\");\n  const [term, setterm] = useState(\"\");\n  const [filteractive, setfilteractive] = useState(false);\n  const [addrToggle, setaddrToggle] = useState(false);\n  const [merge, setmerge] = useState(false);\n  const [dater, setdater] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n\n  // useEffect(() => {\n  //   fetch(\"http://staging.clarolabs.in:7050/b2bRequirement/fetch/crops\", {\n  //     method: \"post\",\n  //     headers: {\n  //       Accept: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify({\n  //       name: cropper,\n  //     }),\n  //   })\n  //     .then((response) => console.log(response.json()))\n  //     .then((data) => console.log(data))\n  //     .catch((error) => console.error(error));\n  // }, []);\n  console.log(\"REACHING HOME\");\n\n  useEffect(() => {\n    fetch(\"https://maps.claroenergy.in/Ksearch/fetch/farmers\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        gender: null,\n        harvestDate: null,\n        state: selectedState,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => setfarmers(data.data.list.slice(0, firstScroll + 24)))\n      .catch((error) => console.error(error));\n  }, [firstScroll]);\n\n  useEffect(() => {\n    fetch(\"https://maps.claroenergy.in/Ksearch/fetch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: cropper,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => setcrop(data.data.list))\n      .catch((error) => console.error(error));\n  }, []);\n\n  console.log(crop);\n  console.log(farmers);\n\n  const selectState = () => {\n    States.map((item) => {\n      console.log(item.name);\n      farmers.map((i) => {\n        console.log(i.state);\n        if (\n          item.name.toString().toLowerCase() ===\n          i.state.toString().toLowerCase()\n        ) {\n          setselectedState(item.name);\n        }\n      });\n    });\n  };\n\n  const selectCrop = () => {};\n\n  const handleLoad = () => {\n    setfirstScroll(firstScroll + 18);\n  };\n\n  const renderItems = ({ item }) => (\n    <Card\n      key={item.id}\n      name={item.farmerName}\n      avatar={item.farmerImage}\n      phone={item.phone}\n      address={item.state}\n      crop={item.crops.map((i) => i.cropName)}\n      onPress={() => {\n        console.log(item.farmerName),\n          setfarmer(item.id),\n          console.log(item.crops.map((i) => i.quantity));\n        onOpen(), setmodalName(item.farmerName);\n      }}\n    />\n  );\n\n  const filteredCrops = Data.filter((item) => {\n    return item.name.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredParents = Data.filter((item) => {\n    return item.type.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredFarmers = farmers.filter((item) => {\n    let a = item.crops.map((i) => i.cropName);\n    return a.toString().toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const genderFilter = filteredFarmers.filter((item) => {\n    if (val) {\n      return item.gender.toLocaleLowerCase() === val.toLowerCase();\n    }\n  });\n\n  const addrFilter = filteredFarmers.filter((item) => {\n    if (addr) {\n      return item.state.toLocaleLowerCase() === addr.toLowerCase();\n    }\n  });\n\n  const harvestResult = filteredFarmers.filter((item) => {\n    let dt = new Date(item.crops.map((i) => i.harvestDate));\n    return dt >= startDate && dt <= endDate;\n  });\n\n  const mergeResult = filteredFarmers.filter((item) => {\n    // if (val && addr) {\n    // }\n    // if (addr && !val) {\n    //   return item.address.toLocaleLowerCase() === addr.toLowerCase();\n    // }\n    // if (val && !addr) {\n    //   return item.gender.toLocaleLowerCase() === val.toLowerCase();\n    // }\n    let dt = new Date(item.crops.map((i) => i.harvestDate));\n    return (\n      item.gender.toLowerCase() === val.toLowerCase() &&\n      item.state.toLowerCase() === addr.toLowerCase()\n    );\n  });\n\n  const modalizeFilterRef = useRef<Modalize>(null);\n  const onOpenfilter = () => {\n    modalizeFilterRef.current?.open();\n  };\n\n  const onCloseFilter = () => {\n    modalizeFilterRef.current?.close();\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* <View\n        style={{\n          marginTop: 40,\n          width: \"100%\",\n          elevation: 1000,\n        }}\n      >\n        <Header onTap={() => navigation.navigate(\"Search\")} />\n      </View> */}\n\n      <View\n        style={{\n          flexDirection: winWidth > 767 ? \"row\" : \"column\",\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      >\n        <View\n          style={{\n            backgroundColor: \"#deebff\",\n            width: winWidth > 767 ? \"100%\" : \"100%\",\n            height: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Header\n            onTap={() => navigation.navigate(\"Search\")}\n            onLogoTap={() => console.log(\"Home active\")}\n            onFilter={() => onOpenfilter()}\n          />\n\n          {/* <Button\n            title=\"GO to Search\"\n            onPress={() => navigation.navigate(\"Search\")}\n          /> */}\n          {/* {winWidth < 767 ? (\n            <View\n              style={{\n                width: \"100%\",\n                height: 50,\n                backgroundColor: \"#346beb\",\n                padding: 7,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 4,\n                },\n                shadowOpacity: 0.32,\n                shadowRadius: 5.46,\n\n                elevation: 9,\n              }}\n            >\n              <TextInput\n                style={{\n                  width: \"60%\",\n                  height: 40,\n                  fontSize: 20,\n                  backgroundColor: \"#fff\",\n                  outlineColor: \"#346beb\",\n                  borderRadius: 10,\n                  padding: 5,\n                }}\n                placeholder=\"Search for Crops\"\n                onFocus={() => navigation.navigate(\"Search\")}\n              />\n              <View\n                style={{\n                  width: 35,\n                  height: 35,\n                  borderColor: \"#fff\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  backgroundColor: \"#deebff\",\n                  borderRadius: 35,\n                }}\n              >\n                <SimpleLineIcons name=\"magnifier\" size={20} color=\"#346beb\" />\n              </View>\n            </View>\n          ) : null} */}\n\n          {/* <Button\n            title=\"Loadmore\"\n            onPress={() => setfirstScroll(firstScroll + 5)}\n          /> */}\n          {/* \n          <View style={{ width: \"100%\", height: 25, backgroundColor: \"red\" }}>\n            <Text>See by category</Text>\n          </View> */}\n          {filteractive ? (\n            merge ? (\n              // <View\n              //   style={{\n              //     flexDirection: \"row\",\n              //     width: \"100%\",\n              //     flexWrap: \"wrap\",\n              //     alignItems: \"flex-start\",\n              //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n              //     padding: winWidth > 767 ? 10 : 2,\n              //   }}\n              // >\n              //   {mergeResult.map((item, cIndex) => {\n              //     return (\n              //       <Card\n              //         key={item.id}\n              //         name={item.farmerName}\n              //         avatar={item.farmerImage}\n              //         phone={item.phone}\n              //         address={item.state}\n              //         crop={item.crops.map((i) => i.cropName)}\n              //         onPress={() => {\n              //           setfarmer(item.id), onOpen(), sethideFAB(true);\n              //         }}\n              //         cropAvatar={item.image}\n              //       />\n              //     );\n              //   })}\n              // </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  height: winHeight * 0.89,\n                }}\n              >\n                <FlatList\n                  showsVerticalScrollIndicator={false}\n                  data={mergeResult}\n                  renderItem={renderItems}\n                  ListEmptyComponent={() => (\n                    <View style={styles.container}>\n                      <Text style={{ fontSize: 30 }}>\n                        {\" \"}\n                        Oops ! Didnt find that\n                      </Text>\n                    </View>\n                  )}\n                  contentContainerStyle={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n                    alignItems: \"center\",\n                    justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                />\n              </View>\n            ) : val && !addr && !dater ? (\n              // <View\n              //   style={{\n              //     flexDirection: \"row\",\n              //     width: \"100%\",\n              //     flexWrap: \"wrap\",\n              //     alignItems: \"flex-start\",\n              //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n              //     padding: winWidth > 767 ? 10 : 2,\n              //   }}\n              // >\n              //   {genderFilter.map((item, cIndex) => {\n              //     return (\n              //       <Card\n              //         key={item.id}\n              //         name={item.farmerName}\n              //         avatar={item.farmerImage}\n              //         phone={item.phone}\n              //         address={item.state}\n              //         crop={item.crops.map((i) => i.cropName)}\n              //         onPress={() => {\n              //           setfarmer(item.id), onOpen(), sethideFAB(true);\n              //         }}\n              //       />\n              //     );\n              //   })}\n              // </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  height: winHeight * 0.89,\n                }}\n              >\n                <FlatList\n                  showsVerticalScrollIndicator={false}\n                  data={genderFilter}\n                  renderItem={renderItems}\n                  ListEmptyComponent={() => (\n                    <View style={styles.container}>\n                      <Text style={{ fontSize: 30 }}>\n                        {\" \"}\n                        Oops ! Didnt find that\n                      </Text>\n                    </View>\n                  )}\n                  contentContainerStyle={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n                    alignItems: \"center\",\n                    justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                />\n              </View>\n            ) : !val && addr && !dater ? (\n              // <View\n              //   style={{\n              //     flexDirection: \"row\",\n              //     width: \"100%\",\n              //     flexWrap: \"wrap\",\n              //     alignItems: \"flex-start\",\n              //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n              //     padding: winWidth > 767 ? 10 : 2,\n              //   }}\n              // >\n              //   {addrFilter.map((item, cIndex) => {\n              //     return (\n              //       <Card\n              //         key={item.id}\n              //         name={item.farmerName}\n              //         avatar={item.farmerImage}\n              //         phone={item.phone}\n              //         address={item.state}\n              //         crop={item.crops.map((i) => i.cropName)}\n              //         onPress={() => {\n              //           setfarmer(item.id), onOpen();\n              //         }}\n              //         cropAvatar={item.image}\n              //       />\n              //     );\n              //   })}\n              // </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  height: winHeight * 0.89,\n                }}\n              >\n                <FlatList\n                  showsVerticalScrollIndicator={false}\n                  data={addrFilter}\n                  renderItem={renderItems}\n                  ListEmptyComponent={() => (\n                    <View style={styles.container}>\n                      <Text style={{ fontSize: 30 }}>\n                        {\" \"}\n                        Oops ! Didnt find that\n                      </Text>\n                    </View>\n                  )}\n                  contentContainerStyle={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n                    alignItems: \"center\",\n                    justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                />\n              </View>\n            ) : !val && !addr && startDate && endDate ? (\n              <View\n                style={{\n                  width: \"100%\",\n                  height: winHeight * 0.89,\n                }}\n              >\n                {\" \"}\n                <Text>Dater</Text>\n                <FlatList\n                  showsVerticalScrollIndicator={false}\n                  data={harvestResult}\n                  renderItem={renderItems}\n                  ListEmptyComponent={() => (\n                    <View style={styles.container}>\n                      <Text style={{ fontSize: 30 }}>\n                        {\" \"}\n                        Oops ! Didnt find that\n                      </Text>\n                    </View>\n                  )}\n                  contentContainerStyle={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n                    alignItems: \"center\",\n                    justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                />\n              </View>\n            ) : (\n              <Text>No result found</Text>\n            )\n          ) : (\n            <View\n              style={{\n                width: \"100%\",\n                height: winHeight * 0.915,\n              }}\n            >\n              {farmers.length > 10 ? (\n                <FlatList\n                  showsVerticalScrollIndicator={false}\n                  data={farmers}\n                  renderItem={renderItems}\n                  ListEmptyComponent={() => (\n                    <View style={styles.container}>\n                      <ActivityIndicator size=\"large\" />\n                    </View>\n                  )}\n                  contentContainerStyle={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n                    alignItems: \"center\",\n                    justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                  onEndReached={handleLoad}\n                />\n              ) : null}\n            </View>\n          )}\n\n          {/* <ScrollView\n            showsVerticalScrollIndicator={false}\n            onScrollEndDrag={() => setfirstScroll(firstScroll + 5)}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                width: \"100%\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                padding: winWidth > 767 ? 10 : 2,\n              }}\n            >\n              {farmers.map((item, cIndex) => {\n                return (\n                  <Card\n                    key={item.id}\n                    name={item.farmerName}\n                    avatar={item.farmerImage}\n                    phone={item.phone}\n                    address={item.state}\n                    crop={item.crops.map((i) => i.cropName)}\n                    onPress={() => {\n                      console.log(item.farmerName),\n                        setfarmer(item.id),\n                        console.log(item.crops.map((i) => i.quantity));\n                      onOpen(), setmodalName(item.farmerName);\n                    }}\n                  />\n                );\n              })}\n            </View>\n            {winWidth < 767 ? (\n              <View\n                style={{\n                  height: 60,\n                  width: \"100%\",\n                  backgroundColor: \"transparent\",\n                  marginTop: 10,\n                }}\n              ></View>\n            ) : null}\n          </ScrollView> */}\n        </View>\n      </View>\n      <Modalize\n        ref={modalizeRef}\n        modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.88}\n        threshold={100}\n        modalStyle={winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null}\n        // modalStyle={{ position: \"absolute\", width: \"100%\", zIndex: 999 }}\n        // modalStyle={\n        //   winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n        // }\n        closeOnOverlayTap={true}\n        mod\n      >\n        {farmers.map((item, cIndex) => {\n          if (farmer == item.id) {\n            return (\n              <View>\n                <View\n                  style={{\n                    backgroundColor: \"#3A48ED\",\n                    width: \"100%\",\n                    height: 170,\n                    borderWidth: 1,\n                    top: -2,\n                    borderRadius: 15,\n                    borderColor: \"#3A48ED\",\n                    shadowColor: \"#000\",\n                    shadowOffset: {\n                      width: 0,\n                      height: 4,\n                    },\n                    shadowOpacity: 0.32,\n                    shadowRadius: 5.46,\n\n                    elevation: 9,\n                  }}\n                >\n                  {/* <Text>{item.name}</Text>\n                        <Text>{item.address}</Text>\n                        <Image source={item.avatar} style={{height:50, width:50}}/>\n                   <Text>{farmer}</Text> */}\n                  <TouchableOpacity\n                    onPress={() => onClose()}\n                    style={{\n                      alignItems: \"center\",\n                      marginTop: 5,\n                      marginRight: 2,\n                      padding: 5,\n                      justifyContent: \"center\",\n                      alignSelf: \"flex-end\",\n                      backgroundColor: \"rgba(0,0,0,0.2)\",\n                      borderRadius: 10,\n                      height: 35,\n                      width: 70,\n                    }}\n                  >\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Text\n                        style={{\n                          fontSize: 15,\n                          fontWeight: 500,\n                          color: \"#fff\",\n                          marginRight: 5,\n                        }}\n                      >\n                        Close\n                      </Text>\n                      <SimpleLineIcons\n                        name=\"close\"\n                        size={15}\n                        color=\"#fff\"\n                        onPress={() => onClose()}\n                      />\n                    </View>\n                  </TouchableOpacity>\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      justifyContent: \"space-between\",\n                      padding: 2,\n                      top: -10,\n                    }}\n                  >\n                    <View style={{ width: \"40%\", height: \"100%\", padding: 5 }}>\n                      <Image\n                        source={{ uri: item.farmerImage }}\n                        style={{\n                          height: 120,\n                          width: 120,\n                          borderRadius: 120,\n                          borderColor: \"#fff\",\n                          borderWidth: 2,\n                        }}\n                      />\n                    </View>\n                    <View\n                      style={{\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-evenly\",\n                        width: \"60%\",\n                        height: \"100%\",\n                      }}\n                    >\n                      <View\n                        style={{\n                          flexDirection: \"column\",\n                          alignItems: \"flex-start\",\n                          width: \"100%\",\n                          height: \"100%\",\n                          justifyContent: \"space-evenly\",\n                        }}\n                      >\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Feather name=\"user\" size={20} color=\"#fff\" />\n                          <Text\n                            style={{\n                              fontSize: 20,\n                              color: \"#fff\",\n                              fontWeight: \"700\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            {getSmallString(item.farmerName)}\n                          </Text>\n                        </View>\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Feather name=\"map-pin\" size={20} color=\"#fff\" />\n                          <Text\n                            style={{\n                              fontSize: 20,\n                              color: \"#fff\",\n                              fontWeight: \"700\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            {item.state}\n                          </Text>\n                        </View>\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Feather name=\"user\" size={20} color=\"#fff\" />\n                          <Text\n                            style={{\n                              fontSize: 20,\n                              color: \"#fff\",\n                              fontWeight: \"700\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            {hideNumber(item.phone)}\n                          </Text>\n                        </View>\n                      </View>\n                    </View>\n                  </View>\n                  <View style={{ top: -40 }}>\n                    <Text\n                      style={{\n                        marginTop: winWidth < 400 ? 40 : 60,\n                        padding: 5,\n                        fontWeight: \"500\",\n                        color: \"#6F6F6F\",\n                        fontSize: 20,\n                        marginLeft: 5,\n                      }}\n                    >\n                      Farming Details\n                    </Text>\n                    <View\n                      style={{\n                        width: \"95%\",\n                        alignSelf: \"center\",\n                        height: 1,\n                        backgroundColor: \"#C0C0C0\",\n                      }}\n                    ></View>\n                    <View\n                      style={{\n                        flexDirection: \"column\",\n                        marginTop: 10,\n                        padding: 10,\n                        height: winWidth < 400 ? 100 : 180,\n                        justifyContent: \"space-between\",\n                      }}\n                    >\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          alignItems: \"center\",\n                          width: \"100%\",\n                          justifyContent: \"space-between\",\n                          marginBottom: 10,\n                        }}\n                      >\n                        <View style={{ flexDirection: \"column\", width: \"50%\" }}>\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <Entypo name=\"leaf\" size={20} color=\"#9F99FF\" />\n                            <Text\n                              style={{\n                                fontSize: 12,\n                                color: \"#6F6F6F\",\n                                fontWeight: \"600\",\n                              }}\n                            >\n                              Crop\n                            </Text>\n                          </View>\n                          <View>\n                            <Text style={{ fontSize: 20 }}>\n                              {item.crops.map((i) => i.cropName)}\n                            </Text>\n                          </View>\n                        </View>\n\n                        <View\n                          style={{\n                            flexDirection: \"column\",\n                            width: \"50%\",\n                            alignItems: \"flex-end\",\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <SimpleLineIcons\n                              name=\"calendar\"\n                              size={20}\n                              color=\"#9F99FF\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 12,\n                                color: \"#6F6F6F\",\n                                marginLeft: 5,\n                                fontWeight: \"600\",\n                              }}\n                            >\n                              Harvest Date\n                            </Text>\n                          </View>\n                          <View>\n                            <Text style={{ fontSize: 20 }}>\n                              {item.crops.map((i) => i.harvestDate)}\n                            </Text>\n                          </View>\n                        </View>\n                      </View>\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          alignItems: \"center\",\n                          width: \"100%\",\n                          justifyContent: \"space-between\",\n                          marginTop: 5,\n                        }}\n                      >\n                        <View style={{ flexDirection: \"column\", width: \"50%\" }}>\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <SimpleLineIcons\n                              name=\"size-fullscreen\"\n                              size={20}\n                              color=\"#9F99FF\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 12,\n                                color: \"#6F6F6F\",\n                                fontWeight: \"600\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              Farming Area\n                            </Text>\n                          </View>\n                          <View>\n                            <Text style={{ fontSize: 20 }}>\n                              {item.land} Kattha\n                            </Text>\n                          </View>\n                        </View>\n\n                        <View\n                          style={{\n                            flexDirection: \"column\",\n                            width: \"50%\",\n                            alignItems: \"flex-end\",\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <SimpleLineIcons\n                              name=\"speedometer\"\n                              size={20}\n                              color=\"#9F99FF\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 12,\n                                color: \"#6F6F6F\",\n                                marginLeft: 5,\n                                fontWeight: \"600\",\n                              }}\n                            >\n                              Quantity\n                            </Text>\n                          </View>\n                          <View>\n                            <Text style={{ fontSize: 20, marginLeft: 5 }}>\n                              {item.crops.map((i) => i.quantity) / 100} q\n                            </Text>\n                          </View>\n                        </View>\n                      </View>\n                      <View></View>\n                    </View>\n                    <View\n                      style={{\n                        width: \"95%\",\n                        alignSelf: \"center\",\n                        height: 1,\n                        backgroundColor: \"#C0C0C0\",\n                        marginTop: winWidth < 400 ? 30 : 10,\n                      }}\n                    />\n                  </View>\n                  <View\n                    style={{\n                      width: \"100%\",\n                      flexDirection: \"column\",\n                      top: -29,\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 15,\n                        color: \"#808080\",\n                        marginLeft: 5,\n                      }}\n                    >\n                      Coming soon\n                    </Text>\n                    <View\n                      style={{\n                        width: \"100%\",\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-evenly\",\n                        top: 5,\n                      }}\n                    >\n                      <TouchableOpacity\n                        style={{\n                          width: winWidth < 400 ? 90 : 120,\n                          height: winWidth < 400 ? 30 : 50,\n                          backgroundColor: \"#A9A9A9\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          flexDirection: \"row\",\n                          borderRadius: 10,\n                        }}\n                        onPress={() =>\n                          alert(\n                            \"Click to chat feature helps you connect directly to this farmer in one click. Feature Coming soon !\"\n                          )\n                        }\n                      >\n                        <FontAwesome5 name=\"whatsapp\" size={20} color=\"#fff\" />\n                        <Text\n                          style={{\n                            fontSize: winWidth < 400 ? 16 : 20,\n                            color: \"#fff\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          Chat\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity\n                        style={{\n                          width: winWidth < 400 ? 90 : 120,\n                          height: winWidth < 400 ? 30 : 50,\n                          backgroundColor: \"#A9A9A9\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          flexDirection: \"row\",\n                          borderRadius: 10,\n                        }}\n                        onPress={() => alert(\"Feature Coming soon !\")}\n                      >\n                        <Text\n                          style={{\n                            fontSize: winWidth < 400 ? 16 : 20,\n                            color: \"#fff\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          Buy\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity\n                        style={{\n                          width: winWidth < 400 ? 90 : 120,\n                          height: winWidth < 400 ? 40 : 50,\n                          backgroundColor: \"#fff\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          flexDirection: \"row\",\n                          borderRadius: 10,\n                          borderColor: \"#A9A9A9\",\n                          borderWidth: 2,\n                        }}\n                        onPress={() =>\n                          alert(\n                            \"Support the farmer by any kind. Feature Coming Soon !\"\n                          )\n                        }\n                      >\n                        <FontAwesome\n                          name=\"handshake-o\"\n                          size={15}\n                          color=\"#A9A9A9\"\n                        />\n                        <Text\n                          style={{\n                            fontSize: winWidth < 400 ? 16 : 20,\n                            color: \"#A9A9A9\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          Support\n                        </Text>\n                      </TouchableOpacity>\n                    </View>\n                  </View>\n                </View>\n              </View>\n            );\n          } else {\n            null;\n          }\n        })}\n      </Modalize>\n      <Modalize\n        ref={modalizeFilterRef}\n        modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.88}\n        modalStyle={winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null}\n        threshold={100}\n        closeOnOverlayTap={true}\n        mod\n      >\n        <View\n          style={{\n            width: \"100%\",\n            flexDirection: \"row\",\n            alignItems: \"flex-start\",\n            justifyContent: \"space-between\",\n            padding: 5,\n            top: 5,\n          }}\n        >\n          {/* <TouchableOpacity onPress={() => onCloseFilter()}>\n                Close Filter\n              </TouchableOpacity> */}\n          <Text style={{ fontSize: 16, marginLeft: 7, fontWeight: \"600\" }}>\n            Filter Results\n          </Text>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n\n              width: \"40%\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <TouchableOpacity\n              style={{\n                width: 60,\n                height: 30,\n                backgroundColor: \"#fff\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n\n                borderRadius: 10,\n                borderColor: \"#3A48ED\",\n                borderWidth: 2,\n              }}\n              onPress={() => {\n                setmerge(false),\n                  setfilteractive(false),\n                  onCloseFilter(),\n                  setval(\"\"),\n                  setaddr(\"\");\n                setdater(false);\n                setStartDate(new Date());\n                setEndDate(new Date());\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 16,\n                  color: \"#3A48ED\",\n                }}\n              >\n                Reset\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={{\n                width: 60,\n                height: 30,\n                backgroundColor: \"#3ECF8E\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n\n                borderRadius: 10,\n                borderColor: \"#3ECF8E\",\n                borderWidth: 2,\n              }}\n              onPress={() => {\n                // !merge && filteractive ? setmerge(false) : setmerge(true);\n                (!val && addr && !dater && !merge) ||\n                (val && !addr && !dater && !merge) ||\n                (!val && !addr && dater && !merge)\n                  ? setfilteractive(true)\n                  : !val && !addr && merge\n                  ? (setmerge(true), setfilteractive(false))\n                  : setmerge(true);\n                onCloseFilter();\n\n                setdater(true);\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 16,\n                  color: \"#fff\",\n                }}\n              >\n                Apply\n              </Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={() => {\n                onCloseFilter();\n              }}\n            >\n              <View\n                style={{\n                  width: 25,\n                  height: 25,\n                  borderWidth: 2,\n                  borderColor: \"#A1C7FF\",\n                  alignItems: \"center\",\n                  alignSelf: \"flex-end\",\n                  justifyContent: \"center\",\n                  flexDirection: \"row\",\n                  backgroundColor: \"#A1C7FF\",\n                  borderRadius: 25,\n                }}\n              >\n                <AntDesign name=\"close\" size={20} color=\"#3A48ED\" />\n              </View>\n            </TouchableOpacity>\n          </View>\n        </View>\n\n        <Text\n          style={{\n            color: \"#6F6F6F\",\n            fontSize: 15,\n            marginTop: 3,\n            marginLeft: 7,\n            padding: 5,\n          }}\n        >\n          By Gender\n        </Text>\n        <View\n          style={{\n            width: \"32%\",\n            marginTop: 10,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            padding: 5,\n            marginLeft: 7,\n            alignSelf: \"flex-start\",\n          }}\n        >\n          {genderData.map((item) => {\n            return (\n              <View key={item.key} style={styles.buttonContainer}>\n                <TouchableOpacity\n                  style={styles.circle}\n                  onPress={() => {\n                    setfilteractive(true);\n                    setval(item.key);\n                    // toggler(item.key);\n                    // let a = item.text;\n                    // let b = filteredFarmers.filter((i) => {\n                    //   return i.gender.toLowerCase() === a.toLowerCase();\n                    // });\n                    // console.log(item.text);\n                    // console.log(a);\n                    // console.log(b);\n                  }}\n                >\n                  {val === item.key && <View style={styles.checkedCircle} />}\n                </TouchableOpacity>\n                <Text style={{ fontSize: 16, marginLeft: 5 }}>{item.text}</Text>\n              </View>\n            );\n          })}\n        </View>\n        <View\n          style={{\n            width: \"100%\",\n            marginTop: 10,\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            justifyContent: \"space-evenly\",\n            padding: 5,\n            alignSelf: \"flex-start\",\n          }}\n        >\n          <View\n            style={{\n              width: \"95%\",\n              alignSelf: \"center\",\n              height: 1,\n              backgroundColor: \"#C0C0C0\",\n              marginTop: 10,\n              alignItems: \"center\",\n            }}\n          ></View>\n          <Text\n            style={{\n              color: \"#6F6F6F\",\n              fontSize: 15,\n              marginTop: 10,\n              marginLeft: 0,\n              marginBottom: 5,\n              padding: 5,\n            }}\n          >\n            By States\n          </Text>\n\n          <TouchableOpacity\n            onPress={() => setaddrToggle(!addrToggle)}\n            style={{\n              flexDirection: \"row\",\n              backgroundColor: \"#d6d9ff\",\n              borderWidth: 2,\n              borderColor: \"#7b42ff\",\n              borderRadius: 5,\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              padding: 5,\n              minWidth: \"30%\",\n\n              marginLeft: 7,\n            }}\n          >\n            <Text style={{ fontSize: 15 }}>{addr ? addr : \"All States\"}</Text>\n            <AntDesign name=\"down\" size={12} />\n          </TouchableOpacity>\n          {addrToggle ? (\n            <View style={{ marginTop: 10 }}>\n              {States.map((item) => {\n                return (\n                  <View key={item.code} style={styles.buttonnewContainer}>\n                    <TouchableOpacity\n                      style={styles.circle}\n                      onPress={() => {\n                        setfilteractive(true);\n                        setaddr(item.name);\n                        setaddrToggle(false);\n                        // toggler(item.key);\n                        // let a = item.text;\n                        // let b = filteredFarmers.filter((i) => {\n                        //   return i.gender.toLowerCase() === a.toLowerCase();\n                        // });\n                        // console.log(item.text);\n                        // console.log(a);\n                        // console.log(b);\n                      }}\n                    >\n                      {addr === item.name && (\n                        <View style={styles.checkedCircle} />\n                      )}\n                    </TouchableOpacity>\n                    <Text style={{ fontSize: 16, marginLeft: 5 }}>\n                      {item.name}\n                    </Text>\n                  </View>\n                );\n              })}\n            </View>\n          ) : null}\n        </View>\n        <View\n          style={{\n            width: \"100%\",\n            marginTop: 10,\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            justifyContent: \"space-evenly\",\n            padding: 5,\n            alignSelf: \"flex-start\",\n          }}\n        >\n          <View\n            style={{\n              width: \"95%\",\n              alignSelf: \"center\",\n              height: 1,\n              backgroundColor: \"#C0C0C0\",\n              marginTop: 10,\n              alignItems: \"center\",\n            }}\n          ></View>\n          <View>\n            <Text\n              style={{\n                color: \"#6F6F6F\",\n                fontSize: 15,\n                marginTop: 10,\n                marginLeft: 0,\n                marginBottom: 5,\n                zIndex: 1000,\n                padding: 5,\n              }}\n            >\n              By Harvest Date\n            </Text>\n            <View\n              style={{\n                flex: 1,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                width: \"100%\",\n                height: 150,\n                padding: 5,\n              }}\n            >\n              <View>\n                <Text style={{ marginBottom: 10 }}>From</Text>\n                <DatePicker\n                  dateFormat=\"dd/MM/yyyy\"\n                  selected={startDate}\n                  onChange={(date) => setStartDate(date)}\n                  customInput={\n                    <TextInput\n                      style={{\n                        backgroundColor: \"#d6d9ff\",\n                        borderRadius: 5,\n                        borderColor: \"#7b42ff\",\n                        height: 35,\n                        borderWidth: 2,\n                        padding: 5,\n                        fontSize: 15,\n                      }}\n                    />\n                  }\n                />\n              </View>\n              <View style={{ marginLeft: 20 }}>\n                <Text style={{ marginBottom: 10 }}>To</Text>\n                <DatePicker\n                  dateFormat=\"dd/MM/yyyy\"\n                  selected={endDate}\n                  onChange={(date) => setEndDate(date)}\n                  customInput={\n                    <TextInput\n                      style={{\n                        height: 35,\n                        borderWidth: 2,\n                        backgroundColor: \"#d6d9ff\",\n                        borderRadius: 5,\n                        borderColor: \"#7b42ff\",\n                        padding: 5,\n                        fontSize: 15,\n                      }}\n                    />\n                  }\n                />\n              </View>\n            </View>\n\n            {/* <TouchableOpacity onPress={() => showHarvests()}>\n                    This week\n                  </TouchableOpacity>\n                  <TouchableOpacity>This month</TouchableOpacity>\n                  <TouchableOpacity>3 months from now</TouchableOpacity>\n                  <TouchableOpacity>6 months from now</TouchableOpacity>\n                  <TouchableOpacity>1 year from now</TouchableOpacity> */}\n          </View>\n          <View\n            style={{\n              width: \"95%\",\n              alignSelf: \"center\",\n              height: 1,\n\n              marginTop: 100,\n              alignItems: \"center\",\n            }}\n          ></View>\n        </View>\n        <View\n          style={{\n            width: \"100%\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-evenly\",\n            alignSelf: \"flex-end\",\n\n            marginTop: \"30%\",\n          }}\n        >\n          {/* <TouchableOpacity\n                  style={{\n                    width: 80,\n                    height: 40,\n                    backgroundColor: \"#fff\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n\n                    borderRadius: 10,\n                    borderColor: \"#3A48ED\",\n                    borderWidth: 2,\n                  }}\n                  onPress={() => {\n                    setmerge(false),\n                      setfilteractive(false),\n                      onCloseFilter(),\n                      setval(\"\"),\n                      setaddr(\"\");\n                    setdater(!dater);\n                    sethideFAB(!hideFAB);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 16,\n                      color: \"#3A48ED\",\n                    }}\n                  >\n                    Reset\n                  </Text>\n                </TouchableOpacity> */}\n          {/* <TouchableOpacity\n                  style={{\n                    width: 80,\n                    height: 40,\n                    backgroundColor: \"#3ECF8E\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n\n                    borderRadius: 10,\n                    borderColor: \"#3ECF8E\",\n                    borderWidth: 2,\n                  }}\n                  onPress={() => {\n                    // !merge && filteractive ? setmerge(false) : setmerge(true);\n                    (!val && addr && !merge) || (val && !addr && !merge)\n                      ? setfilteractive(true)\n                      : !val && !addr && merge\n                      ? (setmerge(true), setfilteractive(false))\n                      : setmerge(true);\n                    onCloseFilter();\n                    sethideFAB(false);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 16,\n                      color: \"#fff\",\n                    }}\n                  >\n                    Apply\n                  </Text>\n                </TouchableOpacity> */}\n        </View>\n        {/* <View\n                style={{\n                  height: 60,\n                  width: \"100%\",\n                  backgroundColor: \"#fff\",\n                  marginTop: 10,\n                }}\n              ></View> */}\n      </Modalize>\n    </View>\n  );\n};\n\nexport default Home;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: winHeight,\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginRight: 5,\n  },\n  buttonnewContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginRight: 5,\n    padding: 5,\n  },\n\n  circle: {\n    height: 15,\n    width: 15,\n    borderRadius: 15,\n    borderWidth: 1,\n    borderColor: \"#3A48ED\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  checkedCircle: {\n    width: 15,\n    height: 15,\n    borderRadius: 7,\n    backgroundColor: \"#3A48ED\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n  TextInput,\n  Platform,\n  ScrollView,\n  ActivityIndicator,\n  FlatList,\n  ImageBackground,\n} from \"react-native\";\nimport Header from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport Farmers from \"../data/farmers.json\";\nimport Data from \"../data/items.json\";\nimport { Modalize } from \"react-native-modalize\";\nimport hideNumber from \"../utils/hideNumber\";\nimport getSmallString from \"../utils/getSmallString\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport {\n  AntDesign,\n  Entypo,\n  Feather,\n  FontAwesome,\n  FontAwesome5,\n  SimpleLineIcons,\n  Ionicons,\n} from \"@expo/vector-icons\";\nimport { BlurView } from \"expo-blur\";\nimport States from \"../data/states.json\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Card from \"../components/Card\";\n\nconst Search = ({ navigation }) => {\n  const [blur, setblur] = useState(true);\n  const [term, setterm] = useState(\"\");\n  const [placer, setplacer] = useState(false);\n  const [farmer, setfarmer] = useState(0);\n  const [openFilter, setopenFilter] = useState(false);\n  const [toggleCheckBox, setToggleCheckBox] = useState(false);\n  const [val, setval] = useState(\"\");\n  const [addr, setaddr] = useState(\"\");\n  const [genFilterfinal, setgenFilterfinal] = useState([]);\n  const [hideFAB, sethideFAB] = useState(false);\n  const [parent, setparent] = useState(false);\n  const [genderSelected, setgenderSelected] = useState(false);\n  const [filteractive, setfilteractive] = useState(false);\n  const [addrToggle, setaddrToggle] = useState(false);\n  const [merge, setmerge] = useState(false);\n  const [dater, setdater] = useState(false);\n\n  const setSearch = (text: string) => {\n    let dynamic = text.toLowerCase();\n    console.log(\"dynamic: \" + dynamic);\n  };\n\n  const [crop, setcrop] = useState([]);\n  const [farmers, setfarmers] = useState([]);\n  const [modalName, setmodalName] = useState(\"\");\n  const [selectedState, setselectedState] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const cropper = \"\";\n\n  useEffect(() => {\n    fetch(\"https://maps.claroenergy.in/Ksearch/fetch/farmers\", {\n      method: \"post\",\n\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        gender: null,\n        harvestDate: null,\n        state: selectedState,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => setfarmers(data.data.list))\n      .catch((error) => console.error(error));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"https://maps.claroenergy.in/Ksearch/fetch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: cropper,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => setcrop(data.data.list))\n      .catch((error) => console.error(error));\n  }, []);\n\n  console.log(crop);\n  console.log(farmers);\n\n  const selectState = () => {\n    States.map((item) => {\n      console.log(item.name);\n      farmers.map((i) => {\n        console.log(i.state);\n        if (\n          item.name.toString().toLowerCase() ===\n          i.state.toString().toLowerCase()\n        ) {\n          setselectedState(item.name);\n        }\n      });\n    });\n  };\n\n  const renderFarmers = ({ item }) => (\n    <Card\n      key={item.id}\n      name={getSmallString(item.farmerName)}\n      avatar={item.farmerImage}\n      phone={item.phone}\n      address={item.state}\n      crop={item.crops.map((i) => i.cropName)}\n      onPress={() => {\n        console.log(item.farmerName),\n          setfarmer(item.id),\n          console.log(item.crops.map((i) => i.quantity));\n        onOpen(), setmodalName(item.farmerName);\n      }}\n    />\n  );\n\n  const filteredCrops = Data.filter((item) => {\n    return item.name.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredParents = Data.filter((item) => {\n    return item.type.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredFarmers = farmers.filter((item) => {\n    let a = item.crops.map((i) => i.cropName);\n    return a.toString().toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const genderFilter = filteredFarmers.filter((item) => {\n    if (val) {\n      return item.gender.toLocaleLowerCase() === val.toLowerCase();\n    }\n  });\n\n  const addrFilter = filteredFarmers.filter((item) => {\n    if (addr) {\n      return item.state.toLocaleLowerCase() === addr.toLowerCase();\n    }\n  });\n\n  // const harvestFilter = filteredFarmers.filter((item) => {\n  //   if (startDate && endDate) {\n  //     return (\n  //       new Date(item.crops.map((i) => i.harvestDate)) >= startDate &&\n  //       new Date(item.crops.map((i) => i.harvestDate)) <= endDate\n  //     );\n  //   }\n  // });\n\n  // const showHarvests = () => {\n  //   console.log(\"Starting:\" + startDate);\n  //   console.log(\"Ending\" + endDate);\n  //   filteredFarmers.map((item) => {\n  //     let dt = new Date(item.crops.map((i) => i.harvestDate));\n  //     console.log(dt);\n  //     if (dt >= startDate && dt <= endDate) {\n  //       console.log(\"In Range\" + dt);\n  //     }\n  //   });\n  // };\n\n  console.log(filteredFarmers);\n\n  const applyFilterFinal = [genderFilter, addrFilter].flat();\n\n  const modalizeRef = useRef<Modalize>(null);\n\n  const modalizeFilterRef = useRef<Modalize>(null);\n\n  console.log(genderFilter);\n\n  const harvestResult = filteredFarmers.filter((item) => {\n    let dt = new Date(item.crops.map((i) => i.harvestDate));\n    return dt >= startDate && dt <= endDate;\n  });\n  const mergeResult = filteredFarmers.filter((item) => {\n    // if (val && addr) {\n    // }\n    // if (addr && !val) {\n    //   return item.address.toLocaleLowerCase() === addr.toLowerCase();\n    // }\n    // if (val && !addr) {\n    //   return item.gender.toLocaleLowerCase() === val.toLowerCase();\n    // }\n    let dt = new Date(item.crops.map((i) => i.harvestDate));\n    return (\n      item.gender.toLowerCase() === val.toLowerCase() &&\n      item.state.toLowerCase() === addr.toLowerCase() &&\n      dt >= startDate &&\n      dt <= endDate\n    );\n  });\n\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onClose = () => {\n    modalizeRef.current?.close();\n  };\n\n  const onOpenfilter = () => {\n    modalizeFilterRef.current?.open();\n  };\n\n  const onCloseFilter = () => {\n    modalizeFilterRef.current?.close();\n  };\n\n  const genderData = [\n    {\n      key: \"m\",\n      text: \"Men\",\n    },\n    {\n      key: \"f\",\n      text: \"Women\",\n    },\n  ];\n\n  const renderItems = ({ item }) => (\n    <TouchableOpacity\n      onPress={() => {\n        setplacer(true), setblur(!blur), setterm(item.name);\n      }}\n      style={{ marginBottom: 2 }}\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n        }}\n      >\n        <Image\n          source={{ uri: item.image }}\n          style={{\n            height: 35,\n            width: 35,\n            borderColor: \"green\",\n            borderWidth: 1,\n            borderRadius: 35,\n          }}\n        />\n        <Text style={{ fontSize: 20 }}> {item.name}</Text>\n        <Text\n          style={{\n            fontSize: 15,\n            alignSelf: \"center\",\n            color: \"#989898\",\n          }}\n        >\n          {\" \"}\n          in{\" \"}\n        </Text>\n        <TouchableOpacity\n          onPress={() => {\n            setparent(!parent),\n              setterm(item.type),\n              setplacer(!placer),\n              setblur(!blur);\n          }}\n        >\n          <Text style={{ fontSize: 15, color: \"#346beb\", marginLeft: 10 }}>\n            {item.type}\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </TouchableOpacity>\n  );\n\n  return (\n    <View style={styles.container}>\n      {/* <View style={{ marginTop: 40, width: \"100%\", elevation: 1000 }}>\n        <Header onTap={() => navigation.navigate(\"Search\")} />\n      </View> */}\n      <View\n        style={{\n          flexDirection: winWidth > 767 ? \"row\" : \"column\",\n          width: \"100%\",\n\n          height: \"100%\",\n        }}\n      >\n        <View\n          style={{\n            backgroundColor: \"#deebff\",\n            width: \"100%\",\n            height: \"100%\",\n            alignItems: \"flex-start\",\n            justifyContent: \"center\",\n          }}\n        >\n          {/* <Button\n            title=\"Go to Home\"\n            onPress={() => navigation.navigate(\"Home\")}\n          />\n          <Button title=\"Set Blur\" onPress={() => setblur(!blur)} /> */}\n\n          <View\n            style={{\n              marginBottom: 10,\n              width: \"100%\",\n              alignItems: \"center\",\n              height: winHeight * 0.99,\n            }}\n          >\n            <Header\n              onTap={() => {\n                setblur(true), (filteredCrops.length = 0), setparent(false);\n                setterm(\"\");\n              }}\n              onLogoTap={() => navigation.navigate(\"Home\")}\n              onFilter={() => onOpenfilter()}\n            />\n\n            {/* <View\n              style={{\n                width: winWidth > 767 ? winWidth * 0.45 : winWidth * 0.9,\n                top: winWidth > 767 ? 25 : 0,\n                flexDirection: \"row\",\n              }}\n            >\n              {winWidth > 767 ? (\n                <TouchableOpacity\n                  style={{\n                    width: 120,\n                    height: 40,\n                    backgroundColor: \"#346beb\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flexDirection: \"row\",\n                    borderRadius: 10,\n                  }}\n                  onPress={() => navigation.navigate(\"Home\")}\n                >\n                  <FontAwesome5 name=\"home\" size={20} color=\"#fff\" />\n                  <Text\n                    style={{\n                      fontSize: 16,\n                      color: \"#fff\",\n                      marginLeft: 5,\n                    }}\n                  >\n                    Go home\n                  </Text>\n                </TouchableOpacity>\n              ) : null}\n              <ScrollHeader\n                headerTap={() => {\n                  setblur(!blur), setterm(\"\"), setparent(false);\n                }}\n                headHolder={\n                  placer && parent\n                    ? term\n                    : parent\n                    ? term\n                    : \"Search for crops...\"\n                }\n              />\n            </View> */}\n            {/* \n            {term ? (\n              <Text\n                style={{\n                  marginTop: 20,\n                  padding: 5,\n                  fontWeight: \"500\",\n                  color: \"#6F6F6F\",\n                  fontSize: 18,\n                  fontStyle: \"italic\",\n                }}\n              >\n                Showing results for {term}\n              </Text>\n            ) : (\n              <Text\n                style={{\n                  marginTop: 20,\n                  padding: 5,\n                  fontWeight: \"500\",\n                  color: \"#6F6F6F\",\n                  fontSize: 18,\n                }}\n              >\n                Showing all results\n              </Text>\n            )} */}\n\n            {/* <View style={{ width: \"100%\", flexDirection: \"row\" }}>\n              <TouchableOpacity\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  marginRight: 5,\n                  backgroundColor: \"blue\",\n                }}\n              >\n                <Text>{val ? val : \"\"}</Text>\n                <AntDesign\n                  name=\"close\"\n                  size={20}\n                  color=\"#fff\"\n                  onPress={() => setval(\"\")}\n                />\n              </TouchableOpacity>\n              <TouchableOpacity>\n                <Text>{addr ? addr : \"\"}</Text>\n              </TouchableOpacity>\n            </View> */}\n            {placer ? (\n              !parent ? (\n                <View\n                  style={{\n                    width: winWidth > 767 ? \"80%\" : \"90%\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    alignSelf: \"center\",\n                  }}\n                >\n                  {/* <Text\n                    style={{\n                      marginTop: 60,\n                      padding: 5,\n                      fontWeight: \"500\",\n                      color: \"#6F6F6F\",\n                      fontSize: 20,\n                    }}\n                  >\n                    {term}\n                  </Text> */}\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      width: \"50%\",\n                      alignSelf: \"center\",\n                      marginTop: winWidth > 767 ? 15 : 10,\n                      alignItems: \"flex-start\",\n                      marginLeft: winWidth > 767 ? -52 : -10,\n                      justifyContent: \"flex-start\",\n\n                      padding: 5,\n                    }}\n                  >\n                    {/* <Button\n                      title=\"GO Home\"\n                      onPress={() => navigation.navigate(\"Home\")}\n                    /> */}\n                    {/* <TouchableOpacity\n                      style={{\n                        top: 10,\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-between\",\n                        backgroundColor: \"#949cff\",\n                        height: 30,\n                        padding: 3,\n                        borderRadius: 5,\n                        marginBottom: 20,\n                        marginRight: 20,\n                      }}\n                      onPress={() => {\n                        console.log(\"Biharma\"),\n                          sethideFAB(true),\n                          onOpenfilter();\n                      }}\n                    >\n                      <AntDesign name=\"filter\" size={15} color=\"#3A48ED\" />\n                      <Text\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"500\",\n                          marginLeft: 2,\n                          color: \"#fff\",\n                        }}\n                      >\n                        {\" \"}\n                        Filter Results\n                      </Text>\n                    </TouchableOpacity> */}\n                    <TouchableOpacity\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: term ? \"#3ECF8E\" : \"#deebff\",\n                        padding: 5,\n                        height: 30,\n                        borderRadius: 5,\n                      }}\n                    >\n                      <Text style={{ color: \"#fff\", fontWeight: \"700\" }}>\n                        {term ? term : null}\n                      </Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: val ? \"#fff\" : \"#deebff\",\n                        padding: 5,\n                        height: 30,\n                        borderRadius: 5,\n                      }}\n                    >\n                      <Text style={{ color: \"#000\" }}>\n                        {val\n                          ? val === \"m\"\n                            ? \"Men\"\n                            : val === \"f\"\n                            ? \"Women\"\n                            : \"Other\"\n                          : null}\n                      </Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      style={{\n                        alignItems: \"center\",\n                        marginRight: 5,\n                        backgroundColor: addr ? \"#fff\" : \"#deebff\",\n                        padding: 5,\n                        height: 30,\n                        borderRadius: 5,\n                      }}\n                    >\n                      <Text style={{ color: \"#000\" }}>\n                        {addr ? addr : null}\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              ) : (\n                <View\n                  style={{\n                    flexDirection: \"column\",\n                    width: \"100%\",\n                    height: 40,\n                    marginTop: 10,\n                  }}\n                >\n                  <View\n                    style={{\n                      width: \"100%\",\n                      height: 30,\n                      backgroundColor: \"#deebff\",\n                      top: winWidth > 767 ? \"20%\" : \"10%\",\n                      borderTopLeftRadius: 10,\n                      borderTopRightRadius: 10,\n                    }}\n                  >\n                    <Text\n                      style={{\n                        padding: 5,\n                        fontWeight: \"500\",\n                        color: \"#000\",\n                        alignSelf: \"center\",\n                        fontSize: winWidth > 767 ? 20 : 15,\n                        marginBottom: 10,\n                      }}\n                    >\n                      Available {term}s\n                    </Text>\n                  </View>\n                </View>\n              )\n            ) : null}\n            {/* {placer ? (\n            <TouchableOpacity\n              style={{ alignSelf: \"flex-end\", top: -23, width: 50, height: 20 }}\n              onPress={() => {\n                onOpenfilter();\n              }}\n            >\n              Filter\n            </TouchableOpacity>\n          ) : null} */}\n\n            <ScrollView showsVerticalScrollIndicator={false} bounces={true}>\n              {parent ? (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    flexWrap: \"wrap\",\n\n                    alignItems: \"flex-start\",\n                    justifyContent: \"center\",\n                    padding: winWidth > 767 ? 10 : 2,\n                  }}\n                >\n                  {filteredParents.map((item, cIndex) => {\n                    return (\n                      <Card\n                        key={item.id}\n                        name={item.name}\n                        avatar={item.image}\n                        isCrop={true}\n                        onPress={() => {\n                          setparent(!parent), setterm(item.name);\n                        }}\n                      />\n                    );\n                  })}\n                </View>\n              ) : filteractive ? (\n                merge ? (\n                  // <View\n                  //   style={{\n                  //     flexDirection: \"row\",\n                  //     width: \"100%\",\n                  //     flexWrap: \"wrap\",\n                  //     alignItems: \"flex-start\",\n                  //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                  //     padding: winWidth > 767 ? 10 : 2,\n                  //   }}\n                  // >\n                  //   {mergeResult.map((item, cIndex) => {\n                  //     return (\n                  //       <Card\n                  //         key={item.id}\n                  //         name={item.farmerName}\n                  //         avatar={item.farmerImage}\n                  //         phone={item.phone}\n                  //         address={item.state}\n                  //         crop={item.crops.map((i) => i.cropName)}\n                  //         onPress={() => {\n                  //           setfarmer(item.id), onOpen(), sethideFAB(true);\n                  //         }}\n                  //         cropAvatar={item.image}\n                  //       />\n                  //     );\n                  //   })}\n                  // </View>\n                  <View\n                    style={{\n                      width: \"100%\",\n                      height: winHeight * 0.89,\n                    }}\n                  >\n                    <FlatList\n                      showsVerticalScrollIndicator={false}\n                      data={mergeResult}\n                      renderItem={renderFarmers}\n                      ListEmptyComponent={() => (\n                        <View style={styles.container}>\n                          <Text style={{ fontSize: 30 }}>\n                            {\" \"}\n                            Oops ! Didnt find that\n                          </Text>\n                        </View>\n                      )}\n                      contentContainerStyle={{\n                        flexDirection: \"row\",\n                        width: \"100%\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                        padding: winWidth > 767 ? 10 : 2,\n                      }}\n                    />\n                  </View>\n                ) : val && !addr && !dater ? (\n                  // <View\n                  //   style={{\n                  //     flexDirection: \"row\",\n                  //     width: \"100%\",\n                  //     flexWrap: \"wrap\",\n                  //     alignItems: \"flex-start\",\n                  //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                  //     padding: winWidth > 767 ? 10 : 2,\n                  //   }}\n                  // >\n                  //   {genderFilter.map((item, cIndex) => {\n                  //     return (\n                  //       <Card\n                  //         key={item.id}\n                  //         name={item.farmerName}\n                  //         avatar={item.farmerImage}\n                  //         phone={item.phone}\n                  //         address={item.state}\n                  //         crop={item.crops.map((i) => i.cropName)}\n                  //         onPress={() => {\n                  //           setfarmer(item.id), onOpen(), sethideFAB(true);\n                  //         }}\n                  //       />\n                  //     );\n                  //   })}\n                  // </View>\n                  <View\n                    style={{\n                      width: \"100%\",\n                      height: winHeight * 0.89,\n                    }}\n                  >\n                    <FlatList\n                      showsVerticalScrollIndicator={false}\n                      data={genderFilter}\n                      renderItem={renderFarmers}\n                      ListEmptyComponent={() => (\n                        <View style={styles.container}>\n                          <Text style={{ fontSize: 30 }}>\n                            {\" \"}\n                            Oops ! Didnt find that\n                          </Text>\n                        </View>\n                      )}\n                      contentContainerStyle={{\n                        flexDirection: \"row\",\n                        width: \"100%\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                        padding: winWidth > 767 ? 10 : 2,\n                      }}\n                    />\n                  </View>\n                ) : !val && addr && !dater ? (\n                  // <View\n                  //   style={{\n                  //     flexDirection: \"row\",\n                  //     width: \"100%\",\n                  //     flexWrap: \"wrap\",\n                  //     alignItems: \"flex-start\",\n                  //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                  //     padding: winWidth > 767 ? 10 : 2,\n                  //   }}\n                  // >\n                  //   {addrFilter.map((item, cIndex) => {\n                  //     return (\n                  //       <Card\n                  //         key={item.id}\n                  //         name={item.farmerName}\n                  //         avatar={item.farmerImage}\n                  //         phone={item.phone}\n                  //         address={item.state}\n                  //         crop={item.crops.map((i) => i.cropName)}\n                  //         onPress={() => {\n                  //           setfarmer(item.id), onOpen();\n                  //         }}\n                  //         cropAvatar={item.image}\n                  //       />\n                  //     );\n                  //   })}\n                  // </View>\n                  <View\n                    style={{\n                      width: \"100%\",\n                      height: winHeight * 0.89,\n                    }}\n                  >\n                    <FlatList\n                      showsVerticalScrollIndicator={false}\n                      data={addrFilter}\n                      renderItem={renderFarmers}\n                      ListEmptyComponent={() => (\n                        <View style={styles.container}>\n                          <Text style={{ fontSize: 30 }}>\n                            {\" \"}\n                            Oops ! Didnt find that\n                          </Text>\n                        </View>\n                      )}\n                      contentContainerStyle={{\n                        flexDirection: \"row\",\n                        width: \"100%\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                        padding: winWidth > 767 ? 10 : 2,\n                      }}\n                    />\n                  </View>\n                ) : !val && !addr && startDate && endDate ? (\n                  <View\n                    style={{\n                      width: \"100%\",\n                      height: winHeight * 0.89,\n                    }}\n                  >\n                    {\" \"}\n                    <Text>Dater</Text>\n                    <FlatList\n                      showsVerticalScrollIndicator={false}\n                      data={harvestResult}\n                      renderItem={renderFarmers}\n                      ListEmptyComponent={() => (\n                        <View style={styles.container}>\n                          <Text style={{ fontSize: 30 }}>\n                            {\" \"}\n                            Oops ! Didnt find that\n                          </Text>\n                        </View>\n                      )}\n                      contentContainerStyle={{\n                        flexDirection: \"row\",\n                        width: \"100%\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                        padding: winWidth > 767 ? 10 : 2,\n                      }}\n                    />\n                  </View>\n                ) : (\n                  <Text>No result found</Text>\n                )\n              ) : (\n                // <View\n                //   style={{\n                //     flexDirection: \"row\",\n                //     width: \"100%\",\n                //     flexWrap: \"wrap\",\n                //     alignItems: \"flex-start\",\n                //     justifyContent: winWidth > 767 ? \"flex-start\" : \"center\",\n                //     padding: winWidth > 767 ? 10 : 2,\n                //   }}\n                // >\n                //   {filteredFarmers.map((item, cIndex) => {\n                //     return (\n                //       <Card\n                //         key={item.id}\n                //         name={item.name}\n                //         avatar={item.avatar}\n                //         phone={item.phone}\n                //         address={item.address}\n                //         crop={item.crop}\n                //         onPress={() => {\n                //           setfarmer(item.id), onOpen(), sethideFAB(true);\n                //         }}\n                //         cropAvatar={item.image}\n                //       />\n                //     );\n                //   })}\n                // </View>\n                <View\n                  style={{\n                    width: \"100%\",\n                    height: winHeight * 0.89,\n                  }}\n                >\n                  <FlatList\n                    showsVerticalScrollIndicator={false}\n                    data={filteredFarmers}\n                    renderItem={renderFarmers}\n                    ListEmptyComponent={() => (\n                      <View style={styles.container}>\n                        <Text style={{ fontSize: 30 }}>\n                          {\" \"}\n                          Oops ! Didnt find that\n                        </Text>\n                      </View>\n                    )}\n                    contentContainerStyle={{\n                      flexDirection: \"row\",\n                      width: \"100%\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"center\",\n                      justifyContent: winWidth > 767 ? \"center\" : \"center\",\n                      padding: winWidth > 767 ? 10 : 2,\n                    }}\n                  />\n                </View>\n              )}\n            </ScrollView>\n            <Modalize\n              ref={modalizeRef}\n              modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.88}\n              modalStyle={\n                winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n              }\n              threshold={100}\n              closeOnOverlayTap={true}\n              mod\n            >\n              {farmers.map((item, cIndex) => {\n                if (farmer == item.id) {\n                  return (\n                    <View>\n                      <View\n                        style={{\n                          backgroundColor: \"#3A48ED\",\n                          width: \"100%\",\n                          height: 170,\n                          borderWidth: 1,\n                          top: -2,\n                          borderRadius: 15,\n                          borderColor: \"#3A48ED\",\n                          shadowColor: \"#000\",\n                          shadowOffset: {\n                            width: 0,\n                            height: 4,\n                          },\n                          shadowOpacity: 0.32,\n                          shadowRadius: 5.46,\n\n                          elevation: 11,\n                        }}\n                      >\n                        {/* <Text>{item.name}</Text>\n                        <Text>{item.address}</Text>\n                        <Image source={item.avatar} style={{height:50, width:50}}/>\n                   <Text>{farmer}</Text> */}\n                        <TouchableOpacity\n                          onPress={() => {\n                            onClose(), sethideFAB(false);\n                          }}\n                          style={{\n                            alignItems: \"center\",\n                            marginTop: 5,\n                            marginRight: 2,\n                            padding: 5,\n                            justifyContent: \"center\",\n                            alignSelf: \"flex-end\",\n                            backgroundColor: \"rgba(0,0,0,0.2)\",\n                            borderRadius: 10,\n                            height: 35,\n                            width: 70,\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              justifyContent: \"space-between\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <Text\n                              style={{\n                                fontSize: 15,\n                                fontWeight: 500,\n                                color: \"#fff\",\n                                marginRight: 5,\n                              }}\n                            >\n                              Close\n                            </Text>\n                            <SimpleLineIcons\n                              name=\"close\"\n                              size={15}\n                              color=\"#fff\"\n                              onPress={() => {\n                                onClose(), sethideFAB(false);\n                              }}\n                            />\n                          </View>\n                        </TouchableOpacity>\n                        <View\n                          style={{\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                            padding: 2,\n                            top: -10,\n                          }}\n                        >\n                          <View\n                            style={{\n                              width: \"40%\",\n                              height: \"100%\",\n                              padding: 5,\n                            }}\n                          >\n                            <Image\n                              source={{ uri: item.farmerImage }}\n                              style={{\n                                height: 120,\n                                width: 120,\n                                borderRadius: 120,\n                                borderColor: \"#fff\",\n                                borderWidth: 2,\n                              }}\n                            />\n                          </View>\n                          <View\n                            style={{\n                              flexDirection: \"column\",\n                              alignItems: \"center\",\n                              justifyContent: \"space-evenly\",\n                              width: \"60%\",\n                              height: \"100%\",\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"column\",\n                                alignItems: \"flex-start\",\n                                width: \"100%\",\n                                height: \"100%\",\n                                justifyContent: \"space-evenly\",\n                              }}\n                            >\n                              <View style={{ flexDirection: \"row\" }}>\n                                <Feather name=\"user\" size={20} color=\"#fff\" />\n                                <Text\n                                  style={{\n                                    fontSize: 20,\n                                    color: \"#fff\",\n                                    fontWeight: \"700\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  {getSmallString(item.farmerName)}\n                                </Text>\n                              </View>\n                              <View style={{ flexDirection: \"row\" }}>\n                                <Feather\n                                  name=\"map-pin\"\n                                  size={20}\n                                  color=\"#fff\"\n                                />\n                                <Text\n                                  style={{\n                                    fontSize: 20,\n                                    color: \"#fff\",\n                                    fontWeight: \"700\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  {item.state}\n                                </Text>\n                              </View>\n                              <View style={{ flexDirection: \"row\" }}>\n                                <Feather name=\"user\" size={20} color=\"#fff\" />\n                                <Text\n                                  style={{\n                                    fontSize: 20,\n                                    color: \"#fff\",\n                                    fontWeight: \"700\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  {hideNumber(item.phone)}\n                                </Text>\n                              </View>\n                            </View>\n                          </View>\n                        </View>\n                        <View style={{ top: -40 }}>\n                          <Text\n                            style={{\n                              marginTop: winWidth < 400 ? 40 : 60,\n                              padding: 5,\n                              fontWeight: \"500\",\n                              color: \"#6F6F6F\",\n                              fontSize: 20,\n                              marginLeft: 5,\n                            }}\n                          >\n                            Farming Details\n                          </Text>\n                          <View\n                            style={{\n                              width: \"95%\",\n                              alignSelf: \"center\",\n                              height: 1,\n                              backgroundColor: \"#C0C0C0\",\n                            }}\n                          ></View>\n                          <View\n                            style={{\n                              flexDirection: \"column\",\n                              marginTop: 10,\n                              padding: 10,\n                              height: winWidth < 400 ? 100 : 180,\n                              justifyContent: \"space-between\",\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                                width: \"100%\",\n                                justifyContent: \"space-between\",\n                                marginBottom: 10,\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <Entypo\n                                    name=\"leaf\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      fontWeight: \"600\",\n                                    }}\n                                  >\n                                    Crop\n                                  </Text>\n                                </View>\n                                <View>\n                                  <View>\n                                    <Text style={{ fontSize: 20 }}>\n                                      {item.crops.map((i) => i.cropName)}\n                                    </Text>\n                                  </View>\n\n                                  {/* {Data.map((cropName, cIndex) => {\n                                    let a = cropName.name.toLowerCase();\n                                    let b = item.crop?.toLowerCase();\n                                    let result = a.localeCompare(b);\n\n                                    if (a == b) {\n                                      return (\n                                        <View\n                                          style={{\n                                            flexDirection: \"row\",\n                                            alignItems: \"center\",\n                                          }}\n                                        >\n                                          <Image\n                                            source={{ uri: cropName.image }}\n                                            style={{\n                                              height: 30,\n                                              width: 30,\n                                              borderWidth: 1,\n                                              borderRadius: 30,\n                                              borderColor: \"#3ECF8E\",\n                                            }}\n                                          />\n                                          <Text\n                                            style={{\n                                              fontSize: 20,\n                                              marginLeft: 5,\n                                            }}\n                                          >\n                                            {cropName.name}\n                                          </Text>\n                                        </View>\n                                      );\n                                    } else {\n                                      null;\n                                    }\n                                  })} */}\n                                </View>\n                              </View>\n\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                  alignItems: \"flex-end\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <SimpleLineIcons\n                                    name=\"calendar\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      marginLeft: 5,\n                                      fontWeight: \"600\",\n                                    }}\n                                  >\n                                    Harvest Date\n                                  </Text>\n                                </View>\n                                <View>\n                                  <Text style={{ fontSize: 20 }}>\n                                    {item.crops.map((i) => i.harvestDate)}\n                                  </Text>\n                                </View>\n                              </View>\n                            </View>\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                                width: \"100%\",\n                                justifyContent: \"space-between\",\n                                marginTop: 5,\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <SimpleLineIcons\n                                    name=\"size-fullscreen\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      fontWeight: \"600\",\n                                      marginLeft: 5,\n                                    }}\n                                  >\n                                    Farming Area\n                                  </Text>\n                                </View>\n                                <View>\n                                  <Text style={{ fontSize: 20 }}>\n                                    {item.land} Kattha\n                                  </Text>\n                                </View>\n                              </View>\n\n                              <View\n                                style={{\n                                  flexDirection: \"column\",\n                                  width: \"50%\",\n                                  alignItems: \"flex-end\",\n                                }}\n                              >\n                                <View\n                                  style={{\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <SimpleLineIcons\n                                    name=\"speedometer\"\n                                    size={20}\n                                    color=\"#9F99FF\"\n                                  />\n                                  <Text\n                                    style={{\n                                      fontSize: 12,\n                                      color: \"#6F6F6F\",\n                                      marginLeft: 5,\n                                      fontWeight: \"600\",\n                                    }}\n                                  >\n                                    Quantity\n                                  </Text>\n                                </View>\n                                <View>\n                                  <Text style={{ fontSize: 20, marginLeft: 5 }}>\n                                    {item.crops.map((i) => i.quantity) / 100} q\n                                  </Text>\n                                </View>\n                              </View>\n                            </View>\n                            <View></View>\n                          </View>\n                          <View\n                            style={{\n                              width: \"95%\",\n                              alignSelf: \"center\",\n                              height: 1,\n                              backgroundColor: \"#C0C0C0\",\n                              marginTop: winWidth < 400 ? 30 : 10,\n                            }}\n                          />\n                        </View>\n                        <View\n                          style={{\n                            width: \"100%\",\n                            flexDirection: \"column\",\n                            top: -29,\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <Text\n                            style={{\n                              fontSize: 15,\n                              color: \"#808080\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            Coming soon\n                          </Text>\n                          <View\n                            style={{\n                              width: \"100%\",\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                              justifyContent: \"space-evenly\",\n                              top: 5,\n                            }}\n                          >\n                            <TouchableOpacity\n                              style={{\n                                width: winWidth < 400 ? 90 : 120,\n                                height: winWidth < 400 ? 30 : 50,\n                                backgroundColor: \"#A9A9A9\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                flexDirection: \"row\",\n                                borderRadius: 10,\n                              }}\n                              onPress={() =>\n                                alert(\n                                  \"Click to chat feature helps you connect directly to this farmer in one click. Feature Coming soon !\"\n                                )\n                              }\n                            >\n                              <FontAwesome5\n                                name=\"whatsapp\"\n                                size={25}\n                                color=\"#fff\"\n                              />\n                              <Text\n                                style={{\n                                  fontSize: winWidth < 400 ? 16 : 20,\n                                  color: \"#fff\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                Chat\n                              </Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity\n                              style={{\n                                width: winWidth < 400 ? 90 : 120,\n                                height: winWidth < 400 ? 30 : 50,\n                                backgroundColor: \"#A9A9A9\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                flexDirection: \"row\",\n                                borderRadius: 10,\n                              }}\n                              onPress={() => alert(\"Feature Coming soon !\")}\n                            >\n                              <Text\n                                style={{\n                                  fontSize: winWidth < 400 ? 16 : 20,\n                                  color: \"#fff\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                Buy\n                              </Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity\n                              style={{\n                                width: winWidth < 400 ? 90 : 120,\n                                height: winWidth < 400 ? 30 : 50,\n                                backgroundColor: \"#fff\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                flexDirection: \"row\",\n                                borderRadius: 10,\n                                borderColor: \"#A9A9A9\",\n                                borderWidth: 2,\n                              }}\n                              onPress={() =>\n                                alert(\n                                  \"Support the farmer by any kind. Feature Coming Soon !\"\n                                )\n                              }\n                            >\n                              <FontAwesome\n                                name=\"handshake-o\"\n                                size={25}\n                                color=\"#A9A9A9\"\n                              />\n                              <Text\n                                style={{\n                                  fontSize: winWidth < 400 ? 16 : 20,\n                                  color: \"#A9A9A9\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                Support\n                              </Text>\n                            </TouchableOpacity>\n                          </View>\n                        </View>\n                      </View>\n                    </View>\n                  );\n                } else {\n                  null;\n                }\n              })}\n            </Modalize>\n\n            <Modalize\n              ref={modalizeFilterRef}\n              modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.88}\n              modalStyle={\n                winWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n              }\n              threshold={100}\n              closeOnOverlayTap={true}\n              mod\n            >\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"row\",\n                  alignItems: \"flex-start\",\n                  justifyContent: \"space-between\",\n                  padding: 5,\n                  top: 5,\n                }}\n              >\n                {/* <TouchableOpacity onPress={() => onCloseFilter()}>\n                Close Filter\n              </TouchableOpacity> */}\n                <Text\n                  style={{ fontSize: 16, marginLeft: 7, fontWeight: \"600\" }}\n                >\n                  Filter Results\n                </Text>\n\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n\n                    width: \"40%\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <TouchableOpacity\n                    style={{\n                      width: 60,\n                      height: 30,\n                      backgroundColor: \"#fff\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n\n                      borderRadius: 10,\n                      borderColor: \"#3A48ED\",\n                      borderWidth: 2,\n                    }}\n                    onPress={() => {\n                      setmerge(false),\n                        setfilteractive(false),\n                        onCloseFilter(),\n                        setval(\"\"),\n                        setaddr(\"\");\n                      setdater(false);\n                      setStartDate(new Date());\n                      setEndDate(new Date());\n                      sethideFAB(!hideFAB);\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 16,\n                        color: \"#3A48ED\",\n                      }}\n                    >\n                      Reset\n                    </Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    style={{\n                      width: 60,\n                      height: 30,\n                      backgroundColor: \"#3ECF8E\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n\n                      borderRadius: 10,\n                      borderColor: \"#3ECF8E\",\n                      borderWidth: 2,\n                    }}\n                    onPress={() => {\n                      // !merge && filteractive ? setmerge(false) : setmerge(true);\n                      (!val && addr && !dater && !merge) ||\n                      (val && !addr && !dater && !merge) ||\n                      (!val && !addr && dater && !merge)\n                        ? setfilteractive(true)\n                        : !val && !addr && merge\n                        ? (setmerge(true), setfilteractive(false))\n                        : setmerge(true);\n                      onCloseFilter();\n                      sethideFAB(false);\n                      setdater(true);\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 16,\n                        color: \"#fff\",\n                      }}\n                    >\n                      Apply\n                    </Text>\n                  </TouchableOpacity>\n\n                  <TouchableOpacity\n                    onPress={() => {\n                      onCloseFilter(), sethideFAB(false);\n                    }}\n                  >\n                    <View\n                      style={{\n                        width: 25,\n                        height: 25,\n                        borderWidth: 2,\n                        borderColor: \"#A1C7FF\",\n                        alignItems: \"center\",\n                        alignSelf: \"flex-end\",\n                        justifyContent: \"center\",\n                        flexDirection: \"row\",\n                        backgroundColor: \"#A1C7FF\",\n                        borderRadius: 25,\n                      }}\n                    >\n                      <AntDesign name=\"close\" size={20} color=\"#3A48ED\" />\n                    </View>\n                  </TouchableOpacity>\n                </View>\n              </View>\n\n              <Text\n                style={{\n                  color: \"#6F6F6F\",\n                  fontSize: 15,\n                  marginTop: 3,\n                  marginLeft: 7,\n                  padding: 5,\n                }}\n              >\n                By Gender\n              </Text>\n              <View\n                style={{\n                  width: \"32%\",\n                  marginTop: 10,\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  padding: 5,\n                  marginLeft: 7,\n                  alignSelf: \"flex-start\",\n                }}\n              >\n                {genderData.map((item) => {\n                  return (\n                    <View key={item.key} style={styles.buttonContainer}>\n                      <TouchableOpacity\n                        style={styles.circle}\n                        onPress={() => {\n                          setfilteractive(true);\n                          setval(item.key);\n                          // toggler(item.key);\n                          // let a = item.text;\n                          // let b = filteredFarmers.filter((i) => {\n                          //   return i.gender.toLowerCase() === a.toLowerCase();\n                          // });\n                          // console.log(item.text);\n                          // console.log(a);\n                          // console.log(b);\n                        }}\n                      >\n                        {val === item.key && (\n                          <View style={styles.checkedCircle} />\n                        )}\n                      </TouchableOpacity>\n                      <Text style={{ fontSize: 16, marginLeft: 5 }}>\n                        {item.text}\n                      </Text>\n                    </View>\n                  );\n                })}\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  marginTop: 10,\n                  flexDirection: \"column\",\n                  alignItems: \"flex-start\",\n                  justifyContent: \"space-evenly\",\n                  padding: 5,\n                  alignSelf: \"flex-start\",\n                }}\n              >\n                <View\n                  style={{\n                    width: \"95%\",\n                    alignSelf: \"center\",\n                    height: 1,\n                    backgroundColor: \"#C0C0C0\",\n                    marginTop: 10,\n                    alignItems: \"center\",\n                  }}\n                ></View>\n                <Text\n                  style={{\n                    color: \"#6F6F6F\",\n                    fontSize: 15,\n                    marginTop: 10,\n                    marginLeft: 0,\n                    marginBottom: 5,\n                    padding: 5,\n                  }}\n                >\n                  By States\n                </Text>\n\n                <TouchableOpacity\n                  onPress={() => setaddrToggle(!addrToggle)}\n                  style={{\n                    flexDirection: \"row\",\n                    backgroundColor: \"#d6d9ff\",\n                    borderWidth: 2,\n                    borderColor: \"#7b42ff\",\n                    borderRadius: 5,\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    padding: 5,\n                    minWidth: \"30%\",\n\n                    marginLeft: 7,\n                  }}\n                >\n                  <Text style={{ fontSize: 15 }}>\n                    {addr ? addr : \"All States\"}\n                  </Text>\n                  <AntDesign name=\"down\" size={12} />\n                </TouchableOpacity>\n                {addrToggle ? (\n                  <View style={{ marginTop: 10 }}>\n                    {States.map((item) => {\n                      return (\n                        <View key={item.code} style={styles.buttonnewContainer}>\n                          <TouchableOpacity\n                            style={styles.circle}\n                            onPress={() => {\n                              setfilteractive(true);\n                              setaddr(item.name);\n                              setaddrToggle(false);\n                              // toggler(item.key);\n                              // let a = item.text;\n                              // let b = filteredFarmers.filter((i) => {\n                              //   return i.gender.toLowerCase() === a.toLowerCase();\n                              // });\n                              // console.log(item.text);\n                              // console.log(a);\n                              // console.log(b);\n                            }}\n                          >\n                            {addr === item.name && (\n                              <View style={styles.checkedCircle} />\n                            )}\n                          </TouchableOpacity>\n                          <Text style={{ fontSize: 16, marginLeft: 5 }}>\n                            {item.name}\n                          </Text>\n                        </View>\n                      );\n                    })}\n                  </View>\n                ) : null}\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  marginTop: 10,\n                  flexDirection: \"column\",\n                  alignItems: \"flex-start\",\n                  justifyContent: \"space-evenly\",\n                  padding: 5,\n                  alignSelf: \"flex-start\",\n                }}\n              >\n                <View\n                  style={{\n                    width: \"95%\",\n                    alignSelf: \"center\",\n                    height: 1,\n                    backgroundColor: \"#C0C0C0\",\n                    marginTop: 10,\n                    alignItems: \"center\",\n                  }}\n                ></View>\n                <View>\n                  <Text\n                    style={{\n                      color: \"#6F6F6F\",\n                      fontSize: 15,\n                      marginTop: 10,\n                      marginLeft: 0,\n                      marginBottom: 5,\n                      zIndex: 1000,\n                      padding: 5,\n                    }}\n                  >\n                    By Harvest Date\n                  </Text>\n                  <View\n                    style={{\n                      flex: 1,\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      justifyContent: \"space-between\",\n                      width: \"100%\",\n                      height: 150,\n                      padding: 5,\n                    }}\n                  >\n                    <View>\n                      <Text style={{ marginBottom: 10 }}>From</Text>\n                      <DatePicker\n                        dateFormat=\"dd/MM/yyyy\"\n                        selected={startDate}\n                        onChange={(date) => setStartDate(date)}\n                        customInput={\n                          <TextInput\n                            style={{\n                              backgroundColor: \"#d6d9ff\",\n                              borderRadius: 5,\n                              borderColor: \"#7b42ff\",\n                              height: 35,\n                              borderWidth: 2,\n                              padding: 5,\n                              fontSize: 15,\n                              width: 100,\n                            }}\n                          />\n                        }\n                      />\n                    </View>\n                    <View style={{ marginLeft: 20 }}>\n                      <Text style={{ marginBottom: 10 }}>To</Text>\n                      <DatePicker\n                        dateFormat=\"dd/MM/yyyy\"\n                        selected={endDate}\n                        onChange={(date) => setEndDate(date)}\n                        customInput={\n                          <TextInput\n                            style={{\n                              height: 35,\n                              borderWidth: 2,\n                              backgroundColor: \"#d6d9ff\",\n                              borderRadius: 5,\n                              borderColor: \"#7b42ff\",\n                              padding: 5,\n                              fontSize: 15,\n                              width: 100,\n                            }}\n                          />\n                        }\n                      />\n                    </View>\n                  </View>\n\n                  {/* <TouchableOpacity onPress={() => showHarvests()}>\n                    This week\n                  </TouchableOpacity>\n                  <TouchableOpacity>This month</TouchableOpacity>\n                  <TouchableOpacity>3 months from now</TouchableOpacity>\n                  <TouchableOpacity>6 months from now</TouchableOpacity>\n                  <TouchableOpacity>1 year from now</TouchableOpacity> */}\n                </View>\n                <View\n                  style={{\n                    width: \"95%\",\n                    alignSelf: \"center\",\n                    height: 1,\n\n                    marginTop: 100,\n                    alignItems: \"center\",\n                  }}\n                ></View>\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-evenly\",\n                  alignSelf: \"flex-end\",\n\n                  marginTop: \"30%\",\n                }}\n              >\n                {/* <TouchableOpacity\n                  style={{\n                    width: 80,\n                    height: 40,\n                    backgroundColor: \"#fff\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n\n                    borderRadius: 10,\n                    borderColor: \"#3A48ED\",\n                    borderWidth: 2,\n                  }}\n                  onPress={() => {\n                    setmerge(false),\n                      setfilteractive(false),\n                      onCloseFilter(),\n                      setval(\"\"),\n                      setaddr(\"\");\n                    setdater(!dater);\n                    sethideFAB(!hideFAB);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 16,\n                      color: \"#3A48ED\",\n                    }}\n                  >\n                    Reset\n                  </Text>\n                </TouchableOpacity> */}\n                {/* <TouchableOpacity\n                  style={{\n                    width: 80,\n                    height: 40,\n                    backgroundColor: \"#3ECF8E\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n\n                    borderRadius: 10,\n                    borderColor: \"#3ECF8E\",\n                    borderWidth: 2,\n                  }}\n                  onPress={() => {\n                    // !merge && filteractive ? setmerge(false) : setmerge(true);\n                    (!val && addr && !merge) || (val && !addr && !merge)\n                      ? setfilteractive(true)\n                      : !val && !addr && merge\n                      ? (setmerge(true), setfilteractive(false))\n                      : setmerge(true);\n                    onCloseFilter();\n                    sethideFAB(false);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 16,\n                      color: \"#fff\",\n                    }}\n                  >\n                    Apply\n                  </Text>\n                </TouchableOpacity> */}\n              </View>\n              {/* <View\n                style={{\n                  height: 60,\n                  width: \"100%\",\n                  backgroundColor: \"#fff\",\n                  marginTop: 10,\n                }}\n              ></View> */}\n            </Modalize>\n          </View>\n        </View>\n      </View>\n      {blur ? (\n        <View\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n            position: \"absolute\",\n          }}\n        >\n          <BlurView\n            tint=\"dark\"\n            intensity={40}\n            style={[StyleSheet.absoluteFill, styles.nonBlurredContent]}\n          >\n            <View\n              style={{\n                marginTop: 20,\n                padding: 5,\n                height: \"100%\",\n              }}\n            >\n              <View\n                style={{\n                  backgroundColor: \"#fff\",\n                  height: 55,\n                  width: winWidth > 767 ? \"50%\" : \"97%\",\n                  alignSelf: \"center\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  borderRadius: 8,\n                  padding: 20,\n                  shadowColor: \"#98A0FF\",\n                  shadowOffset: {\n                    width: 0,\n                    height: 4,\n                  },\n                  shadowOpacity: 0.32,\n                  shadowRadius: 5.46,\n\n                  elevation: 9,\n                }}\n              >\n                {/* <TextInput style={{height:40, backgroundColor:\"white\", width:\"75%\", padding:5, outline}} placeholder=\"Search for crops...\" autoFocus={true}/> */}\n                <TextInput\n                  style={\n                    Platform.OS === \"web\" && {\n                      outlineColor: \"#fff\",\n                      height: 40,\n                      backgroundColor: \"white\",\n                      width: \"95%\",\n                      padding: 5,\n                      fontSize: 20,\n                    }\n                  }\n                  placeholder=\"Search for Crops\"\n                  onFocus={() => setplacer(false)}\n                  autoFocus={true}\n                  editable={blur}\n                  onChangeText={(text) => {\n                    console.log(text), setterm(text), setSearch(text);\n                  }}\n                />\n\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  {/* {term ? (\n                    <TouchableOpacity\n                      onPress={() => {\n                        setterm(\"\");\n                      }}\n                    >\n                      <View\n                        style={{\n                          width: 50,\n                          height: 35,\n                          borderWidth: 2,\n                          borderColor: \"#3d3f40\",\n                          alignItems: \"center\",\n                          alignSelf: \"flex-end\",\n                          justifyContent: \"center\",\n                          marginRight: 5,\n                          backgroundColor: \"#3d3f40\",\n                          borderRadius: 5,\n                        }}\n                      >\n                        <Text style={{ fontSize: 15, color: \"#fff\" }}>\n                          Clear\n                        </Text>\n                      </View>\n                    </TouchableOpacity>\n                  ) : null} */}\n                </View>\n                <TouchableOpacity onPress={() => setblur(false)}>\n                  <View\n                    style={{\n                      width: 25,\n                      height: 25,\n                      borderWidth: 2,\n                      borderColor: \"#A1C7FF\",\n                      alignItems: \"center\",\n                      alignSelf: \"flex-end\",\n                      justifyContent: \"center\",\n                      right: -10,\n                      backgroundColor: \"#A1C7FF\",\n                      borderRadius: 25,\n                    }}\n                  >\n                    <AntDesign name=\"close\" size={20} color=\"#3A48ED\" />\n                  </View>\n                </TouchableOpacity>\n              </View>\n              <View style={{ flex: 1, alignItems: \"center\", width: \"100%\" }}>\n                {/* <TouchableOpacity style={{width:\"100%\", height:30, alignItems:\"center\", justifyContent:\"center\", backgroundColor:\"transparent\"}} onPress={()=>{setplacer(true),setblur(!blur)}}>\n<Text>{term}</Text>\n</TouchableOpacity> */}\n                {term !== null ? (\n                  <View\n                    style={{\n                      width: winWidth > 767 ? \"50%\" : \"97%\",\n                      alignItems: \"center\",\n                      backgroundColor: \"#fff\",\n                      borderRadius: 10,\n                      margin: 5,\n                    }}\n                  >\n                    <View\n                      style={{\n                        width: \"100%\",\n                        alignItems: \"flex-start\",\n                        padding: 10,\n                        marginBottom: 10,\n                        marginTop: 5,\n                      }}\n                    >\n                      {filteredCrops.length > 0 ? (\n                        <Text\n                          style={{\n                            marginLeft: 20,\n                            fontSize: 15,\n                            fontWeight: \"600\",\n                          }}\n                        >\n                          Available Crops\n                        </Text>\n                      ) : (\n                        <Text\n                          style={{\n                            marginLeft: 20,\n                            fontSize: 15,\n                            fontWeight: \"600\",\n                            alignSelf: \"center\",\n                          }}\n                        >\n                          🤔 ....That seems to be missing...\n                        </Text>\n                      )}\n                    </View>\n\n                    <View\n                      style={{\n                        width: \"100%\",\n                        height: winHeight * 0.5,\n                      }}\n                    >\n                      <FlatList\n                        showsVerticalScrollIndicator={false}\n                        data={filteredCrops}\n                        renderItem={renderItems}\n                        ListEmptyComponent={() => (\n                          <View style={styles.container}>\n                            <Text style={{ fontSize: 30 }}>\n                              {\" \"}\n                              Oops ! Didnt find that\n                            </Text>\n                          </View>\n                        )}\n                        contentContainerStyle={{\n                          // flexDirection: \"row\",\n                          // width: \"100%\",\n                          // flexWrap: \"wrap\",\n                          // alignItems: \"center\",\n                          // justifyContent:\n                          //   winWidth > 767 ? \"center\" : \"center\",\n                          // padding: winWidth > 767 ? 10 : 2,\n                          width: \"100%\",\n                        }}\n                      />\n                    </View>\n\n                    {/* \n                    {filteredCrops.map((item, cIndex) => {\n                      return (\n                        <View\n                          style={{\n                            width:\n                              winWidth > 768 ? winWidth - 80 : winWidth - 50,\n                            height: 45,\n                            padding: 5,\n                            borderRadius: 8,\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                            backgroundColor: \"#fff\",\n                            margin: 2,\n                          }}\n                        >\n                          <TouchableOpacity\n                            onPress={() => {\n                              setplacer(true),\n                                setblur(!blur),\n                                setterm(item.name);\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                              }}\n                            >\n                              <Image\n                                source={{ uri: item.image }}\n                                style={{\n                                  height: 35,\n                                  width: 35,\n                                  borderColor: \"green\",\n                                  borderWidth: 1,\n                                  borderRadius: 35,\n                                }}\n                              />\n                              <Text style={{ fontSize: 20 }}> {item.name}</Text>\n                              <Text\n                                style={{\n                                  fontSize: 15,\n                                  alignSelf: \"center\",\n                                  color: \"#989898\",\n                                }}\n                              >\n                                {\" \"}\n                                in{\" \"}\n                              </Text>\n                              <Text style={{ fontSize: 15 }}>{item.type}</Text>\n                            </View>\n                          </TouchableOpacity>\n                          <TouchableOpacity\n                            style={{\n                              backgroundColor: \"#3ECF8E\",\n                              height: \"100%\",\n                              alignItems: \"center\",\n                              justifyContent: \"center\",\n                              padding: 5,\n                              borderRadius: 5,\n                              alignSelf: \"flex-end\",\n                            }}\n                            onPress={() => {\n                              setparent(!parent),\n                                setterm(item.type),\n                                setplacer(!placer),\n                                setblur(!blur);\n                            }} //true\n                          >\n                            <Text style={{ fontSize: 15, color: \"#fff\" }}>\n                              View {item.type}s\n                            </Text>\n                          </TouchableOpacity>\n                        </View>\n                      );\n                    })} */}\n                  </View>\n                ) : null}\n\n                <TouchableOpacity\n                  style={{\n                    width: \"100%\",\n                    flex: 1,\n                    backgroundColor: \"transparent\",\n                  }}\n                  onPress={() => navigation.navigate(\"Home\")}\n                ></TouchableOpacity>\n              </View>\n            </View>\n          </BlurView>\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default Search;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: winHeight,\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginRight: 5,\n  },\n  buttonnewContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginRight: 5,\n    padding: 5,\n  },\n\n  circle: {\n    height: 15,\n    width: 15,\n    borderRadius: 15,\n    borderWidth: 1,\n    borderColor: \"#3A48ED\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  checkedCircle: {\n    width: 15,\n    height: 15,\n    borderRadius: 7,\n    backgroundColor: \"#3A48ED\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { Button, StyleSheet, Text, View, Image } from \"react-native\";\n\nconst Welcome = ({ navigation }) => {\n  setTimeout(() => {\n    navigation.replace(\"Home\");\n  }, 2000);\n\n  return (\n    <View style={[styles.container, { backgroundColor: \"#fff\" }]}>\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <Image\n          source={{ uri: require(\"../../assets/icon1.png\") }}\n          style={{ height: 50, width: 50 }}\n        />\n        <Text style={{ color: \"#346beb\", fontSize: 34 }}>Krisearch</Text>\n      </View>\n\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n};\n\nexport default Welcome;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\nimport Header from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\n\nconst Profile = ({ navigation }) => {\n  return (\n    <View style={styles.container}>\n      <View style={{ marginTop: 40, width: \"100%\", elevation: 1000 }}>\n        <Header onTap={() => navigation.navigate(\"Search\")} />\n      </View>\n\n      <View\n        style={{\n          flexDirection: winWidth > 767 ? \"row\" : \"column\",\n          width: \"100%\",\n          backgroundColor: \"pink\",\n          height: \"100%\",\n        }}\n      >\n        {winWidth > 767 ? (\n          <View\n            style={{\n              backgroundColor: \"#8cbaff\",\n              width: \"30%\",\n              height: \"100%\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Button\n              title=\"GO to Home\"\n              onPress={() => navigation.navigate(\"Home\")}\n            />\n          </View>\n        ) : null}\n\n        <View\n          style={{\n            backgroundColor: \"#deebff\",\n            width: winWidth > 767 ? \"70%\" : \"100%\",\n            height: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Button\n            title=\"GO to Search\"\n            onPress={() => navigation.navigate(\"Search\")}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Profile;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import React from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { winWidth, winHeight } from \"./src/utils/window\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Home from \"./src/screens/HomeScreen\";\nimport Search from \"./src/screens/SearchScreen\";\nimport Welcome from \"./src/screens/SplashScreen\";\nimport Header from \"../claro_krisearch/src/components/header\";\nimport Profile from \"./src/screens/ProfileScreen\";\nimport { Feather } from \"@expo/vector-icons\";\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction MyTabBar({ state, descriptors, navigation }) {\n  const focusedOptions = descriptors[state.routes[state.index].key].options;\n\n  if (focusedOptions.tabBarVisible === false) {\n    return null;\n  }\n\n  return (\n    <KeyboardAvoidingView>\n      <View style={{ flexDirection: \"row\" }}>\n        {state.routes.map((route, index) => {\n          const { options } = descriptors[route.key];\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const isFocused = state.index === index;\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: \"tabPress\",\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!isFocused && !event.defaultPrevented) {\n              navigation.navigate(route.name);\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: \"tabLongPress\",\n              target: route.key,\n            });\n          };\n\n          if (index === 1) {\n            return (\n              <TouchableOpacity\n                accessibilityRole=\"button\"\n                accessibilityState={isFocused ? { selected: true } : {}}\n                accessibilityLabel={options.tabBarAccessibilityLabel}\n                testID={options.tabBarTestID}\n                onPress={onPress}\n                onLongPress={onLongPress}\n                style={{\n                  flex: 1,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: 65,\n                  width: 65,\n                  backgroundColor: isFocused ? \"#346beb\" : \"#fff\",\n                  position: \"absolute\",\n                  left: winWidth / 2 - 30,\n                  bottom: 15,\n                  margin: 5,\n                  borderRadius: 35,\n                  borderWidth: 2,\n                  borderColor: isFocused ? \"#fff\" : \"#deebff\",\n                }}\n              >\n                {/* <Text style={{ color: isFocused ? \"#673ab7\" : \"#222\" }}>\n                {label}\n              </Text> */}\n                <Feather\n                  name=\"search\"\n                  size={30}\n                  color={isFocused ? \"#fff\" : \"#346beb\"}\n                />\n              </TouchableOpacity>\n            );\n          }\n\n          return (\n            <TouchableOpacity\n              accessibilityRole=\"button\"\n              accessibilityState={isFocused ? { selected: true } : {}}\n              accessibilityLabel={options.tabBarAccessibilityLabel}\n              testID={options.tabBarTestID}\n              onPress={onPress}\n              onLongPress={onLongPress}\n              style={{\n                flex: 1,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: 56,\n              }}\n            >\n              {/* <Text style={{ color: isFocused ? \"#673ab7\" : \"#222\" }}>\n              {label}\n            </Text> */}\n\n              <View>\n                {index == 0 ? (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      borderWidth: 2,\n                      backgroundColor: isFocused ? \"#deebff\" : \"transparent\",\n                      borderColor: isFocused ? \"#deebff\" : \"transparent\",\n                      width: \"110%\",\n                      borderRadius: 20,\n                      padding: 5,\n                    }}\n                  >\n                    <Feather\n                      name=\"home\"\n                      size={20}\n                      color={isFocused ? \"#346beb\" : \"#222\"}\n                    />\n                    {isFocused ? (\n                      <Text\n                        style={{\n                          fontSize: 16,\n                          marginLeft: 15,\n                          color: \"#346beb\",\n                        }}\n                      >\n                        {label}\n                      </Text>\n                    ) : null}\n                  </View>\n                ) : (\n                  <View>\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        borderWidth: 2,\n                        backgroundColor: isFocused ? \"#deebff\" : \"transparent\",\n                        borderColor: isFocused ? \"#deebff\" : \"transparent\",\n                        width: \"110%\",\n                        borderRadius: 20,\n                        padding: 5,\n                      }}\n                    >\n                      <Feather\n                        name=\"user\"\n                        size={20}\n                        color={isFocused ? \"#346beb\" : \"#222\"}\n                      />\n                      {isFocused ? (\n                        <Text\n                          style={{\n                            fontSize: 16,\n                            marginLeft: 15,\n                            color: \"#346beb\",\n                          }}\n                        >\n                          {label}\n                        </Text>\n                      ) : null}\n                    </View>\n                  </View>\n                )}\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      {winWidth > 767 ? (\n        <Stack.Navigator\n          screenOptions={{\n            headerStyle: {\n              backgroundColor: \"#346beb\",\n            },\n            headerTintColor: \"#fff\",\n            headerTitleStyle: {\n              fontWeight: \"bold\",\n            },\n            headerShown: false,\n          }}\n        >\n          <Stack.Screen\n            name=\"Welcome\"\n            component={Welcome}\n            options={{ headerShown: false }}\n          />\n          <Stack.Screen\n            name=\"Home\"\n            component={Home}\n            options={{\n              title: \"Krisearch\",\n            }}\n          />\n          <Stack.Screen name=\"Search\" component={Search} />\n          <Stack.Screen\n            name=\"Profile\"\n            component={Profile}\n            options={{\n              title: \"Profile\",\n            }}\n          />\n        </Stack.Navigator>\n      ) : (\n        <Tab.Navigator\n          tabBar={(props) => <MyTabBar {...props} />}\n          tabBarOptions={{\n            keyboardHidesTabBar: true,\n          }}\n        >\n          <Tab.Screen name=\"Home\" component={Home} />\n          <Tab.Screen name=\"Search\" component={Search} />\n          <Tab.Screen name=\"Profile\" component={Profile} />\n        </Tab.Navigator>\n      )}\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/newicon2.43b8ac0c.png\";","module.exports = __webpack_public_path__ + \"static/media/icon1.0fd4d1c9.png\";"],"sourceRoot":""}