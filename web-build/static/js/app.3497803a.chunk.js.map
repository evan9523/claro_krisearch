{"version":3,"sources":["assets/newIcon4.png","src/utils/window.ts","src/components/header.tsx","src/utils/getSmallString.ts","src/utils/hideNumber.ts","src/components/Card.tsx","src/screens/HomeScreen.tsx","src/firebase/firebase.ts","src/env.ts","src/screens/ProfileScreen.tsx","src/screens/LandingScreen.tsx","src/screens/Login.tsx","src/screens/SignUp.tsx","src/components/dynamicForm.tsx","src/screens/testScreen.tsx","src/screens/Feed.tsx","App.tsx","assets/newicon4.png","assets/onBoarding/i1.png","assets/onBoarding/i3.png","assets/onBoarding/i2.png","assets/newIcon6.png"],"names":["module","exports","winHeight","Dimensions","get","height","winWidth","width","Header","props","onTap","onLogoTap","filterShown","onFilter","View","style","styles","header","top","flexDirection","alignSelf","alignItems","justifyContent","padding","Image","source","uri","require","Text","headerText","left","backgroundColor","borderRadius","TextInput","fontSize","outlineColor","placeholder","placeholderTextColor","onFocus","AntDesign","name","size","color","StyleSheet","create","fontWeight","marginLeft","marginTop","getSmallString","str","x","length","substring","hideNumber","phone","a","toString","split","splice","Card","phrase","avatar","crop","address","onPress","isCrop","cropAvatar","windowWidth","TouchableOpacity","borderWidth","borderColor","margin","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","resizeMode","toLowerCase","map","word","charAt","toUpperCase","slice","join","Entypo","Home","navigation","useState","location","setLocation","errorMsg","setErrorMsg","blur","setblur","farmers","setfarmers","firstScroll","setfirstScroll","val","tempAddr","addrToggle","setaddrToggle","Date","tempEndDate","settempEndDate","show","setshow","focused","setfocused","cropFinal","setcropFinal","listRegion","setlistRegion","fileredFarmers","setfileredFarmers","listCrops","setlistCrops","showList","setshowList","cropName","harvestDate","quantity","gender","state","tempGen","settempGen","tempState","settempState","tempDate","sendVal","setsendVal","filteredBlur","setfilteredBlur","mapCroptoFarmer","useEffect","fetch","method","headers","Accept","body","JSON","stringify","farmerName","farmingArea","toLocaleDateString","orderBy","pageNo","then","response","json","data","console","log","list","concat","catch","error","res","renderMatch","item","cropImage","async","Location","status","text","latitude","coords","longitude","e","err","handleLoad","modalizeFilterRef","useRef","onCloseFilter","current","close","modalizeRef","OpenProfile","open","CloseProfile","suggestions","filter","id","renderItems","key","farmerImage","crops","i","j","push","onOpenfilter","marginRight","MaterialIcons","FlatList","showsVerticalScrollIndicator","renderItem","ListEmptyComponent","contentContainerStyle","flexWrap","onEndReached","ref","modalHeight","modalStyle","threshold","closeOnOverlayTap","mod","buttonContainer","circle","checkedCircle","minWidth","buttonnewContainer","zIndex","flex","dateFormat","popperPlacement","selected","onChange","date","customInput","SimpleLineIcons","Feather","toLocaleLowerCase","container","alert","FontAwesome5","FontAwesome","position","tint","intensity","absoluteFill","nonBlurredContent","Platform","OS","autoFocus","editable","onChangeText","right","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","env","Profile","config","bucketName","region","accessKeyId","secretAccessKey","applied","setapplied","firstName","setfirstName","tempfirstName","settempfirstName","tempfa","settempfa","farmarea","setfarmarea","image","setimage","block","setblock","setirState","setmainCrop","unit","setunit","city","setcity","district","setdistrict","country","setregion","lat","setlat","long","setlong","auth","currentUser","getIdToken","idtoken","authToken","farmer","village","totalLandSize","totalLandSizeUnit","setFields","ImagePicker","harvestingTime","estimatedYield","fields","drops","setDrops","settempDate","selectedOption","selectedUnit","matchCrop","q","h","values","Number","options","label","seturl","ScrollView","navigate","phoneNumber","onOpen","signOut","contactNo","updateData","onClose","type","target","files","S3FileUpload","uploadFile","title","defaultValue","textContentType","confirmUnit","addCrop","field","idx","textAlign","value","popperModifiers","offset","enabled","preventOverflow","escapeWithReference","boundariesElement","removeCrop","Landing","onAuthStateChanged","user","screen","additionalTransfrom","autoPlay","arrows","autoPlaySpeed","centerMode","className","containerClass","dotListClass","draggable","focusOnSelect","infinite","itemClass","keyBoardControl","minimumTouchDrag","renderButtonGroupOutside","renderDotsOutside","responsive","desktop","breakpoint","max","min","items","slidesToSlide","tablet","mobile","Login","codeResult","number","setnumber","otpsent","setotpsent","tempCode","settempCode","result","setresult","handleOTP","numInputs","separator","inputStyle","code","confirm","verifyCode","focusable","borderBottomColor","recaptcha","RecaptchaVerifier","signInWithPhoneNumber","confirmResult","sendCode","StatusBar","SignUp","setcountry","userName","setuserName","borderBottomWidth","handleSubmit","DynamicForm","Button","Test","setcrops","Feed","showHome","setshowHome","viewCrops","setviewCrops","setseeFarmer","Stack","createStackNavigator","Tab","createBottomTabNavigator","createDrawerNavigator","MyTabBar","descriptors","routes","index","tabBarVisible","KeyboardAvoidingView","route","undefined","tabBarLabel","isFocused","accessibilityRole","accessibilityState","accessibilityLabel","tabBarAccessibilityLabel","testID","tabBarTestID","event","emit","canPreventDefault","defaultPrevented","onLongPress","Homely","Navigator","tabBar","Screen","component","App","NavigationContainer","screenOptions","headerStyle","headerTintColor","headerTitleStyle","headerShown"],"mappings":"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","file":"static/js/app.3497803a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/newIcon4.57719745.png\";","import { Dimensions } from 'react-native';\nexport const winHeight = Dimensions.get(\"window\").height;\n\nexport const winWidth = Dimensions.get(\"window\").width;\n","import React from \"react\";\nimport {\n  Button,\n  TextInput,\n  Dimensions,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n} from \"react-native\";\n\nimport { winWidth } from \"../utils/window\";\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  FontAwesome5,\n  FontAwesome,\n  AntDesign,\n} from \"@expo/vector-icons\";\n\nconst windowHeight = Dimensions.get(\"screen\").height;\nconst windowWidth = Dimensions.get(\"screen\").width;\n\nexport interface HeaderProps {\n  onTap(): any;\n  onLogoTap(): any;\n  filterShown?: boolean;\n  onFilter(): any;\n  // catTap(): any;\n}\n\nconst Header = (props: HeaderProps) => {\n  const { onTap, onLogoTap, filterShown, onFilter } = props;\n  return (\n    <View style={styles.header}>\n      <View\n        style={{\n          width: \"100%\",\n          top: 0,\n          height: \"100%\",\n          flexDirection: \"row\",\n          alignSelf: \"flex-start\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          padding: winWidth > 767 ? 5 : 1,\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"flex-start\",\n            justifyContent: \"flex-start\",\n            top: winWidth > 767 ? 5 : 10,\n          }}\n          // onFocus={onLogoTap}\n        >\n          <Image\n            source={{ uri: require(\"../../assets/newicon4.png\") }}\n            style={{ width: 35, height: 35, top: winWidth > 767 ? -2 : -5 }}\n          />\n          <Text style={styles.headerText}>Krisearch</Text>\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: winWidth > 767 ? \"flex-start\" : \"flex-end\",\n            width: \"69%\",\n            justifyContent: winWidth > 767 ? \"flex-start\" : \"flex-end\",\n            left: -15,\n          }}\n        >\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              backgroundColor: \"#fff\",\n              width: winWidth > 767 ? \"55%\" : \"65%\",\n              height: 40,\n              padding: 5,\n              justifyContent: \"space-between\",\n              borderRadius: 10,\n              top: winWidth > 767 ? null : 3,\n            }}\n          >\n            <TextInput\n              style={{\n                width: winWidth > 767 ? \"90%\" : \"95%\",\n                height: winWidth > 767 ? 40 : 35,\n                fontSize: winWidth > 767 ? 16 : 16,\n                backgroundColor: \"#fff\",\n                outlineColor: \"#fff\",\n                borderRadius: 10,\n                padding: 5,\n              }}\n              placeholder=\"Search for Crops\"\n              placeholderTextColor=\"\t#808080\"\n              onFocus={onTap}\n            />\n            <AntDesign name=\"search1\" size={20} color=\"#808080\" />\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Header;\n\nconst styles = StyleSheet.create({\n  header: {\n    width: \"100%\",\n    height: 70,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"#346beb\",\n    padding: 5,\n  },\n  headerText: {\n    fontSize: winWidth > 767 ? 25 : 20,\n    color: \"#fff\",\n    fontWeight: \"600\",\n    marginLeft: 2,\n    alignSelf: \"flex-start\",\n    marginTop: winWidth < 767 ? 0 : 0,\n  },\n});\n","const getSmallString=(str : string,x:number)=>{\n    if(str.length>x){\n        str =str.substring(0,x-1)+\"...\";\n        return str;\n    }\n    else{\n        return str\n    }\n}\n\nexport default getSmallString","const hideNumber = (phone : number)=>{\n    var a=[];\n    var b;\n    var c;\n    var newString=[];\n    let i=0;\n\n    a = phone.toString().split('');\n   \n    a.splice(1,0,\"X\");\n    a.splice(3,2,\"X\");\n    a.splice(6,5,\"X\");\n    a.splice(1,0,\"X\");\n   \n    \n    return a;\n\n    \n\n\n}\n\nexport default hideNumber","import { Entypo, MaterialIcons, SimpleLineIcons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Dimensions,\n  Image,\n} from \"react-native\";\nimport getSmallString from \"../utils/getSmallString\";\nimport hideNumber from \"../utils/hideNumber\";\n\nexport interface CardProps {\n  name?: string;\n  avatar?: string;\n  crop?: string;\n  phone?: number;\n  address?: string;\n  onPress: any;\n  cropAvatar?: string;\n  isCrop?: boolean;\n}\n\nexport default function Card(props: CardProps) {\n  const {\n    name,\n    avatar,\n    crop,\n    phone,\n    address,\n    onPress,\n    cropAvatar,\n    isCrop,\n  } = props;\n\n  const windowWidth = Dimensions.get(\"window\").width;\n  const cardWidth = windowWidth / 2 - 30;\n\n  const toTitleCase = (phrase: string) => {\n    // if(str.length>20){\n    //     str =str.substring(0,19)+\"...\";\n    //     return str;\n    // }\n    // else{\n    //     return str\n    // }\n\n    if (phrase.length > 15) {\n      phrase = phrase.substring(0, 14) + \"...\";\n    }\n    return phrase\n      .toLowerCase()\n      .split(\" \")\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(\" \");\n  };\n\n  return (\n    <TouchableOpacity onPress={() => onPress()}>\n      <View\n        style={\n          windowWidth > 767\n            ? {\n                width: 190,\n                height: 190,\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderColor: \"#fff\",\n                borderRadius: 10,\n                alignItems: \"center\",\n                margin: 5,\n                marginBottom: 5,\n                shadowColor: \"#346beb\",\n                shadowOffset: {\n                  width: 1,\n                  height: 3,\n                },\n                shadowOpacity: 0.2,\n                shadowRadius: 2.22,\n\n                elevation: 5,\n              }\n            : {\n                width: windowWidth * 0.45,\n                height: 185,\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderColor: \"#fff\",\n                borderRadius: 10,\n                alignItems: \"center\",\n                margin: 6,\n\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: -2,\n                  height: 4,\n                },\n                shadowOpacity: 0.15,\n                shadowRadius: 2.22,\n\n                elevation: 3,\n              }\n        }\n      >\n        <Image\n          source={{ uri: avatar }}\n          style={\n            !isCrop\n              ? {\n                  width: 105,\n                  height: 105,\n                  borderWidth: 1,\n                  borderColor: \"#fff\",\n                  borderRadius: 105,\n                }\n              : {\n                  width: 105,\n                  height: 105,\n                  resizeMode: \"contain\",\n                  borderWidth: 1,\n                  borderColor: \"#fff\",\n                }\n          }\n        />\n        <Text style={{ fontWeight: \"500\", fontSize: 16, marginTop: 10 }}>\n          {isCrop ? crop : toTitleCase(name)}\n        </Text>\n\n        {!isCrop ? (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-evenly\",\n              alignItems: \"center\",\n\n              width: \"90%\",\n              padding: 5,\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"#87edbf\",\n\n                borderColor: \"#43d162\",\n                borderWidth: 1,\n                borderRadius: 10,\n                padding: 1.5,\n              }}\n            >\n              <Text style={{ color: \"#016617\", alignSelf: \"center\" }}>\n                {\" \"}\n                {crop}\n              </Text>\n            </View>\n            <Entypo name=\"dot-single\" size={15} style={{ marginTop: 5 }} />\n            <View>\n              <Text>{getSmallString(address, 8)}</Text>\n            </View>\n          </View>\n        ) : null}\n\n        {!isCrop ? (\n          <View style={{ marginBottom: 15 }}>\n            <Text>{phone ? hideNumber(phone) : \"Not available\"}</Text>\n          </View>\n        ) : null}\n      </View>\n    </TouchableOpacity>\n  );\n}\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  Dimensions,\n  ScrollView,\n  StyleSheet,\n  Text,\n  Image,\n  TouchableOpacity,\n  View,\n  ActivityIndicator,\n  FlatList,\n  Platform,\n  TextInput,\n} from \"react-native\";\nimport Header, { HeaderProps } from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport Farmers from \"../data/farmers.json\";\nimport Crops from \"../data/items.json\";\nimport { Modalize } from \"react-native-modalize\";\nimport Card from \"../components/Card\";\n\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  AntDesign,\n  FontAwesome5,\n  FontAwesome,\n  MaterialIcons,\n} from \"@expo/vector-icons\";\nimport hideNumber from \"../utils/hideNumber\";\nimport getSmallString from \"../utils/getSmallString\";\nimport States from \"../data/states.json\";\nimport Data from \"../data/items.json\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { render } from \"react-dom\";\nimport lottie from \"lottie-web\";\nimport { BlurView } from \"expo-blur\";\nimport { add } from \"date-fns\";\nimport * as Location from \"expo-location\";\nimport firebase from \"../firebase/firebase\";\nimport { concat } from \"react-native-reanimated\";\n\nconst Home = ({ navigation }) => {\n  const [location, setLocation] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const cropper = \"\";\n  const [blur, setblur] = useState(false);\n  const [placer, setplacer] = useState(false);\n  const [crop, setcrop] = useState([]);\n  const [parent, setparent] = useState(false);\n  const [farmers, setfarmers] = useState([]);\n  const [dispfarmers, setdispfarmers] = useState([]);\n  const [modalName, setmodalName] = useState(\"\");\n  const [firstScroll, setfirstScroll] = useState(0);\n  const [selectedState, setselectedState] = useState(\"\");\n  const [cats, setcats] = useState(false);\n  const [val, setval] = useState(\"\");\n  const [tempVal, settempVal] = useState(\"\");\n  const [addr, setaddr] = useState(\"\");\n  const [tempAddr, settempAddr] = useState(\"\");\n  const [parenter, setparenter] = useState(\"\");\n  const [term, setterm] = useState(\"\");\n  const [filteractive, setfilteractive] = useState(false);\n  const [addrToggle, setaddrToggle] = useState(false);\n  const [cropToggle, setcropToggle] = useState(false);\n  const [merge, setmerge] = useState(false);\n  const [dater, setdater] = useState(false);\n  const [tempDater, settempDater] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [tempStartDate, settempStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [tempEndDate, settempEndDate] = useState(new Date());\n  const [show, setshow] = useState(\"\");\n  const [applied, setapplied] = useState(false);\n  const [focused, setfocused] = useState([]);\n  const [cropFinal, setcropFinal] = useState(null);\n  const [listRegion, setlistRegion] = useState([]);\n  const [fileredFarmers, setfileredFarmers] = useState([]);\n  const [listCrops, setlistCrops] = useState([]);\n  const [showList, setshowList] = useState([]);\n  const [finallist, setfinallist] = useState([\n    {\n      cropName: \"\",\n      harvestDate: \"\",\n      quantity: 0,\n    },\n  ]);\n  const [filter, setfilter] = useState([\n    {\n      gender: \"\",\n      state: \"\",\n      harvestDate: \"\",\n    },\n  ]);\n\n  const [tempGen, settempGen] = useState(null);\n  const [tempState, settempState] = useState(null);\n  const [tempDate, settempDate] = useState(\"\");\n  const [sendVal, setsendVal] = useState(0);\n  const [filteredBlur, setfilteredBlur] = useState([]);\n  const [selectedCrop, setselectedCrop] = useState(false);\n  const [mapCroptoFarmer, setmapCroptoFarmer] = useState([]);\n\n  const tempValues = () => {\n    console.log(tempGen, tempState, tempDate);\n  };\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/farmers\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        farmerName: true,\n        farmingArea: true,\n        gender: tempGen,\n        harvestDate:\n          tempEndDate !== null ? tempEndDate.toLocaleDateString() : \"\",\n        orderBy: \"\",\n        cropName: cropFinal,\n        pageNo: firstScroll,\n        quantity: true,\n        state: tempState,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data.data.list), setfarmers(farmers.concat(data.data.list));\n      })\n      .catch((error) => console.error(error));\n  }, [firstScroll]);\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/farmers\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        farmerName: true,\n        farmingArea: true,\n        gender: tempGen,\n        harvestDate:\n          tempEndDate !== null ? tempEndDate.toLocaleDateString() : \"\",\n        orderBy: \"\",\n        cropName: cropFinal,\n        pageNo: 0,\n        quantity: true,\n        state: tempState,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data.data.list),\n          setlistCrops(data.data.list),\n          setfileredFarmers(data.data.list);\n      })\n      .catch((error) => console.error(error));\n  }, [sendVal]);\n\n  console.log(listCrops);\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        cropName: show,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => setfilteredBlur(data.data.list));\n  }, [show]);\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/fetch/states\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        cropName: cropFinal,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data.data.list), setlistRegion(data.data.list);\n      });\n  }, [cropFinal]);\n\n  const renderMatch = ({ item }) => (\n    <TouchableOpacity\n      style={{\n        width: winWidth > 767 ? \"50%\" : \"97%\",\n        height: 50,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n\n        padding: 5,\n        borderWidth: 1,\n        borderColor: \"#fff\",\n        borderRadius: 10,\n        backgroundColor: \"#fff\",\n      }}\n      onPress={() => {\n        setcropFinal(item.name), setsendVal(sendVal + 1);\n        setblur(false);\n      }}\n    >\n      <Image\n        source={{ uri: item.cropImage }}\n        style={{\n          width: 45,\n          height: 45,\n          borderWidth: 1,\n          borderColor: \"green\",\n          borderRadius: 45,\n        }}\n      />\n      <Text style={{ fontSize: 20, marginLeft: 5 }}>{item.name}</Text>\n    </TouchableOpacity>\n  );\n\n  const showDetails = (id) => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/farmer/details/\" + id, {\n      method: \"get\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: null,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data.data), setfocused(data.data.list);\n      })\n      .catch((err) => console.log(err));\n\n    OpenProfile();\n    console.log(listCrops);\n    {\n      listCrops.map((i) => {\n        if (i.id == id) {\n          i.crops.map((j) => {\n            showList.push(j);\n          });\n        }\n      });\n    }\n    console.log(showList);\n  };\n\n  console.log(focused);\n\n  const cropSearch = (item) => {\n    alert(item);\n    setselectedCrop(true);\n    {\n      farmers.map((i) => {\n        if (i.cropName == item) {\n          console.log(i.farmerName);\n        } else {\n          console.log(\"NO MATCH\");\n        }\n      });\n    }\n  };\n\n  console.log(mapCroptoFarmer);\n\n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestPermissionsAsync();\n      if (status !== \"granted\") {\n        setErrorMsg(\"Permission to access location was denied\");\n        return;\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n      setLocation(location);\n    })();\n  }, []);\n\n  let text = \"Waiting..\";\n  if (errorMsg) {\n    text = \"errorMsg\";\n  } else if (location != null) {\n    console.log(location);\n    Location.setGoogleApiKey(\"AIzaSyBM1KjPdMGHYcIiXTbDl4v_GAAjbOO6OPA\");\n    Location.reverseGeocodeAsync({\n      latitude: location.coords.latitude,\n      longitude: location.coords.longitude,\n    })\n      .then((e) => {\n        console.log(e);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  text = JSON.stringify(location);\n  console.log(text);\n\n  const handleLoad = () => {\n    setfirstScroll(firstScroll + 1);\n  };\n\n  const modalizeFilterRef = useRef<Modalize>(null);\n  const onOpenfilter = () => {\n    modalizeFilterRef.current?.open();\n  };\n\n  const onCloseFilter = () => {\n    modalizeFilterRef.current?.close();\n  };\n\n  const modalizeRef = useRef<Modalize>(null);\n  const OpenProfile = () => {\n    modalizeRef.current?.open();\n  };\n\n  const CloseProfile = () => {\n    modalizeRef.current?.close();\n  };\n\n  const suggestions = filteredBlur.filter((item) => {\n    // console.log(item.id, item.name);\n    if (item.id == 548 || item.id == 5721 || item.id == 810 || item.id == 47) {\n      return item;\n    }\n  });\n\n  const genderData = [\n    {\n      key: \"m\",\n      text: \"Men\",\n    },\n    {\n      key: \"f\",\n      text: \"Women\",\n    },\n  ];\n\n  const renderCrops = ({ item }) => (\n    <View\n      style={{\n        width: \"100%\",\n        height: 60,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        backgroundColor: \"#fff\",\n        marginBottom: 3,\n        borderWidth: 1,\n        padding: 5,\n        borderColor: \"#e8e8e8\",\n        borderRadius: 5,\n        shadowColor: \"#346beb\",\n        shadowOffset: {\n          width: 1,\n          height: 3,\n        },\n        shadowOpacity: 0.2,\n        shadowRadius: 2.22,\n\n        elevation: 5,\n      }}\n    >\n      {/* {\n    filteredBlur.map((i)=>{\n      if(item.name==i.cropName){\n        \n      }\n    })\n  } */}\n\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n        }}\n      >\n        {/* {opto.map((i) => {\n      if (i.name.localCompare(item.name) == 0) {\n        <Image\n          source={{\n            uri: item.cropImage,\n          }}\n          style={{\n            height: 45,\n            width: 45,\n            marginRight: 5,\n            borderRadius: \"50%\",\n            borderColor: \"green\",\n          }}\n        />;\n      }\n    })} */}\n\n        {filteredBlur.map((i) => {\n          if (\n            item.cropName.toString().toLocaleLowerCase() ===\n            i.name.toString().toLocaleLowerCase()\n          )\n            return (\n              <Image\n                source={{\n                  uri: i.cropImage,\n                }}\n                style={{\n                  height: 45,\n                  width: 45,\n                  marginRight: 5,\n                  borderRadius: 45,\n                  borderWidth: 1,\n                  borderColor: \"#bdbdbd\",\n                }}\n              />\n            );\n        })}\n\n        <Text style={{ fontSize: 16 }}>{item.cropName}</Text>\n        <Entypo name=\"dot-single\" size={20} color=\"black\" />\n        <Text style={{ fontSize: 16 }}>{item.quantity} Quintal</Text>\n      </View>\n\n      <Text style={{ fontSize: 16 }}>{item.harvestDate}</Text>\n    </View>\n  );\n  const renderItems = ({ item }) => (\n    <Card\n      key={item.id}\n      name={item.farmerName}\n      avatar={item.farmerImage}\n      phone={item.phone}\n      address={item.state}\n      crop={\n        item.crops[0].cropName +\n        (item.crops.length - 1 == 0 ? \"\" : \" + \" + (item.crops.length - 1))\n      }\n      onPress={() => {\n        // console.log(item.farmerName),\n        // setfarmer(item.id),\n        //   // console.log(item.crops.map((i) => i.quantity));\n        //   onOpen(),\n        //   setmodalName(item.farmerName);\n        console.log(\"Pressed\");\n        showDetails(item.id);\n      }}\n    />\n  );\n\n  return (\n    <View\n      style={{\n        width: \"100%\",\n        height: winHeight,\n        backgroundColor: \"#deebff\",\n      }}\n    >\n      <Header\n        onTap={() => {\n          setblur(true), setshow(\"\");\n        }}\n        onLogoTap={() => {\n          console.log(\"Logo\");\n        }}\n        onFilter={() => console.log(\"Filter\")}\n      />\n      <View\n        style={{\n          width: \"100%\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          flexDirection: \"row\",\n          backgroundColor: \"#deebff\",\n          padding: 10,\n        }}\n      >\n        <TouchableOpacity\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: \"#346beb\",\n            height: 30,\n            width: 80,\n            padding: 3,\n            borderRadius: 5,\n          }}\n          onPress={() => onOpenfilter()}\n        >\n          <AntDesign name=\"filter\" size={15} color=\"#fff\" />\n          <Text\n            style={{\n              fontSize: 15,\n              fontWeight: \"500\",\n              marginLeft: 2,\n              color: \"#fff\",\n            }}\n          >\n            {\" \"}\n            Filter\n          </Text>\n        </TouchableOpacity>\n        {sendVal !== 0 ? (\n          <View\n            style={{\n              marginRight: 10,\n              flexDirection: \"row\",\n              justifyContent: \"space-evenly\",\n              alignItems: \"center\",\n            }}\n          >\n            <TouchableOpacity\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"#f2f7ff\",\n                height: 30,\n                width: 90,\n                padding: 3,\n                borderRadius: 5,\n                margin: 5,\n                borderWidth: 2,\n                borderColor: \"#3A48ED\",\n              }}\n              onPress={() => {\n                settempGen(\"\");\n                settempEndDate(null);\n                settempState(\"\");\n                setcropFinal(\"\");\n                setsendVal(0);\n              }}\n            >\n              <MaterialIcons name=\"clear-all\" size={15} color=\"#3A48ED\" />\n              <Text\n                style={{\n                  fontSize: 15,\n                  fontWeight: \"500\",\n                  marginLeft: 2,\n                  color: \"#3A48ED\",\n                }}\n              >\n                {\" \"}\n                Clear All\n              </Text>\n            </TouchableOpacity>\n            {cropFinal !== null ? (\n              <TouchableOpacity\n                style={{\n                  alignItems: \"center\",\n                  marginRight: 5,\n                  backgroundColor: \"#87EDBF\",\n                  padding: 5,\n                  height: 30,\n\n                  borderRadius: 10,\n                  justifyContent: \"space-between\",\n                  flexDirection: \"row\",\n                  borderWidth: 1,\n                  borderColor: \"#3ECF8E\",\n                }}\n              >\n                <Text\n                  style={{\n                    color: \"#009150\",\n                    fontWeight: \"600\",\n                    fontSize: 15,\n                  }}\n                >\n                  {cropFinal}\n                </Text>\n\n                <AntDesign\n                  name=\"close\"\n                  size={15}\n                  color=\"#fff\"\n                  style={{\n                    top: 2,\n                    backgroundColor: \"#009150\",\n                    padding: 2,\n                    marginLeft: 5,\n                    borderRadius: 15,\n                  }}\n                  onPress={() => {\n                    setcropFinal(\"\");\n                    setsendVal(0);\n                  }}\n                />\n              </TouchableOpacity>\n            ) : (\n              <View style={{ backgroundColor: \"transparent\" }} />\n            )}\n            {tempGen !== null && sendVal !== 0 ? (\n              <TouchableOpacity\n                style={{\n                  alignItems: \"center\",\n                  marginRight: 5,\n                  backgroundColor: val ? \"#fff\" : \"#deebff\",\n                  padding: 5,\n                  height: 30,\n\n                  borderRadius: 20,\n                  justifyContent: \"space-between\",\n                  flexDirection: \"row\",\n                  borderWidth: 1,\n                  borderColor: \"#346beb\",\n                }}\n              >\n                <Text style={{ color: \"#000\" }}>\n                  {tempGen\n                    ? tempGen === \"m\"\n                      ? \"Men\"\n                      : tempGen === \"f\"\n                      ? \"Women\"\n                      : \"Other\"\n                    : null}\n                </Text>\n                <AntDesign\n                  name=\"close\"\n                  size={15}\n                  color=\"#3A48ED\"\n                  style={{\n                    top: 2,\n                    backgroundColor: \"#A1C7FF\",\n                    padding: 2,\n                    borderRadius: 15,\n                    marginLeft: 5,\n                  }}\n                  onPress={() => {\n                    settempGen(null), setsendVal(sendVal + 1);\n                  }}\n                />\n              </TouchableOpacity>\n            ) : (\n              <View style={{ backgroundColor: \"transparent\" }} />\n            )}\n            {tempState !== null && sendVal !== 0 ? (\n              <TouchableOpacity\n                style={{\n                  alignItems: \"center\",\n                  marginRight: 5,\n                  backgroundColor: val ? \"#fff\" : \"#deebff\",\n                  padding: 5,\n                  height: 30,\n\n                  borderRadius: 20,\n                  justifyContent: \"space-between\",\n                  flexDirection: \"row\",\n                  borderWidth: 1,\n                  borderColor: \"#346beb\",\n                }}\n              >\n                <Text style={{ color: \"#000\" }}>{tempState}</Text>\n                <AntDesign\n                  name=\"close\"\n                  size={15}\n                  color=\"#3A48ED\"\n                  style={{\n                    top: 2,\n                    backgroundColor: \"#A1C7FF\",\n                    padding: 2,\n                    borderRadius: 15,\n                    marginLeft: 5,\n                  }}\n                  onPress={() => {\n                    settempState(null), setsendVal(sendVal + 1);\n                  }}\n                />\n              </TouchableOpacity>\n            ) : (\n              <View style={{ backgroundColor: \"transparent\" }} />\n            )}\n          </View>\n        ) : (\n          <View\n            style={{\n              alignItems: \"center\",\n              marginRight: 5,\n              backgroundColor: \"#fff\",\n              padding: 5,\n              height: 30,\n              margin: 5,\n              width: 50,\n              borderRadius: 10,\n              justifyContent: \"center\",\n              flexDirection: \"row\",\n              borderWidth: 1,\n              borderColor: \"#346beb\",\n            }}\n          >\n            <Text style={{ color: \"#000\" }}>All</Text>\n          </View>\n        )}\n      </View>\n      {sendVal !== 0 ? (\n        <FlatList\n          showsVerticalScrollIndicator={false}\n          data={fileredFarmers}\n          renderItem={renderItems}\n          ListEmptyComponent={() => (\n            <Text style={{ fontSize: 30 }}> Oops ! Didnt find that</Text>\n          )}\n          contentContainerStyle={{\n            flexDirection: \"row\",\n            width: \"100%\",\n            flexWrap: \"wrap\",\n            alignItems: \"flex-start\",\n            justifyContent: \"center\",\n            backgroundColor: \"#deebff\",\n            padding: winWidth > 767 ? 10 : 2,\n          }}\n          onEndReached={() => handleLoad()}\n        />\n      ) : (\n        <FlatList\n          showsVerticalScrollIndicator={false}\n          data={farmers}\n          renderItem={renderItems}\n          ListEmptyComponent={() => (\n            <Text style={{ fontSize: 30 }}> Oops ! Didnt find that</Text>\n          )}\n          contentContainerStyle={{\n            flexDirection: \"row\",\n            width: \"100%\",\n            flexWrap: \"wrap\",\n            alignItems: \"flex-start\",\n            justifyContent: \"center\",\n            backgroundColor: \"#deebff\",\n            padding: winWidth > 767 ? 10 : 2,\n          }}\n          onEndReached={() => handleLoad()}\n        />\n      )}\n      <View style={{ width: \"100%\", height: 40 }} />\n      <Modalize\n        ref={modalizeFilterRef}\n        modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.88}\n        modalStyle={winWidth > 767 ? { width: 400, alignSelf: \"center\" } : null}\n        threshold={100}\n        closeOnOverlayTap={true}\n        mod\n      >\n        <View\n          style={{\n            width: \"100%\",\n            flexDirection: \"row\",\n            alignItems: \"flex-start\",\n            justifyContent: \"space-between\",\n            padding: 5,\n            top: 5,\n          }}\n        >\n          {/* <TouchableOpacity onPress={() => onCloseFilter()}>\n                Close Filter\n              </TouchableOpacity> */}\n          <Text style={{ fontSize: 16, marginLeft: 7, fontWeight: \"600\" }}>\n            Filter Results\n          </Text>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n\n              width: \"50%\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <TouchableOpacity\n              style={{\n                width: 60,\n                height: 30,\n                backgroundColor: \"#fff\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n\n                borderRadius: 10,\n                borderColor: \"#3A48ED\",\n                borderWidth: 2,\n              }}\n              onPress={() => {\n                settempGen(\"\");\n                settempState(\"\");\n                settempEndDate(null);\n                setsendVal(0);\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 16,\n                  color: \"#3A48ED\",\n                }}\n              >\n                Reset\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={{\n                width: 60,\n                height: 30,\n                backgroundColor: \"#3ECF8E\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n\n                borderRadius: 10,\n                borderColor: \"#3ECF8E\",\n                borderWidth: 2,\n              }}\n              onPress={() => {\n                tempValues();\n                setsendVal(sendVal + 1);\n                onCloseFilter();\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 16,\n                  color: \"#fff\",\n                }}\n              >\n                Apply\n              </Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={() => {\n                onCloseFilter();\n              }}\n            >\n              <View\n                style={{\n                  width: 25,\n                  height: 25,\n                  borderWidth: 2,\n                  borderColor: \"#A1C7FF\",\n                  alignItems: \"center\",\n                  alignSelf: \"flex-end\",\n                  justifyContent: \"center\",\n                  flexDirection: \"row\",\n                  backgroundColor: \"#A1C7FF\",\n                  borderRadius: 25,\n                }}\n              >\n                <AntDesign name=\"close\" size={20} color=\"#3A48ED\" />\n              </View>\n            </TouchableOpacity>\n          </View>\n        </View>\n        <View\n          style={{\n            width: \"95%\",\n            alignSelf: \"center\",\n            height: 1,\n            backgroundColor: \"#C0C0C0\",\n            marginTop: 10,\n            alignItems: \"center\",\n          }}\n        ></View>\n        <Text\n          style={{\n            color: \"#6F6F6F\",\n            fontSize: 15,\n            marginTop: 3,\n            marginLeft: 7,\n            padding: 5,\n          }}\n        >\n          By Gender\n        </Text>\n        <View\n          style={{\n            width: \"32%\",\n            marginTop: 10,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            padding: 5,\n            marginLeft: 7,\n            alignSelf: \"flex-start\",\n          }}\n        >\n          {genderData.map((item) => {\n            return (\n              <View key={item.key} style={styles.buttonContainer}>\n                <TouchableOpacity\n                  style={styles.circle}\n                  onPress={() => {\n                    settempGen(item.key);\n                  }}\n                >\n                  {tempGen === item.key && (\n                    <View style={styles.checkedCircle} />\n                  )}\n                </TouchableOpacity>\n                <Text style={{ fontSize: 16, marginLeft: 5 }}>{item.text}</Text>\n              </View>\n            );\n          })}\n        </View>\n        <View\n          style={{\n            width: \"100%\",\n            marginTop: 10,\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            justifyContent: \"space-evenly\",\n            padding: 5,\n            alignSelf: \"flex-start\",\n          }}\n        >\n          <View\n            style={{\n              width: \"95%\",\n              alignSelf: \"center\",\n              height: 1,\n              backgroundColor: \"#C0C0C0\",\n              marginTop: 10,\n              alignItems: \"center\",\n            }}\n          ></View>\n          <Text\n            style={{\n              color: \"#6F6F6F\",\n              fontSize: 15,\n              marginTop: 10,\n              marginLeft: 0,\n              marginBottom: 5,\n              padding: 5,\n            }}\n          >\n            By States\n          </Text>\n\n          <TouchableOpacity\n            onPress={() => setaddrToggle(!addrToggle)}\n            style={{\n              flexDirection: \"row\",\n              backgroundColor: \"#d6d9ff\",\n              borderWidth: 2,\n              borderColor: \"#7b42ff\",\n              borderRadius: 5,\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              padding: 5,\n              minWidth: \"30%\",\n\n              marginLeft: 7,\n            }}\n          >\n            <Text style={{ fontSize: 15 }}>\n              {tempAddr ? tempAddr : \"All States\"}\n            </Text>\n            <AntDesign name=\"down\" size={12} />\n          </TouchableOpacity>\n          {addrToggle ? (\n            <View style={{ marginTop: 10 }}>\n              {listRegion.map((item) => {\n                return (\n                  <View key={item.state} style={styles.buttonnewContainer}>\n                    <TouchableOpacity\n                      style={styles.circle}\n                      onPress={() => {\n                        settempState(item.state);\n                        // settempAddr(item.name);\n                        // // setaddr(item.name);\n                        // setaddrToggle(false);\n                      }}\n                    >\n                      {tempState === item.state && (\n                        <View style={styles.checkedCircle} />\n                      )}\n                    </TouchableOpacity>\n                    <Text style={{ fontSize: 16, marginLeft: 5 }}>\n                      {item.state}\n                    </Text>\n                  </View>\n                );\n              })}\n            </View>\n          ) : null}\n        </View>\n        <View\n          style={{\n            width: \"100%\",\n            marginTop: 10,\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            justifyContent: \"space-evenly\",\n            padding: 5,\n            alignSelf: \"flex-start\",\n          }}\n        >\n          <View\n            style={{\n              width: \"95%\",\n              alignSelf: \"center\",\n              height: 1,\n              backgroundColor: \"#C0C0C0\",\n              marginTop: 10,\n              alignItems: \"center\",\n            }}\n          ></View>\n          <View>\n            <Text\n              style={{\n                color: \"#6F6F6F\",\n                fontSize: 15,\n                marginTop: 10,\n                marginLeft: 0,\n                marginBottom: 5,\n                zIndex: 1000,\n                padding: 5,\n              }}\n            >\n              By Harvest Date\n            </Text>\n            <View\n              style={{\n                flex: 1,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                width: \"100%\",\n                height: 150,\n                padding: 5,\n              }}\n            >\n              <View style={{ marginLeft: 20 }}>\n                <Text style={{ marginBottom: 10 }}>To</Text>\n                <DatePicker\n                  dateFormat=\"dd/MM/yyyy\"\n                  popperPlacement=\"bottom-left\"\n                  selected={tempEndDate}\n                  onChange={(date) => {\n                    settempEndDate(date);\n                    // date <= tempStartDate\n                    //   ? alert(\n                    //       \"End Date cannot be less than or equal to Start Date\"\n                    //     )\n                    //   : settempEndDate(date);\n                    // settempDater(true);\n                  }}\n                  customInput={\n                    <TextInput\n                      style={{\n                        backgroundColor: \"#d6d9ff\",\n                        borderRadius: 5,\n                        borderColor: \"#7b42ff\",\n                        height: 35,\n                        borderWidth: 2,\n                        padding: 5,\n                        fontSize: 15,\n                        width: 100,\n                      }}\n                    />\n                  }\n                />\n              </View>\n            </View>\n          </View>\n          <View\n            style={{\n              width: \"95%\",\n              alignSelf: \"center\",\n              height: 1,\n\n              marginTop: 100,\n              alignItems: \"center\",\n            }}\n          ></View>\n        </View>\n        <View\n          style={{\n            width: \"100%\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-evenly\",\n            alignSelf: \"flex-end\",\n\n            marginTop: \"30%\",\n          }}\n        ></View>\n      </Modalize>\n      <Modalize\n        ref={modalizeRef}\n        modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.88}\n        modalStyle={winWidth > 767 ? { width: 400, alignSelf: \"center\" } : null}\n        threshold={100}\n        closeOnOverlayTap={true}\n        mod\n      >\n        <View>\n          <View\n            style={{\n              backgroundColor: \"#3A48ED\",\n              width: \"100%\",\n              height: 170,\n              borderWidth: 1,\n              top: -2,\n              borderRadius: 15,\n              borderColor: \"#3A48ED\",\n              shadowColor: \"#000\",\n              shadowOffset: {\n                width: 0,\n                height: 4,\n              },\n              shadowOpacity: 0.32,\n              shadowRadius: 5.46,\n\n              elevation: 9,\n            }}\n          >\n            <TouchableOpacity\n              onPress={() => {\n                CloseProfile(), setshowList([]);\n              }}\n              style={{\n                alignItems: \"center\",\n                marginTop: 5,\n                marginRight: 2,\n                padding: 5,\n                justifyContent: \"center\",\n                alignSelf: \"flex-end\",\n                backgroundColor: \"rgba(0,0,0,0.2)\",\n                borderRadius: 10,\n                height: 35,\n                width: 70,\n              }}\n            >\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Text\n                  style={{\n                    fontSize: 15,\n                    fontWeight: 500,\n                    color: \"#fff\",\n                    marginRight: 5,\n                  }}\n                >\n                  Close\n                </Text>\n                <SimpleLineIcons\n                  name=\"close\"\n                  size={15}\n                  color=\"#fff\"\n                  onPress={() => CloseProfile()}\n                />\n              </View>\n            </TouchableOpacity>\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                padding: 2,\n                top: -10,\n              }}\n            >\n              <View style={{ width: \"40%\", height: \"100%\", padding: 5 }}>\n                {focused.map((i) => {\n                  return (\n                    <Image\n                      source={{ uri: i.farmerImage }}\n                      style={{\n                        height: 120,\n                        width: 120,\n                        borderRadius: 120,\n                        borderColor: \"#fff\",\n                        borderWidth: 2,\n                      }}\n                    />\n                  );\n                })}\n              </View>\n              <View\n                style={{\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-evenly\",\n                  width: \"60%\",\n                  height: \"100%\",\n                }}\n              >\n                <View\n                  style={{\n                    flexDirection: \"column\",\n                    alignItems: \"flex-start\",\n                    width: \"100%\",\n                    height: \"100%\",\n                    justifyContent: \"space-evenly\",\n                  }}\n                >\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                    <Feather name=\"user\" size={20} color=\"#fff\" />\n\n                    {focused.map((i) => {\n                      return (\n                        <Text\n                          style={{\n                            fontSize: 20,\n                            color: \"#fff\",\n                            fontWeight: \"700\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          {i.farmerName}\n                        </Text>\n                      );\n                    })}\n                  </View>\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                    <Feather name=\"map-pin\" size={20} color=\"#fff\" />\n                    {focused.map((i) => {\n                      return (\n                        <Text\n                          style={{\n                            fontSize: 20,\n                            color: \"#fff\",\n                            fontWeight: \"700\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          {i.state}\n                        </Text>\n                      );\n                    })}\n                  </View>\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                    <Feather name=\"phone\" size={20} color=\"#fff\" />\n                    {focused.map((i) => {\n                      return (\n                        <Text\n                          style={{\n                            fontSize: 20,\n                            color: \"#fff\",\n                            fontWeight: \"700\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          {hideNumber(i.phone)}\n                        </Text>\n                      );\n                    })}\n                  </View>\n                </View>\n              </View>\n            </View>\n            <View style={{}}>\n              <View\n                style={{\n                  width: \"100%\",\n                  alignItems: \"center\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  marginTop: 20,\n                  padding: 5,\n                  marginBottom: 10,\n                }}\n              >\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-start\",\n                  }}\n                >\n                  <Entypo name=\"leaf\" size={15} color=\"#9F99FF\" />\n                  <Text\n                    style={{\n                      fontSize: 15,\n                      color: \"#6F6F6F\",\n                      fontWeight: \"600\",\n                      marginLeft: 5,\n                    }}\n                  >\n                    Crop Details\n                  </Text>\n                </View>\n\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                  }}\n                >\n                  <SimpleLineIcons name=\"calendar\" size={15} color=\"#9F99FF\" />\n                  <Text\n                    style={{\n                      fontSize: 15,\n                      color: \"#6F6F6F\",\n                      fontWeight: \"600\",\n                      marginRight: 5,\n                      marginLeft: 5,\n                    }}\n                  >\n                    Harvest Dates\n                  </Text>\n                </View>\n              </View>\n              <View\n                style={{\n                  width: \"95%\",\n                  alignSelf: \"center\",\n                  height: 1,\n                  backgroundColor: \"#C0C0C0\",\n                }}\n              ></View>\n              <View\n                style={{\n                  height: winHeight * 0.4,\n                  marginTop: 10,\n                  marginBottom: 10,\n                }}\n              >\n                <FlatList\n                  showsVerticalScrollIndicator={false}\n                  data={showList}\n                  renderItem={renderCrops}\n                  ListEmptyComponent={() => (\n                    <View style={styles.container}>\n                      <Text style={{ fontSize: 30 }}>\n                        {\" \"}\n                        Loading your crops..\n                      </Text>\n                    </View>\n                  )}\n                  contentContainerStyle={{\n                    flex: 1,\n                  }}\n                />\n              </View>\n            </View>\n            <View\n              style={{\n                width: \"100%\",\n                flexDirection: \"column\",\n                top: -29,\n                alignItems: \"center\",\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 15,\n                  color: \"#808080\",\n                  marginLeft: 5,\n                }}\n              >\n                Coming soon\n              </Text>\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-evenly\",\n                  top: 5,\n                }}\n              >\n                <TouchableOpacity\n                  style={{\n                    width: winWidth < 400 ? 70 : 90,\n                    height: winWidth < 400 ? 30 : 40,\n                    backgroundColor: \"#A9A9A9\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flexDirection: \"row\",\n                    borderRadius: 10,\n                  }}\n                  onPress={() =>\n                    alert(\n                      \"Click to chat feature helps you connect directly to this farmer in one click. Feature Coming soon !\"\n                    )\n                  }\n                >\n                  <FontAwesome5 name=\"whatsapp\" size={20} color=\"#fff\" />\n                  <Text\n                    style={{\n                      fontSize: winWidth < 400 ? 16 : 20,\n                      color: \"#fff\",\n                      marginLeft: 5,\n                    }}\n                  >\n                    Chat\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={{\n                    width: winWidth < 400 ? 70 : 90,\n                    height: winWidth < 400 ? 30 : 40,\n                    backgroundColor: \"#A9A9A9\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flexDirection: \"row\",\n                    borderRadius: 10,\n                  }}\n                  onPress={() => alert(\"Feature Coming soon !\")}\n                >\n                  <Text\n                    style={{\n                      fontSize: winWidth < 400 ? 16 : 20,\n                      color: \"#fff\",\n                      marginLeft: 5,\n                    }}\n                  >\n                    Buy\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={{\n                    width: winWidth < 400 ? 90 : 120,\n                    height: winWidth < 400 ? 35 : 40,\n                    backgroundColor: \"#fff\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flexDirection: \"row\",\n                    borderRadius: 10,\n                    borderColor: \"#A9A9A9\",\n                    borderWidth: 2,\n                    padding: 5,\n                  }}\n                  onPress={() =>\n                    alert(\n                      \"Support the farmer by any kind. Feature Coming Soon !\"\n                    )\n                  }\n                >\n                  <FontAwesome name=\"handshake-o\" size={15} color=\"#A9A9A9\" />\n                  <Text\n                    style={{\n                      fontSize: winWidth < 400 ? 16 : 20,\n                      color: \"#A9A9A9\",\n                      marginLeft: 5,\n                    }}\n                  >\n                    Support\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </View>\n        </View>\n      </Modalize>\n      {blur ? (\n        <View\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n            position: \"absolute\",\n          }}\n        >\n          <BlurView\n            tint=\"dark\"\n            intensity={40}\n            style={[StyleSheet.absoluteFill, styles.nonBlurredContent]}\n          >\n            <View\n              style={{\n                backgroundColor: \"#fff\",\n                height: 55,\n                width: winWidth > 767 ? \"50%\" : \"97%\",\n                alignSelf: \"center\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                borderRadius: 8,\n                padding: 20,\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 4,\n                },\n                shadowOpacity: 0.32,\n                shadowRadius: 5.46,\n                marginTop: 10,\n                elevation: 9,\n              }}\n            >\n              <TextInput\n                style={\n                  Platform.OS === \"web\" && {\n                    outlineColor: \"#fff\",\n                    height: 40,\n                    backgroundColor: \"white\",\n                    width: \"95%\",\n                    padding: 5,\n                    fontSize: 20,\n                  }\n                }\n                placeholder=\"Search for Crops\"\n                autoFocus={true}\n                editable={true}\n                onChangeText={(text) => {\n                  console.log(text);\n                  setshow(text);\n                }}\n              />\n              <TouchableOpacity onPress={() => setblur(false)}>\n                <View\n                  style={{\n                    width: 25,\n                    height: 25,\n                    borderWidth: 2,\n                    borderColor: \"#A1C7FF\",\n                    alignItems: \"center\",\n                    alignSelf: \"flex-end\",\n                    justifyContent: \"center\",\n                    right: -10,\n                    backgroundColor: \"#A1C7FF\",\n                    borderRadius: 25,\n                  }}\n                >\n                  <AntDesign name=\"close\" size={20} color=\"#3A48ED\" />\n                </View>\n              </TouchableOpacity>\n            </View>\n            <View\n              style={{\n                width: winWidth > 767 ? \"50%\" : \"97%\",\n                backgroundColor: \"#fff\",\n                borderRadius: 10,\n                borderWidth: 1,\n                margin: 10,\n                borderColor: \"#fff\",\n                alignSelf: \"center\",\n                alignItems: \"flex-start\",\n              }}\n            >\n              <View style={{ height: 40, padding: 10 }}>\n                <Text style={{ fontSize: 15 }}>\n                  {show !== \"\" ? \"Matching Crops\" : \"Suggested Crops\"}\n                </Text>\n              </View>\n\n              {show !== \"\" ? (\n                <FlatList\n                  showsVerticalScrollIndicator={false}\n                  data={filteredBlur}\n                  renderItem={renderMatch}\n                  ListEmptyComponent={() => (\n                    <View style={styles.container}>\n                      <Text style={{ fontSize: 30 }}>\n                        {\" \"}\n                        Oops ! Didnt find that\n                      </Text>\n                    </View>\n                  )}\n                  contentContainerStyle={{\n                    width: \"100%\",\n                  }}\n                />\n              ) : (\n                <FlatList\n                  showsVerticalScrollIndicator={false}\n                  data={suggestions}\n                  renderItem={renderMatch}\n                  ListEmptyComponent={() => (\n                    <View style={styles.container}>\n                      <Text style={{ fontSize: 30 }}>\n                        {\" \"}\n                        Oops ! Didnt find that\n                      </Text>\n                    </View>\n                  )}\n                  contentContainerStyle={{\n                    width: \"100%\",\n                  }}\n                />\n              )}\n            </View>\n            <TouchableOpacity\n              style={{ flex: 1, backgroundColor: \"transparent\" }}\n              onPress={() => setblur(false)}\n            ></TouchableOpacity>\n          </BlurView>\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default Home;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: winHeight,\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginRight: 5,\n  },\n  buttonnewContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginRight: 5,\n    padding: 5,\n  },\n\n  circle: {\n    height: 25,\n    width: 25,\n    borderRadius: 25,\n    borderWidth: 1,\n    borderColor: \"#3A48ED\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  checkedCircle: {\n    width: 25,\n    height: 25,\n    borderRadius: 25,\n    backgroundColor: \"#3A48ED\",\n  },\n});\n","import firebase from \"firebase\";\n\nconst config ={\n    // apiKey: \"AIzaSyB5JDxo5zw-8iIGx32LIxYbOFEIxL6-BeU\",\n    // authDomain: \"fbpauth.firebaseapp.com\",\n    // projectId: \"fbpauth\",\n    // storageBucket: \"fbpauth.appspot.com\",\n    // messagingSenderId: \"950860507824\",\n    // appId: \"1:950860507824:web:d8f7b06916d3075e75e975\"\n    apiKey: \"AIzaSyCx6yWRJshRYo8dYyShWDruWlrXt_eL7Io\",\n    authDomain: \"krisearch-5a05d.firebaseapp.com\",\n    projectId: \"krisearch-5a05d\",\n    storageBucket: \"krisearch-5a05d.appspot.com\",\n    messagingSenderId: \"976628563758\",\n    appId: \"1:976628563758:web:5ecf6cd6bab45e920c04bf\",\n    measurementId: \"G-NZ5VYEJE75\"\n}\n\nfirebase.initializeApp(config);\nexport default firebase;","export const env= {\n    accessKeyId:\"AKIA5J56SHX3SQWUR2EF\",\n    secretAccessKey:\"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\",\n    googleAPIkey:\"AIzaSyBM1KjPdMGHYcIiXTbDl4v_GAAjbOO6OPA\"\n\n\n}","import { StatusBar } from \"expo-status-bar\";\nimport React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  Image,\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  Platform,\n  TouchableOpacity,\n  ScrollView,\n  FlatList,\n  ImageBackground,\n} from \"react-native\";\nimport Header from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport firebase from \"../firebase/firebase\";\nimport { firestore } from \"firebase\";\nimport * as Location from \"expo-location\";\nimport { Modalize } from \"react-native-modalize\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport S3FileUpload from \"react-s3\";\nimport { uploadFile } from \"react-s3\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport Select from \"react-select\";\n\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  AntDesign,\n  FontAwesome5,\n  FontAwesome,\n  MaterialIcons,\n  Ionicons,\n} from \"@expo/vector-icons\";\nimport DynamicForm from \"../components/dynamicForm\";\nimport DynForm from \"../components/DynForm\";\nimport { env } from \"../env\";\nimport { da } from \"date-fns/locale\";\n\nconst Profile = ({ navigation }) => {\n  const config = {\n    bucketName: \"claro-farmers\",\n\n    region: \"ap-south-1\",\n    accessKeyId: env.accessKeyId,\n    secretAccessKey: env.secretAccessKey,\n  };\n\n  const modalizeRef = useRef<Modalize>(null);\n\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onClose = () => {\n    modalizeRef.current?.close();\n  };\n  const [crop, setcrop] = useState([]);\n  const [applied, setapplied] = useState(false);\n  const [firstName, setfirstName] = useState(\"\");\n  const [qty, setqty] = useState(\"\");\n  const [hdate, sethdate] = useState([]);\n  const [tempCrop, settempCrop] = useState(\"\");\n  const [tempfirstName, settempfirstName] = useState(\"\");\n  const [tempqty, settempqty] = useState(\"\");\n  const [tempArea, settempArea] = useState(\"\");\n  const [tempfa, settempfa] = useState(0);\n  const [farmarea, setfarmarea] = useState(0);\n  const [temphDate, settemphDate] = useState(\"\");\n  const [area, setarea] = useState(\"\");\n  const [details, setdetails] = useState([]);\n  const [image, setimage] = useState(\"\");\n  const [tempImage, settempImage] = useState(\"\");\n  const [modData, setmodData] = useState(false);\n  const [block, setblock] = useState(\"\");\n  const [irState, setirState] = useState(\"\");\n  const [mainCrop, setmainCrop] = useState([]);\n  const [confirmCrops, setconfirmCrops] = useState([]);\n  const [location, setLocation] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [filteredBlur, setfilteredBlur] = useState([]);\n  const [unit, setunit] = useState(\"\");\n  const [city, setcity] = useState(\"\");\n  const [district, setdistrict] = useState(\"\");\n  const [country, setcountry] = useState(\"\");\n  const [region, setregion] = useState(\"\");\n  const [lat, setlat] = useState(0);\n  const [long, setlong] = useState(0);\n\n  useEffect(() => {\n    firebase\n      .auth()\n      .currentUser?.getIdToken()\n      .then(function (idtoken) {\n        console.log(idtoken);\n        fetch(\"http://staging.clarolabs.in:7050/Ksearch/farmer/get\", {\n          method: \"post\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            authToken: idtoken,\n          }),\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            // console.log(data.data.farmer);\n            console.log(data.data.farmer);\n            setfirstName(data.data.farmer.name);\n            setblock(data.data.farmer.block);\n            setlat(data.data.farmer.latitude);\n            setlong(data.data.farmer.longitude);\n            setcity(data.data.farmer.village);\n            setblock(data.data.farmer.country);\n            setregion(data.data.farmer.state);\n            setirState(data.data.farmer.state);\n            setdistrict(data.data.farmer.district);\n            setimage(data.data.farmer.farmerImage);\n            setfarmarea(data.data.farmer.totalLandSize);\n            setunit(data.data.farmer.totalLandSizeUnit);\n            console.log(data.data.crops);\n            setFields(data.data.crops);\n            setmainCrop(data.data.crops);\n          })\n          .catch((err) => console.log(err));\n      });\n  }, []);\n\n  // var docRef = firestore()\n  //   .collection(\"users\")\n  //   .doc(firebase.auth().currentUser?.uid);\n  // docRef.get().then(function (doc) {\n  //   if (doc.exists) {\n  //     console.log(\"DocData:\", doc.data());\n  //     // console.log(doc.data().crop);\n  //     setcrop(doc.data().crop);\n  //     // console.log(doc.data().firstName);\n  //     setfirstName(doc.data().firstName);\n  //     // console.log(doc.data().quantity);\n  //     setqty(doc.data().quantity);\n  //     // console.log(doc.data().harvestDate);\n  //     sethdate(doc.data().harvestDate);\n  //   } else {\n  //     console.log(\"No such document!\");\n  //   }\n  // });\n\n  // const [location, setLocation] = useState(null);\n  // const [errorMsg, setErrorMsg] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestPermissionsAsync();\n      if (status !== \"granted\") {\n        setErrorMsg(\"Permission to access location was denied\");\n        return;\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n      setLocation(location);\n    })();\n  }, []);\n\n  let text = \"Waiting..\";\n  if (errorMsg) {\n    text = \"errorMsg\";\n  } else if (location) {\n    console.log(location);\n    text = JSON.stringify(location);\n    console.log(text);\n  }\n  // const getLocation = () => {};\n  // const handleEdit = () => {\n  //   console.log(firstName);\n  //   console.log(tempfirstName);\n  //   setfirstName(tempfirstName);\n  //   setcrop(tempCrop);\n  //   firebase\n  //     .firestore()\n  //     .collection(\"users\")\n  //     .doc(firebase.auth().currentUser?.uid)\n  //     .set({\n  //       firstName: tempfirstName,\n  //       location: text,\n  //       crop: crop,\n  //       quantity: qty,\n  //       harvestDate: hdate,\n  //       area: tempArea,\n  //     })\n  //     .then(function () {\n  //       console.log(\"Updated Successfully\");\n  //     })\n  //     .catch(function (err) {\n  //       console.log(err);\n  //     });\n\n  //   console.log(crop);\n  //   console.log(qty);\n  //   console.log(hdate);\n  // };\n  console.log(firstName);\n  useEffect(() => {\n    (async () => {\n      if (Platform.OS !== \"web\") {\n        const {\n          status,\n        } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== \"granted\") {\n          alert(\"Sorry, we need camera roll permissions to make this work!\");\n        }\n      }\n    })();\n  }, []);\n\n  const editImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    // console.log(result.uri);\n\n    if (!result.cancelled) {\n      settempImage(result.uri);\n    }\n  };\n\n  const [fields, setFields] = useState([\n    { name: \"\", harvestingTime: \"\", estimatedYield: 0 },\n  ]);\n\n  const [drops, setDrops] = useState([]);\n  const [imageColl, setimageColl] = useState([]);\n  const [tempDate, settempDate] = useState(new Date());\n  const [tempID, settempID] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [selectedUnit, setselectedUnit] = useState(null);\n\n  const removeCrop = (i) => {\n    const values = [...fields];\n    values.splice(i, 1);\n    setFields(values);\n  };\n\n  const addCrop = () => {\n    const val = [...fields];\n    val.push({ name: \"\", harvestingTime: \"\", estimatedYield: 0 });\n    setFields(val);\n  };\n\n  const matchCrop = (e, q, h, i) => {\n    const values = [...fields];\n    if (e !== null) {\n      values[i].name = e;\n    } else if (q !== null) {\n      values[i].estimatedYield = Number(q);\n    } else if (h !== null) {\n      values[i].harvestingTime = h;\n    }\n\n    setFields(values);\n    console.log(fields);\n  };\n\n  const units = [\n    {\n      values: \"Kattha\",\n      label: \"Kattha\",\n    },\n    {\n      values: \"Acres\",\n      label: \"Acres\",\n    },\n  ];\n\n  const showData = () => {\n    console.log(fields);\n  };\n  const options = [];\n  drops.map((i) => {\n    options.push({ values: i.name, label: i.name });\n  });\n\n  const [url, seturl] = useState(\"\");\n\n  const uploadImage = (e) => {\n    console.log(e.target.files[0]);\n    S3FileUpload.uploadFile(e.target.files[0], config)\n      .then((data) => {\n        console.log(data.location),\n          seturl(data.location),\n          setimage(data.location);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"inputFields\", inputFields);\n  };\n\n  const handleInputChange = (index, event) => {\n    const values = [...inputFields];\n    if (event.target.name === \"name\") {\n      values[index].name = event.target.value;\n    } else if (event.target.name === \"estimatedYield\") {\n      values[index].estimatedYield = Number(event.target.value);\n    } else {\n      values[index].harvestingTime = event.target.value;\n    }\n\n    setInputFields(values);\n  };\n\n  //   const handleAddFields = () => {\n  //     const values = [...inputFields];\n  //     values.push({ firstName: \"\", lastName: \"\" });\n  //     setInputFields(values);\n  //   };\n\n  //   const handleRemoveFields = (index) => {\n  //     const values = [...inputFields];\n  //     values.splice(index, 1);\n  //     setInputFields(values);\n  //   };\n\n  //   const handleInputChange = (index, event) => {\n  //     const values = [...inputFields];\n  //     if (event.target.name === \"firstName\") {\n  //       values[index].firstName = event.target.value;\n  //     } else {\n  //       values[index].lastName = event.target.value;\n  //     }\n\n  //     setInputFields(values);\n  //   };\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        cropName: null,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => setDrops(data.data.list));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        cropName: null,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => setfilteredBlur(data.data.list));\n  }, []);\n\n  console.log(filteredBlur);\n\n  const handleAddFields = () => {\n    const values = [...inputFields];\n    values.push({ name: \"\", harvestingTime: \"\", estimatedYield: \"\" });\n    setInputFields(values);\n  };\n\n  const handleRemoveFields = (index) => {\n    const values = [...inputFields];\n    values.splice(index, 1);\n    setInputFields(values);\n  };\n\n  const renderItems = ({ item }) => {\n    return (\n      <View\n        style={{\n          width: \"100%\",\n          height: 60,\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          backgroundColor: \"#fff\",\n          marginBottom: 3,\n          borderWidth: 1,\n          padding: 5,\n          borderColor: \"#e8e8e8\",\n          borderRadius: 5,\n          shadowColor: \"#346beb\",\n          shadowOffset: {\n            width: 1,\n            height: 3,\n          },\n          shadowOpacity: 0.2,\n          shadowRadius: 2.22,\n\n          elevation: 5,\n        }}\n      >\n        {/* {\n          filteredBlur.map((i)=>{\n            if(item.name==i.cropName){\n              \n            }\n          })\n        } */}\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"flex-start\",\n          }}\n        >\n          {/* {opto.map((i) => {\n            if (i.name.localCompare(item.name) == 0) {\n              <Image\n                source={{\n                  uri: item.cropImage,\n                }}\n                style={{\n                  height: 45,\n                  width: 45,\n                  marginRight: 5,\n                  borderRadius: \"50%\",\n                  borderColor: \"green\",\n                }}\n              />;\n            }\n          })} */}\n\n          {filteredBlur.map((i) => {\n            if (\n              item.name.toString().toLocaleLowerCase() ===\n              i.name.toString().toLocaleLowerCase()\n            )\n              return (\n                <Image\n                  source={{\n                    uri: i.cropImage,\n                  }}\n                  style={{\n                    height: 45,\n                    width: 45,\n                    marginRight: 5,\n                    borderRadius: 45,\n                    borderWidth: 1,\n                    borderColor: \"#bdbdbd\",\n                  }}\n                />\n              );\n          })}\n\n          <Text style={{ fontSize: 16 }}>{item.name}</Text>\n          <Entypo name=\"dot-single\" size={20} color=\"black\" />\n          <Text style={{ fontSize: 16 }}>{item.estimatedYield} Quintal</Text>\n        </View>\n        <Text style={{ fontSize: 16 }}>{item.harvestingTime}</Text>\n      </View>\n    );\n  };\n\n  const confirmUnit = (e) => {\n    console.log(e);\n    setunit(e);\n  };\n\n  const dummyCrops = [\n    {\n      name: \"Rice\",\n      harvestingTime: \"12/01/2022\",\n      estimatedYield: 9,\n    },\n    {\n      name: \"Baley\",\n      harvestingTime: \"14/02/2021\",\n      estimatedYield: 5,\n    },\n  ];\n  function updateData() {\n    console.log(\"FirstName\", firstName);\n    console.log(tempfirstName);\n    var updatedName = tempfirstName;\n    setfirstName(tempfirstName ? tempfirstName : firstName);\n    console.log(firstName);\n    console.log(tempfa);\n    setfarmarea(tempfa ? tempfa : farmarea);\n    console.log(fields);\n\n    firebase\n      .auth()\n      .currentUser?.getIdToken()\n      .then((idtoken) => {\n        fetch(\"http://staging.clarolabs.in:7050/Ksearch/farmer/save\", {\n          method: \"post\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            authToken: idtoken,\n            crops: fields,\n            farmer: {\n              name: firstName,\n              farmerImage: image,\n\n              contactNo: firebase.auth().currentUser?.phoneNumber,\n              village: city,\n              block: country,\n              district: district,\n              state: region,\n              totalLandSize: tempfa == 0 || null ? farmarea : tempfa,\n              totalLandSizeUnit: unit,\n              latitude: lat,\n              longitude: long,\n            },\n          }),\n        })\n          .then(() => console.log(\"Successful\"))\n          .catch((err) => console.log(err));\n      });\n  }\n  return (\n    <View>\n      <ScrollView>\n        <View style={{ width: \"100%\", elevation: 1000 }}>\n          <Header onTap={() => navigation.navigate(\"Home\")} />\n        </View>\n\n        <View\n          style={{\n            backgroundColor: \"#edf4ff\",\n            width: \"100%\",\n            height: winHeight,\n            alignItems: \"center\",\n            // justifyContent: \"center\",\n          }}\n        >\n          {/* <Button title=\"Share Location\" onPress={() => getLocation()} /> */}\n          <View\n            style={{ backgroundColor: \"#346beb\", width: \"100%\", height: \"20%\" }}\n          ></View>\n          <View\n            style={{\n              width: winWidth < 768 ? \"90%\" : \"40%\",\n\n              margin: 10,\n              marginTop: -135,\n              padding: 5,\n              left: winWidth > 768 ? -20 : null,\n              borderWidth: 1,\n              borderRadius: 10,\n              borderColor: \"transparent\",\n              zIndex: 999,\n            }}\n          >\n            <View\n              style={{\n                width: \"100%\",\n                height: 120,\n\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n\n                borderRadius: 10,\n              }}\n            >\n              <Image\n                source={{\n                  uri: image,\n                }}\n                style={{\n                  height: winWidth > 768 ? 130 : 120,\n                  width: winWidth > 768 ? 130 : 120,\n                  marginBottom: 3,\n                  borderColor: \"#fff\",\n                  borderWidth: 2,\n                  marginLeft: winWidth > 768 ? 10 : null,\n                  borderRadius: 130,\n                }}\n              />\n              <View\n                style={{\n                  height: 100,\n                  flexDirection: \"column\",\n                  width: winWidth > 768 ? \"70%\" : \"70%\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n\n                  marginBottom: 3,\n                }}\n              >\n                {/* {details.map((i) => {\n                return (\n                  <Text\n                    style={{\n                      fontSize: 18,\n\n                      fontWeight: \"600\",\n                      marginBottom: 5,\n                    }}\n                  >\n                    {i.name}\n                  </Text>\n                );\n              })} */}\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    marginTop: winWidth > 768 ? -20 : null,\n                    justifyContent: \"flex-end\",\n                    width: \"90%\",\n                  }}\n                >\n                  <Feather\n                    name=\"user\"\n                    size={winWidth > 768 ? 30 : 20}\n                    color=\"#fff\"\n                    style={{ marginTop: -2, marginRight: 5 }}\n                  />\n                  <Text\n                    style={{\n                      fontSize: winWidth > 768 ? 30 : 20,\n                      color: \"#fff\",\n                      fontWeight: \"500\",\n                    }}\n                  >\n                    {firstName}\n                  </Text>\n                </View>\n\n                {/* <Text\n                style={{\n                  fontSize: 18,\n\n                  marginBottom: 5,\n                }}\n              >\n                {area}\n              </Text> */}\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    width: \"90%\",\n                  }}\n                >\n                  {firebase.auth().currentUser == null ? (\n                    <Text>Not Found</Text>\n                  ) : (\n                    <Text\n                      style={{\n                        color: \"#fff\",\n                        fontSize: winWidth > 768 ? 25 : 16,\n                      }}\n                    >\n                      {firebase.auth().currentUser?.phoneNumber}\n                    </Text>\n                  )}\n                  {/* <Text style={{ fontSize: 16 }}>\n                  {firebase.auth().currentUser.phoneNumber == null\n                    ? \"Not found\"\n                    : firebase.auth().currentUser.phoneNumber}\n                </Text> */}\n                </View>\n                <View\n                  style={{\n                    width: \"75%\",\n                    alignItems: \"center\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    marginTop: winWidth > 768 ? 20 : 30,\n                    marginRight: winWidth > 768 ? 40 : 20,\n                    alignSelf: \"flex-end\",\n                  }}\n                >\n                  <TouchableOpacity\n                    // style={{\n                    //   width: 100,\n                    //   height: 30,\n                    //   backgroundColor: \"#3ECF8E\",\n                    //   alignItems: \"center\",\n                    //   justifyContent: \"center\",\n                    //   padding: 5,\n                    //   borderRadius: 10,\n                    //   borderColor: \"#3ECF8E\",\n                    //   borderWidth: 2,\n                    // }}\n                    style={{\n                      width: \"50%\",\n                      height: 30,\n                      alignItems: \"center\",\n                      backgroundColor: \"#3ECF8E\",\n                      borderWidth: 1,\n                      borderRadius: 5,\n                      marginRight: 10,\n                      borderColor: \"#3ECF8E\",\n                      justifyContent: \"center\",\n                    }}\n                    onPress={() => onOpen()}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 14,\n                        padding: 5,\n                        color: \"#fff\",\n                        fontWeight: \"700\",\n                      }}\n                    >\n                      Edit Profile\n                    </Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    // style={{\n                    //   width: 100,\n                    //   height: 30,\n                    //   backgroundColor: \"#3ECF8E\",\n                    //   alignItems: \"center\",\n                    //   justifyContent: \"center\",\n                    //   padding: 5,\n                    //   borderRadius: 10,\n                    //   borderColor: \"#3ECF8E\",\n                    //   borderWidth: 2,\n                    // }}\n                    style={{\n                      width: \"50%\",\n                      height: 30,\n                      alignItems: \"center\",\n                      backgroundColor: \"#ffd4dc\",\n                      borderWidth: 2,\n                      borderRadius: 5,\n                      marginRight: 20,\n                      borderColor: \"#ff0f3b\",\n                      justifyContent: \"center\",\n                    }}\n                    onPress={() => {\n                      firebase.auth().signOut();\n                      navigation.navigate(\"Landing\");\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 14,\n                        padding: 5,\n                        color: \"#ff0f3b\",\n                        fontWeight: \"700\",\n                      }}\n                    >\n                      Log Out\n                    </Text>\n                  </TouchableOpacity>\n                </View>\n              </View>\n              <View></View>\n            </View>\n\n            {/* <Text>Welcome {firebase.auth().currentUser.phoneNumber}</Text>\n          <Text>{firstName}</Text> */}\n            <View\n              style={{\n                marginTop: 5,\n\n                width: \"100%\",\n              }}\n            >\n              <View\n                style={{\n                  width: \"100%\",\n                  height: 1,\n                  // backgroundColor: \"#D3D3D3\",\n                  marginTop: 5,\n                }}\n              />\n              <View\n                style={{\n                  width: \"100%\",\n                  marginTop: 10,\n\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <View\n                  style={{\n                    flexDirection: \"column\",\n                    width: \"20%\",\n                    alignItems: \"flex-start\",\n                    justifyContent: \"flex-start\",\n                  }}\n                >\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <SimpleLineIcons\n                      name=\"size-fullscreen\"\n                      size={15}\n                      color=\"#9F99FF\"\n                    />\n                    <Text\n                      style={{\n                        fontSize: 12,\n                        color: \"#6F6F6F\",\n                        fontWeight: \"600\",\n                        marginLeft: 5,\n                      }}\n                    >\n                      Area\n                    </Text>\n                  </View>\n                  <View>\n                    <Text style={{ fontSize: 15 }}>\n                      {farmarea} {unit}\n                    </Text>\n                  </View>\n                </View>\n                <View\n                  style={{\n                    flexDirection: \"column\",\n                    width: \"20%\",\n                    alignItems: \"flex-start\",\n                    justifyContent: \"flex-start\",\n                  }}\n                >\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    {/* <SimpleLineIcons\n                      name=\"size-fullscreen\"\n                      size={15}\n                      color=\"#9F99FF\"\n                    /> */}\n                    <FontAwesome name=\"map-marker\" size={15} color=\"#9F99FF\" />\n                    <Text\n                      style={{\n                        fontSize: 12,\n                        color: \"#6F6F6F\",\n                        fontWeight: \"600\",\n                        marginLeft: 5,\n                      }}\n                    >\n                      Region\n                    </Text>\n                  </View>\n                  <View>\n                    <Text style={{ fontSize: 15 }}>{block} </Text>\n                  </View>\n                </View>\n                <View\n                  style={{\n                    flexDirection: \"column\",\n                    width: \"20%\",\n                    alignItems: \"flex-start\",\n                    justifyContent: \"flex-start\",\n                  }}\n                >\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <FontAwesome name=\"map\" size={15} color=\"#9F99FF\" />\n                    <Text\n                      style={{\n                        fontSize: 12,\n                        color: \"#6F6F6F\",\n                        fontWeight: \"600\",\n                        marginLeft: 5,\n                      }}\n                    >\n                      State\n                    </Text>\n                  </View>\n                  <View>\n                    <Text style={{ fontSize: 15 }}>{region} </Text>\n                  </View>\n                </View>\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  height: 1,\n                  backgroundColor: \"#D3D3D3\",\n                  marginTop: 5,\n                }}\n              />\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  width: \"100%\",\n                  marginTop: 10,\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  // backgroundColor: \"red\",\n                }}\n              >\n                <View style={{ width: \"100%\" }}>\n                  <View\n                    style={{\n                      width: \"100%\",\n                      alignItems: \"center\",\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                      marginTop: 20,\n                      marginBottom: 10,\n                    }}\n                  >\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <Entypo name=\"leaf\" size={15} color=\"#9F99FF\" />\n                      <Text\n                        style={{\n                          fontSize: 15,\n                          color: \"#6F6F6F\",\n                          fontWeight: \"600\",\n                          marginLeft: 5,\n                        }}\n                      >\n                        Crop Details\n                      </Text>\n                    </View>\n\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-end\",\n                      }}\n                    >\n                      <SimpleLineIcons\n                        name=\"calendar\"\n                        size={15}\n                        color=\"#9F99FF\"\n                      />\n                      <Text\n                        style={{\n                          fontSize: 15,\n                          color: \"#6F6F6F\",\n                          fontWeight: \"600\",\n                          marginRight: 5,\n                          marginLeft: 5,\n                        }}\n                      >\n                        Harvest Dates\n                      </Text>\n                    </View>\n                  </View>\n\n                  <View\n                    style={{\n                      height: winHeight * 0.4,\n                      marginBottom: 20,\n                    }}\n                  >\n                    <FlatList\n                      showsVerticalScrollIndicator={false}\n                      data={fields}\n                      renderItem={renderItems}\n                      ListEmptyComponent={() => (\n                        <View style={styles.container}>\n                          <Text style={{ fontSize: 30 }}>\n                            {\" \"}\n                            Loading your crops..\n                          </Text>\n                        </View>\n                      )}\n                      contentContainerStyle={{\n                        flex: 1,\n                      }}\n                    />\n\n                    {/* \n                  <ScrollView showsVerticalScrollIndicator={true}>\n                    {mainCrop.map((item) => {\n                      return (\n                        <View\n                          style={{\n                            width: \"100%\",\n                            height: 60,\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                            backgroundColor: \"#fff\",\n                            marginBottom: 3,\n                            borderWidth: 1,\n                            padding: 5,\n                            borderColor: \"#e8e8e8\",\n                            borderRadius: 5,\n                            shadowColor: \"#346beb\",\n                            shadowOffset: {\n                              width: 1,\n                              height: 3,\n                            },\n                            shadowOpacity: 0.2,\n                            shadowRadius: 2.22,\n\n                            elevation: 5,\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                              justifyContent: \"flex-start\",\n                            }}\n                          >\n                            <Image\n                              source={{\n                                uri:\n                                  \"https://www.jaipuriaschoolballia.in/wp-content/uploads/2016/11/blank-img.jpg\",\n                              }}\n                              style={{\n                                height: 40,\n                                width: 40,\n                                marginRight: 5,\n                                borderRadius: \"50%\",\n                              }}\n                            />\n                            <Text style={{ fontSize: 14 }}>{item.name}</Text>\n                            <Entypo name=\"dot-single\" size={20} color=\"black\" />\n                            <Text style={{ fontSize: 14 }}>\n                              {item.estimatedYield} Quintal\n                            </Text>\n                          </View>\n                          <Text style={{ fontSize: 14 }}>\n                            {item.harvestingTime}\n                          </Text>\n                        </View>\n                      );\n                    })}\n                  </ScrollView> */}\n\n                    {/* <View>\n                    <Text style={{ color: \"grey\" }}>Crop</Text>\n                    {dummyCrops.map((i) => {\n                      return <Text>{i.name}</Text>;\n                    })}\n                  </View>\n                  <View>\n                    <Text style={{ color: \"grey\" }}>Harvest Date</Text>\n                    {dummyCrops.map((i) => {\n                      return <Text>{i.harvestingTime}</Text>;\n                    })}\n                  </View>\n                  <View>\n                    <Text style={{ color: \"grey\" }}>Quantity</Text>\n                    {dummyCrops.map((i) => {\n                      return <Text>{i.estimatedYield}</Text>;\n                    })}\n                  </View> */}\n\n                    {/* {dummyCrops.map((i) => {\n                    return (\n                      <View style={{ flexDirection: \"row\" }}>\n                        <Text style={{ color: \"grey\" }}>{i.name}</Text>\n                        <Text style={{ color: \"grey\" }}>\n                          {i.harvestingTime}\n                        </Text>\n                        <Text style={{ color: \"grey\" }}>\n                          {i.estimatedYield}\n                        </Text>\n                      </View>\n                    );\n                  })} */}\n                  </View>\n\n                  {/* <Text style={{ color: \"grey\" }}>Crop</Text> */}\n                  {/* <Text style={{ fontSize: 18, marginTop: 3 }}>{crop}</Text> */}\n                  {/* {dummyCrops.map((i) => {\n                  return <Text>{i.name}</Text>;\n                })} */}\n                </View>\n                <View>\n                  {/* <Text style={{ color: \"grey\" }}>Harvest Date</Text> */}\n                  {/* <Text style={{ fontSize: 18, marginTop: 3 }}>{hdate}</Text> */}\n                </View>\n              </View>\n\n              {/* <Text>{crop}</Text>\n            <Text>{qty}</Text>\n\n            <Text>{hdate}</Text> */}\n              {/* <View\n              style={{\n                width: \"100%\",\n                height: 1,\n                backgroundColor: \"#D3D3D3\",\n                marginTop: 5,\n              }}\n            /> */}\n            </View>\n          </View>\n        </View>\n        <Modalize\n          ref={modalizeRef}\n          modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.9}\n          threshold={100}\n          modalStyle={\n            winWidth > 767 ? { width: 400, alignSelf: \"center\" } : null\n          }\n          closeOnOverlayTap={true}\n          mod\n        >\n          {/* <View\n          style={{\n            width: \"100%\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            padding: 5,\n          }}\n        >\n          <Text style={{ fontSize: 16 }}>Edit your profile here</Text>\n          <SimpleLineIcons name=\"close\" size={25} onPress={() => onClose()} />\n        </View> */}\n          <ScrollView contentContainerStyle={{ height: winHeight * 0.9 }}>\n            <View\n              style={{\n                width: \"100%\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                padding: 5,\n                top: 5,\n              }}\n            >\n              {/* <TouchableOpacity onPress={() => onCloseFilter()}>\n                Close Filter\n              </TouchableOpacity> */}\n              <Text style={{ fontSize: 16, marginLeft: 7, fontWeight: \"600\" }}>\n                Edit your Profile\n              </Text>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n\n                  width: \"50%\",\n                  justifyContent: \"flex-end\",\n                }}\n              >\n                {/* <TouchableOpacity\n              style={{\n                width: 60,\n                height: 30,\n                backgroundColor: \"#fff\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n\n                borderRadius: 10,\n                borderColor: \"#3A48ED\",\n                borderWidth: 2,\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 16,\n                  color: \"#3A48ED\",\n                }}\n              >\n                Reset\n              </Text>\n            </TouchableOpacity> */}\n                <TouchableOpacity\n                  style={{\n                    width: 60,\n                    height: 30,\n                    backgroundColor: \"#3ECF8E\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n\n                    borderRadius: 10,\n                    borderColor: \"#3ECF8E\",\n                    borderWidth: 2,\n                    marginRight: 10,\n                  }}\n                  onPress={() => {\n                    updateData(), onClose();\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 16,\n                      color: \"#fff\",\n                    }}\n                  >\n                    Save\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n            <View style={{ padding: 10 }}>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n\n                  width: \"100%\",\n                }}\n              >\n                <View style={{ width: \"30%\" }}>\n                  <Image\n                    source={{ uri: image }}\n                    style={{\n                      height: 120,\n                      width: 120,\n                      borderWidth: 2,\n                      borderRadius: 120,\n                      borderColor: \"#346beb\",\n                    }}\n                  />\n                  <View style={{ marginTop: 10 }}>\n                    <input\n                      type=\"file\"\n                      onChange={uploadImage}\n                      title=\"Change Image\"\n                    />\n                  </View>\n                </View>\n                <View style={{ width: \"60%\", marginBottom: 30 }}>\n                  <Text style={{ fontSize: 12 }}>Name</Text>\n                  <TextInput\n                    style={{\n                      width: \"100%\",\n                      height: 40,\n                      borderWidth: 1,\n                      borderColor: \"#D3D3D3\",\n                      padding: 10,\n                      marginTop: 5,\n                      borderRadius: 5,\n                    }}\n                    onChangeText={(e) => settempfirstName(e)}\n                    defaultValue={firstName}\n                    placeholder=\"Enter your name\"\n                  />\n                  <Text style={{ fontSize: 12, marginTop: 20 }}>\n                    Farming Area\n                  </Text>\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n\n                      alignItems: \"center\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n                    <TextInput\n                      textContentType=\"telephoneNumber\"\n                      style={{\n                        width: \"48%\",\n                        height: 40,\n                        borderWidth: 1,\n                        borderColor: \"#D3D3D3\",\n                        padding: 10,\n                        marginTop: 5,\n                        borderRadius: 5,\n                      }}\n                      defaultValue={farmarea != null ? farmarea : \" \"}\n                      onChangeText={(e) => settempfa(e)}\n                      placeholder=\"Enter Farming Area\"\n                    />\n                    <View style={{ width: \"50%\", marginTop: 5 }}>\n                      <Select\n                        placeholder={unit ? unit : \"Unit\"}\n                        defaultValue={selectedUnit}\n                        onChange={(e) => {\n                          setselectedUnit;\n                          console.log(e.label);\n                          confirmUnit(e.label);\n                        }}\n                        options={units}\n                      />\n                    </View>\n                  </View>\n                </View>\n              </View>\n\n              <View\n                style={{\n                  marginTop: 30,\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text\n                  style={{ fontSize: 16, marginLeft: 7, fontWeight: \"600\" }}\n                >\n                  Edit your crops here\n                </Text>\n                <TouchableOpacity\n                  style={{\n                    width: \"35%\",\n                    height: 30,\n                    alignItems: \"center\",\n                    backgroundColor: \"#fff\",\n                    borderWidth: 2,\n                    borderRadius: 20,\n                    marginTop: 10,\n                    borderColor: \"#3ECF8E\",\n                    justifyContent: \"center\",\n                  }}\n                  onPress={() => {\n                    addCrop();\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 14,\n                      padding: 5,\n                      color: \"#3ECF8E\",\n                      fontWeight: \"700\",\n                    }}\n                  >\n                    + Add Crop\n                  </Text>\n                </TouchableOpacity>\n                {/* <DynamicForm /> */}\n                {/* <DynForm /> */}\n              </View>\n              <View\n                style={{\n                  width: winWidth < 768 ? \"100%\" : \"100%\",\n\n                  alignSelf: \"center\",\n                }}\n              >\n                <View\n                  style={{\n                    width: \"100%\",\n                    height: 20,\n                    padding: 2,\n                    marginLeft: 2,\n                    marginTop: 10,\n                    marginBottom: 1,\n\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <View\n                    style={{\n                      width: \"35%\",\n                      alignItems: \"flex-start\",\n                    }}\n                  >\n                    <Text style={{ color: \"#9e9e9e\" }}>Crop</Text>\n                  </View>\n                  <View\n                    style={{ width: \"25%\", alignItems: \"center\", left: -20 }}\n                  >\n                    <Text style={{ color: \"#9e9e9e\" }}>Yield</Text>\n                  </View>\n                  <View\n                    style={{ width: \"30%\", left: -30, alignItems: \"center\" }}\n                  >\n                    <Text style={{ color: \"#9e9e9e\" }}>Harvest Date</Text>\n                  </View>\n                </View>\n                <View style={{ marginBottom: 10 }}>\n                  {fields.map((field, idx) => (\n                    <View\n                      key={`${field}~${idx}`}\n                      style={{\n                        flexDirection: \"row\",\n                        width: \"100%\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                        margin: 2,\n                        padding: 2,\n                        height: 50,\n                        borderColor: \"#fafcff\",\n                        borderWidth: 2,\n                        borderRadius: 5,\n                        backgroundColor: \"#fafcff\",\n                      }}\n                    >\n                      <View style={{ width: \"35%\", zIndex: 999 }}>\n                        <Select\n                          placeholder={field.name ? field.name : \"Add Crop\"}\n                          defaultValue={selectedOption}\n                          onChange={(e) => {\n                            setSelectedOption;\n                            matchCrop(e.label, null, null, idx);\n                          }}\n                          options={options}\n                        />\n                      </View>\n\n                      {/* <TextInput\n            style={{\n              width: \"70%\",\n              fontSize: 15,\n              borderWidth: 1,\n              borderColor: \"black\",\n              borderRadius: 5,\n              padding: 5,\n              margin: 5,\n            }}\n            value={field.value}\n            onChangeText={(e) => {\n              // setcrop(e);\n              // settempID(idx);\n              // matchCrop(e, null, null, idx);\n            }}\n            placeholder=\"Add Crop\"\n          /> */}\n\n                      <TextInput\n                        style={{\n                          width: \"20%\",\n                          fontSize: 15,\n                          borderWidth: 1,\n                          borderColor: \"#D3D3D3\",\n                          borderRadius: 5,\n                          padding: 5,\n                          margin: 5,\n                          height: 37,\n                          outlineColor: \"#D3D3D3\",\n                          textAlign: \"center\",\n                        }}\n                        onChangeText={(q) => matchCrop(null, q, null, idx)}\n                        placeholder=\"Quantity\"\n                        value={field.estimatedYield}\n                      />\n\n                      {applied || field.harvestingTime ? (\n                        <TouchableOpacity\n                          style={{\n                            backgroundColor: \"#d6d9ff\",\n                            borderRadius: 5,\n                            borderColor: \"#7b42ff\",\n                            height: 35,\n                            borderWidth: 2,\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            width: \"30%\",\n                          }}\n                          onPress={() => setapplied(false)}\n                        >\n                          <Text style={{ fontSize: 14 }}>\n                            {field.harvestingTime}\n                          </Text>\n                        </TouchableOpacity>\n                      ) : (\n                        <DatePicker\n                          dateFormat=\"dd/MM/yyyy\"\n                          popperPlacement=\"top-end\"\n                          popperModifiers={{\n                            offset: {\n                              enabled: true,\n                              offset: \"5px, 10px\",\n                            },\n                            preventOverflow: {\n                              enabled: true,\n                              escapeWithReference: false,\n                              boundariesElement: \"viewport\",\n                            },\n                          }}\n                          selected={tempDate}\n                          onChange={(date) => {\n                            settempDate(date);\n                            setapplied(true);\n                            matchCrop(\n                              null,\n                              null,\n                              date.toLocaleDateString(),\n                              idx\n                            );\n                          }}\n                          customInput={\n                            <TextInput\n                              style={{\n                                backgroundColor: \"#d6d9ff\",\n                                borderRadius: 5,\n                                borderColor: \"#7b42ff\",\n                                height: 35,\n                                borderWidth: 2,\n                                padding: 5,\n                                fontSize: 14,\n                                width: \"70%\",\n                              }}\n                            />\n                          }\n                        />\n                      )}\n                      <AntDesign\n                        name=\"delete\"\n                        size={20}\n                        color=\"#eb3d3d\"\n                        onPress={() => removeCrop(idx)}\n                      />\n                      {/* <Button title=\"Remove\" onPress={() => removeCrop(idx)} /> */}\n                    </View>\n                  ))}\n                </View>\n                {/* {fields.map((field, idx) => {\n        return (\n          <View\n            key={`${field}-${idx}`}\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              width: \"100%\",\n              borderWidth: 1,\n              padding: 2,\n              borderColor: \"#D3D3D3\",\n              borderRadius: 5,\n              margin: 2,\n            }}\n          >\n            <View style={{ flexDirection: \"column\", width: \"80%\" }}>\n              <View>\n                <TextInput\n                  placeholder=\"Crop\"\n                  style={\n                    Platform.OS === \"web\" && {\n                      outlineColor: \"#3ECF8E\",\n                      height: 30,\n                      backgroundColor: \"white\",\n                      width: \"100%\",\n                      padding: 5,\n                      fontSize: 14,\n                      borderWidth: 1,\n\n                      borderColor: \"#D3D3D3\",\n                      borderRadius: 5,\n                      textAlign: \"center\",\n                    }\n                  }\n                  value={field.value || \"\"}\n                  onChange={(e) => handleChange(idx, e)}\n                />\n              </View>\n              <View style={{ flexDirection: \"row\" }}>\n                <TextInput\n                  placeholder=\"Quantity\"\n                  style={\n                    Platform.OS === \"web\" && {\n                      outlineColor: \"#3ECF8E\",\n                      height: 30,\n                      backgroundColor: \"white\",\n                      width: \"50%\",\n                      padding: 5,\n                      fontSize: 14,\n                      borderWidth: 1,\n                      marginTop: 5,\n                      marginRight: 5,\n                      borderColor: \"#D3D3D3\",\n                      borderRadius: 5,\n                      textAlign: \"center\",\n                    }\n                  }\n                  value={field.quantity || \"\"}\n                  onChange={(e) => handleChange(idx, e)}\n                />\n                <TextInput\n                  placeholder=\"Harvest Date\"\n                  style={\n                    Platform.OS === \"web\" && {\n                      outlineColor: \"#3ECF8E\",\n                      height: 30,\n                      backgroundColor: \"white\",\n                      width: \"50%\",\n                      padding: 5,\n                      fontSize: 14,\n                      borderWidth: 1,\n                      marginTop: 5,\n                      marginLeft: 5,\n                      borderColor: \"#D3D3D3\",\n                      borderRadius: 5,\n                      textAlign: \"center\",\n                    }\n                  }\n                  value={field.harvestDate || \"\"}\n                  onChange={(e) => handleChange(idx, e)}\n                />\n              </View>\n            </View>\n\n            <AntDesign\n              name=\"delete\"\n              size={20}\n              color=\"#eb3d3d\"\n              onPress={() => handleRemove(idx)}\n            />\n          </View>\n        );\n      })}\n      <TouchableOpacity\n        style={{\n          width: \"100%\",\n          height: 35,\n          alignItems: \"center\",\n          backgroundColor: \"#3A48ED\",\n          borderWidth: 1,\n          borderRadius: 5,\n          marginTop: 10,\n          borderColor: \"#3A48ED\",\n          justifyContent: \"center\",\n        }}\n        onPress={() => {\n          handleAdd();\n        }}\n      >\n        <Text\n          style={{\n            fontSize: 15,\n            padding: 5,\n            color: \"#fff\",\n            fontWeight: \"700\",\n          }}\n        >\n          + Add Crop\n        </Text>\n      </TouchableOpacity> */}\n\n                {/* <Button\n        title=\"Add Crop\"\n        onPress={() => {\n          addCrop(), setapplied(false);\n        }}\n      /> */}\n                {/* <Button title=\"Submit\" onPress={() => showData()} /> */}\n              </View>\n              {/* <TextInput\n            style={{\n              width: winWidth < 768 ? \"80%\" : 200,\n              height: 40,\n              borderWidth: 1,\n              borderColor: \"#D3D3D3\",\n              padding: 10,\n              marginTop: 10,\n              borderRadius: 5,\n            }}\n            onChangeText={(e) => settempqty(e)}\n            defaultValue={qty}\n            placeholder=\"Enter Quantity\"\n          />\n          <TextInput\n            style={{\n              width: winWidth < 768 ? \"80%\" : 200,\n              height: 40,\n              borderWidth: 1,\n              borderColor: \"#D3D3D3\",\n              padding: 10,\n              marginTop: 10,\n              borderRadius: 5,\n            }}\n            onChangeText={(e) => settemphDate(e)}\n            defaultValue={hdate}\n            placeholder=\"Enter harvest date\"\n          />\n          <TextInput\n            style={{\n              width: winWidth < 768 ? \"80%\" : 200,\n              height: 40,\n              borderWidth: 1,\n              borderColor: \"#D3D3D3\",\n              padding: 10,\n              marginTop: 10,\n              borderRadius: 5,\n            }}\n            onChangeText={(e) => settempArea(e)}\n            placeholder=\"Enter farming area\"\n          /> */}\n              {/* <View\n            style={{\n              width: \"100%\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <TouchableOpacity\n              style={{\n                width: \"30%\",\n                height: 40,\n                alignItems: \"center\",\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderRadius: 5,\n                top: 30,\n                borderColor: \"#346beb\",\n                justifyContent: \"center\",\n              }}\n              onPress={() => console.log(\"Resetting\")}\n            >\n              <Text\n                style={{\n                  fontSize: 15,\n                  padding: 5,\n                  color: \"#346beb\",\n                  fontWeight: \"700\",\n                }}\n              >\n                Reset\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={{\n                width: \"30%\",\n                height: 40,\n                alignItems: \"center\",\n                backgroundColor: \"#3ECF8E\",\n                borderWidth: 1,\n                borderRadius: 5,\n                top: 30,\n                borderColor: \"#3ECF8E\",\n                justifyContent: \"center\",\n              }}\n              onPress={() => updateData()}\n            >\n              <Text\n                style={{\n                  fontSize: 15,\n                  padding: 5,\n                  color: \"#fff\",\n                  fontWeight: \"700\",\n                }}\n              >\n                Save\n              </Text>\n            </TouchableOpacity>\n\n          \n          </View> */}\n              {/* <TouchableOpacity\n                style={{\n                  width: \"43%\",\n                  height: 40,\n                  alignItems: \"center\",\n                  backgroundColor: \"#3ECF8E\",\n                  borderWidth: 1,\n                  borderRadius: 5,\n                  top: 30,\n                  borderColor: \"#3ECF8E\",\n                  justifyContent: \"center\",\n                  alignSelf: \"flex-end\",\n                }}\n                onPress={() => {\n                  console.log(fields);\n                  updateData();\n                }}\n              >\n                <Text\n                  style={{\n                    fontSize: 15,\n                    padding: 5,\n                    color: \"#fff\",\n                    fontWeight: \"700\",\n                  }}\n                >\n                  SUBMIT\n                </Text>\n              </TouchableOpacity> */}\n            </View>\n          </ScrollView>\n        </Modalize>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default Profile;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n} from \"react-native\";\nimport Header from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport firebase from \"../firebase/firebase\";\nimport { firestore } from \"firebase\";\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  AntDesign,\n  FontAwesome5,\n  FontAwesome,\n  MaterialIcons,\n} from \"@expo/vector-icons\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nconst Landing = ({ navigation }) => {\n  const [usere, setusere] = useState(null);\n  const [datas, setdatas] = useState([]);\n  {\n    firebase.auth().onAuthStateChanged((user) => {\n      // navigation.navigate(user ? \"Profile\" : \"Login\");\n      if (user) {\n        firebase\n          .auth()\n          .currentUser?.getIdToken()\n          .then((idtoken) => {\n            // settoken(idtoken);\n            console.log(idtoken);\n\n            // console.log(token);\n\n            fetch(\"http://staging.clarolabs.in:7050/Ksearch/farmer/get\", {\n              method: \"post\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                authToken: idtoken,\n              }),\n            })\n              .then((res) => res.json())\n\n              .then((data) => {\n                console.log(data.data.farmer);\n                if (data.data.farmer == null) {\n                  // navigation.navigate(\"SignUp\");\n                  console.log(\"New User\");\n                  navigation.navigate(\"SignUp\");\n                } else {\n                  console.log(\"Already Signed Up\");\n                  navigation.navigate(\"Homely\", { screen: \"Home\" });\n                }\n              })\n\n              .catch(function (err) {\n                console.log(err);\n              });\n\n            // .then((data) => {\n            //   // // console.log(data.json());\n            //   // if (data !== null) {\n            //   //   console.log(\"Found\");\n            //   //   // console.log(data.json());\n            //   //   // navigation.navigate(\"Homely\", { screen: \"Home\" });\n            //   // } else {\n            //   //   console.log(\"No data found\");\n            //   //   // navigation.navigate(\"SignUp\");\n            //   // }\n            // })\n          })\n          .catch(function (err) {\n            console.log(err);\n          });\n        // var docRef = firestore()\n        //   .collection(\"users\")\n        //   .doc(firebase.auth().currentUser?.uid);\n        // docRef.get().then(function (doc) {\n        //   if (doc.exists) {\n        //     console.log(\"DocData:\", doc.data());\n        //     navigation.navigate(\"Homely\", { screen: \"Home\" });\n        //     // navigation.navigate(\"Profile\");\n        //   } else {\n        //     console.log(\"No such document!\");\n        //     navigation.navigate(\"SignUp\");\n        //   }\n        // });\n      } else {\n        null;\n      }\n    });\n  }\n  // var docRef = firestore()\n  //                 .collection(\"users\")\n  //                 .doc(firebase.auth().currentUser?.uid);\n  //               docRef.get().then(function (doc) {\n  //                 if (doc.exists) {\n  //                   console.log(\"DocData:\", doc.data());\n  //                   navigation.navigate(\"Profile\");\n  //                 } else {\n  //                   console.log(\"No such document!\");\n  //                   navigation.navigate(\"SignUp\");\n  //                 }\n  //               });\n\n  const responsive = {\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 1,\n      slidesToSlide: 1, // optional, default to 1.\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 1,\n      slidesToSlide: 1, // optional, default to 1.\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1,\n      slidesToSlide: 1, // optional, default to 1.\n    },\n  };\n  return (\n    <View style={styles.container}>\n      <View\n        style={{\n          width: winWidth > 768 ? \"40%\" : \"100%\",\n\n          height: winWidth > 768 ? 400 : 350,\n          marginTop: -100,\n        }}\n      >\n        <Carousel\n          additionalTransfrom={0}\n          autoPlay={true}\n          arrows={false}\n          autoPlaySpeed={3000}\n          centerMode={false}\n          className=\"\"\n          containerClass=\"container\"\n          dotListClass=\"\"\n          draggable\n          focusOnSelect={false}\n          infinite\n          itemClass=\"\"\n          keyBoardControl\n          minimumTouchDrag={80}\n          renderButtonGroupOutside={false}\n          renderDotsOutside={true}\n          responsive={responsive}\n        >\n          <View\n            style={{\n              height: 400,\n\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n              flexDirection: \"column\",\n            }}\n          >\n            <View\n              style={{\n                height: winWidth > 768 ? \"80%\" : \"60%\",\n                marginTop: winWidth > 768 ? 10 : 30,\n                marginBottom: 10,\n                width: \"100%\",\n                alignItems: \"center\",\n              }}\n            >\n              <Image\n                source={require(\"../../assets/onBoarding/i1.png\")}\n                style={{\n                  height: winWidth > 768 ? 400 : 300,\n                  width: winWidth > 768 ? 400 : 300,\n                }}\n              />\n            </View>\n            <Text\n              style={{\n                fontSize: winWidth > 768 ? 25 : 20,\n                color: \"#fff\",\n                marginTop: 10,\n              }}\n            >\n              Discover the ones who grow our food\n            </Text>\n          </View>\n          <View\n            style={{\n              height: 400,\n\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n              flexDirection: \"column\",\n            }}\n          >\n            <View\n              style={{\n                height: winWidth > 768 ? \"80%\" : \"60%\",\n                marginTop: winWidth > 768 ? 10 : 30,\n                marginBottom: 10,\n                width: \"100%\",\n                alignItems: \"center\",\n              }}\n            >\n              <Image\n                source={require(\"../../assets/onBoarding/i3.png\")}\n                style={{\n                  height: winWidth > 768 ? 400 : 300,\n                  width: winWidth > 768 ? 400 : 300,\n                }}\n              />\n            </View>\n            <Text\n              style={{\n                fontSize: winWidth > 768 ? 25 : 20,\n                color: \"#fff\",\n                marginTop: 10,\n              }}\n            >\n              Get onboard with other farmers\n            </Text>\n          </View>\n          <View\n            style={{\n              height: 400,\n\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n              flexDirection: \"column\",\n            }}\n          >\n            <View\n              style={{\n                height: winWidth > 768 ? \"80%\" : \"60%\",\n                marginTop: winWidth > 768 ? 10 : 30,\n                marginBottom: 10,\n                width: \"100%\",\n                alignItems: \"center\",\n              }}\n            >\n              <Image\n                source={require(\"../../assets/onBoarding/i2.png\")}\n                style={{\n                  height: winWidth > 768 ? 350 : 250,\n                  width: winWidth > 768 ? 350 : 250,\n                }}\n              />\n            </View>\n            <Text\n              style={{\n                fontSize: winWidth > 768 ? 25 : 20,\n                color: \"#fff\",\n                marginTop: 10,\n              }}\n            >\n              Farm-to-Plate helps you buy crops directly\n            </Text>\n          </View>\n        </Carousel>\n      </View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          width: \"100%\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          top: 20,\n        }}\n      >\n        <Image\n          source={require(\"../../assets/newIcon4.png\")}\n          style={{ height: 60, width: 60 }}\n        />\n        <Text style={{ marginLeft: 5, fontSize: 40, color: \"#fff\" }}>\n          Krisearch\n        </Text>\n      </View>\n      <View\n        style={{\n          flexDirection: \"column\",\n          width: 300,\n          height: 100,\n          top: 60,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <TouchableOpacity\n          style={{\n            width: \"100%\",\n            height: 60,\n            alignItems: \"center\",\n            backgroundColor: \"#3ECF8E\",\n            borderWidth: 1,\n            borderRadius: 5,\n            borderColor: \"#3ECF8E\",\n            justifyContent: \"space-between\",\n            flexDirection: \"row\",\n          }}\n          onPress={() => navigation.navigate(\"Login\")}\n        >\n          <View\n            style={{\n              width: \"80%\",\n              height: \"100%\",\n              flexDirection: \"row\",\n\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n              padding: 10,\n            }}\n          >\n            <FontAwesome5 name=\"tractor\" size={30} style={{ color: \"#fff\" }} />\n            <View\n              style={{\n                flexDirection: \"column\",\n                alignItems: \"flex-start\",\n                justifyContent: \"space-evenly\",\n\n                height: 50,\n                marginLeft: 10,\n              }}\n            >\n              <Text style={{ fontSize: 20, color: \"#fff\", fontWeight: \"600\" }}>\n                I'm a Farmer\n              </Text>\n              <Text style={{ fontSize: 14, color: \"#fff\" }}>\n                Get onboard with us\n              </Text>\n            </View>\n          </View>\n          <AntDesign\n            name=\"arrowright\"\n            size={30}\n            color=\"#fff\"\n            style={{ marginRight: 10 }}\n          />\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={{\n            width: \"100%\",\n            height: 60,\n            alignItems: \"center\",\n            backgroundColor: \"#fff\",\n            borderWidth: 2,\n            borderRadius: 5,\n            borderColor: \"#3ECF8E\",\n            justifyContent: \"space-between\",\n            flexDirection: \"row\",\n            marginTop: 20,\n          }}\n          onPress={() => navigation.navigate(\"Feed\")}\n        >\n          <View\n            style={{\n              width: \"80%\",\n              height: \"100%\",\n              flexDirection: \"row\",\n\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n              padding: 10,\n            }}\n          >\n            {/* <FontAwesome5 name=\"tractor\" size={30} style={{ color: \"#fff\" }} /> */}\n            <AntDesign name=\"shoppingcart\" size={30} color=\"#3ECF8E\" />\n            <View\n              style={{\n                flexDirection: \"column\",\n                alignItems: \"flex-start\",\n                justifyContent: \"space-evenly\",\n\n                height: 50,\n                marginLeft: 10,\n              }}\n            >\n              <Text\n                style={{ fontSize: 20, color: \"#3ECF8E\", fontWeight: \"600\" }}\n              >\n                I'm a Buyer\n              </Text>\n              <Text\n                style={{ fontSize: 14, color: \"#3ECF8E\", fontWeight: \"500\" }}\n              >\n                Buy fresh crops directly\n              </Text>\n            </View>\n          </View>\n          <AntDesign\n            name=\"arrowright\"\n            size={30}\n            color=\"#3ECF8E\"\n            style={{ marginRight: 10 }}\n          />\n        </TouchableOpacity>\n\n        {/* <TouchableOpacity\n            style={{\n              width: \"100%\",\n              height: 40,\n              alignItems: \"center\",\n              backgroundColor: \"#fff\",\n              borderWidth: 1,\n              borderRadius: 5,\n              borderColor: \"#fff\",\n              justifyContent: \"center\",\n            }}\n            onPress={() => navigation.navigate(\"Homely\", { screen: \"Home\" })}\n          >\n            <Text style={{ fontSize: 20, color: \"#3ECF8E\" }}>I'm a Buyer</Text>\n          </TouchableOpacity> */}\n        {/* <Button\n          title=\"I'm a Buyer\"\n          onPress={() => navigation.navigate(\"Home\")}\n        /> */}\n      </View>\n    </View>\n  );\n};\n\nexport default Landing;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#3A48ED\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TextInput,\n  TouchableOpacity,\n  Platform,\n} from \"react-native\";\nimport firebase from \"../firebase/firebase\";\nimport { firestore } from \"firebase\";\nimport { winHeight, winWidth } from \"../utils/window\";\nimport OtpInput from \"react-otp-input\";\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  AntDesign,\n  FontAwesome5,\n  FontAwesome,\n  MaterialIcons,\n} from \"@expo/vector-icons\";\n\nconst Login = ({ navigation }) => {\n  const [number, setnumber] = useState(\"\");\n  const [temp, settemp] = useState(\"\");\n  const [user, setuser] = useState(\"\");\n  const [token, settoken] = useState(null);\n  const [otpsent, setotpsent] = useState(false);\n  const [gotCode, setgotCode] = useState(\"\");\n  const [tempCode, settempCode] = useState(\"\");\n  const [result, setresult] = useState(null);\n\n  const handleClick = () => {\n    let recaptcha = new firebase.auth.RecaptchaVerifier(\"recaptcha-container\", {\n      size: \"invisible\",\n    });\n    let n = \"+919176689903\";\n    console.log(tempCode);\n    firebase\n      .auth()\n      .setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n      .then(() => {\n        // Existing and future Auth states are now persisted in the current\n        // session only. Closing the window would clear any existing state even\n        // if a user forgets to sign out.\n        // ...\n        // New sign-in will be persisted with session persistence.\n\n        firebase\n          .auth()\n          .signInWithPhoneNumber(number, recaptcha)\n          .then(function (e) {\n            let code = window.prompt(\"Enter the OTP\", \"\");\n            // let code = gotCode;\n            if (code == null) {\n              console.log(\"Null Code\");\n            }\n\n            e.confirm(code)\n              .then(function (result) {\n                console.log(result.user, \"user\");\n                setuser(result.user.phoneNumber);\n                console.log(\n                  result.user ? result.user.phoneNumber : \"not verified\"\n                );\n\n                firebase\n                  .auth()\n                  .currentUser?.getIdToken()\n                  .then(function (idtoken) {\n                    // settoken(idtoken);\n                    // console.log(idtoken);\n\n                    // console.log(token);\n\n                    fetch(\n                      \"http://staging.clarolabs.in:7050/Ksearch/farmer/get\",\n                      {\n                        method: \"post\",\n                        headers: {\n                          Accept: \"application/json\",\n                          \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify({\n                          authToken: idtoken,\n                        }),\n                      }\n                    )\n                      .then((response) => response.json())\n                      .then((data) => {\n                        console.log(data.data.farmer);\n                        if (data.data.farmer == null) {\n                          navigation.navigate(\"SignUp\");\n                          console.log(\"Not Available\");\n                        } else {\n                          navigation.navigate(\"Homely\", { screen: \"Home\" });\n                          console.log(\"available\");\n                        }\n                      })\n                      .catch((err) => console.log(err));\n                  })\n                  .catch(function (err) {\n                    console.log(err);\n                  });\n\n                // var docRef = firestore()\n                //   .collection(\"users\")\n                //   .doc(firebase.auth().currentUser?.uid);\n                // docRef.get().then(function (doc) {\n                //   if (doc.exists) {\n                //     console.log(\"DocData:\", doc.data());\n                //     // navigation.navigate(\"Profile\");\n                //     navigation.navigate(\"Homely\", { screen: \"Profile\" });\n                //   } else {\n                //     console.log(\"No such document!\");\n                //     navigation.navigate(\"SignUp\");\n                //   }\n                // });\n              })\n              .catch((err) => {\n                console.log(err);\n              });\n          });\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n      });\n  };\n  var codeResult;\n\n  const sendCode = () => {\n    let recaptcha = new firebase.auth.RecaptchaVerifier(\"recaptcha-container\", {\n      size: \"invisible\",\n    });\n\n    firebase\n      .auth()\n      .signInWithPhoneNumber(number, recaptcha)\n      .then((confirmResult) => {\n        confirmResult = confirmResult;\n        codeResult = confirmResult;\n        console.log(codeResult);\n        setresult(codeResult);\n\n        setotpsent(true);\n      })\n      .catch((err) => {\n        alert(err);\n      });\n  };\n\n  const verifyCode = () => {\n    var code = tempCode;\n    result\n      .confirm(code)\n      .then((result) => {\n        var user = result.user;\n        console.log(user);\n      })\n      .catch((err) => {\n        alert(err);\n      });\n  };\n\n  const checkUser = (data) => {\n    if (data == null) {\n      console.log(\"Doesnt Exist\");\n\n      firebase\n        .auth()\n        .currentUser?.getIdToken()\n        .then(function (idtoken) {\n          fetch(\"http://staging.clarolabs.in:7050/Ksearch/farmer/save\", {\n            method: \"post\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              authToken: idtoken,\n              crops: [\n                {\n                  name: \"Sugarcane\",\n                  estimatedYield: 5,\n\n                  harvestingTime: \"31/02/2022\",\n                },\n              ],\n              farmer: {\n                name: \"Evan Chatterjee\",\n                farmerImage: \"string\",\n                contactNo: \"string\",\n                village: \"string\",\n                block: \"string\",\n                district: \"string\",\n                state: \"string\",\n                totalLandSize: 20,\n                totalLandSizeUnit: \"Kattha\",\n                latitude: 0,\n                longitude: 0,\n              },\n            }),\n          });\n        })\n        .then(() => navigation.navigate(\"Homely\", { screen: \"Home\" }))\n        .catch((err) => console.log(err));\n    } else {\n      console.log(\"Exists\");\n    }\n  };\n\n  const handleOTP = (e) => {\n    settempCode(e);\n  };\n\n  console.log(tempCode);\n\n  return (\n    <View style={styles.container}>\n      <div id=\"recaptcha-container\"></div>\n      {/* <View style={{ width: \"100%\", backgroundColor: \"yellow\" }}>\n        <TextInput\n          placeholder=\"enter number\"\n          style={{\n            width: 200,\n            height: 50,\n            borderWidth: 2,\n            borderColor: \"green\",\n          }}\n          onChangeText={(e) => settemp(e)}\n        />\n        <Button title=\"Submit\" onPress={() => setnumber(temp)} />\n        <Button title=\"Click here\" onPress={() => handleClick()} />\n        <StatusBar style=\"auto\" />\n        <Text>{user}</Text>\n      </View> */}\n      <View\n        style={{\n          height: winHeight,\n          width: \"100%\",\n          backgroundColor: \"#346beb\",\n          flexDirection: \"column\",\n        }}\n      >\n        <View\n          style={{\n            height: \"20%\",\n\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            flexDirection: \"row\",\n          }}\n        >\n          <Image\n            source={require(\"../../assets/newIcon4.png\")}\n            style={{ height: 60, width: 60 }}\n          />\n          <Text style={{ marginLeft: 5, fontSize: 40, color: \"#fff\" }}>\n            Krisearch\n          </Text>\n        </View>\n        <View\n          style={{\n            width: winWidth < 768 ? \"100%\" : \"30%\",\n            alignItems: \"center\",\n            alignSelf: \"center\",\n            justifyContent: \"center\",\n            margin: 10,\n            flexDirection: \"row\",\n          }}\n        >\n          <Feather name=\"smartphone\" size={24} color=\"#fff\" />\n          <Text\n            style={{\n              fontSize: 20,\n              color: \"#fff\",\n\n              marginLeft: 10,\n            }}\n          >\n            Sign-in with your phone\n          </Text>\n        </View>\n\n        <View\n          style={{\n            height: \"60%\",\n            backgroundColor: \"#fff\",\n            borderWidth: 1,\n            width: winWidth < 768 ? \"90%\" : \"30%\",\n            borderColor: \"#fff\",\n            alignSelf: \"center\",\n            borderRadius: 5,\n            margin: 10,\n            shadowColor: \"#002f9c\",\n            shadowOffset: {\n              width: 3,\n              height: 5,\n            },\n            shadowOpacity: 0.5,\n            shadowRadius: 2.22,\n\n            elevation: 5,\n          }}\n        >\n          <View\n            style={{\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              padding: 10,\n              marginTop: 10,\n            }}\n          >\n            <Text style={{ fontSize: 25, color: \"#346beb\" }}>Welcome</Text>\n            {/* <SimpleLineIcons\n              name=\"close\"\n              size={25}\n              onPress={() => navigation.navigate(\"Landing\")}\n            /> */}\n          </View>\n\n          {/* <Button title=\"Submit\" onPress={() => setnumber(temp)} /> */}\n\n          <View\n            style={{\n              padding: 10,\n              width: \"100%\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            {otpsent ? (\n              <View\n                style={{\n                  padding: 10,\n                  marginTop: 50,\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  width: \"100%\",\n                }}\n              >\n                <OtpInput\n                  value={tempCode}\n                  onChange={(e) => handleOTP(e)}\n                  numInputs={6}\n                  separator={<span>-</span>}\n                  inputStyle={{\n                    fontSize: 15,\n                    height: 30,\n                    width: 30,\n                  }}\n                />\n                <TouchableOpacity\n                  style={{\n                    width: \"60%\",\n                    height: 40,\n                    alignItems: \"center\",\n                    backgroundColor: \"#3ECF8E\",\n                    borderWidth: 1,\n                    borderRadius: 5,\n                    top: 30,\n                    borderColor: \"#3ECF8E\",\n                    justifyContent: \"center\",\n                  }}\n                  onPress={() => {\n                    alert(tempCode);\n                    verifyCode();\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 15,\n                      padding: 5,\n                      color: \"#fff\",\n                      fontWeight: \"700\",\n                    }}\n                  >\n                    Verify and Login\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            ) : (\n              <View\n                style={{\n                  padding: 10,\n\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  width: \"100%\",\n                }}\n              >\n                <TextInput\n                  placeholder=\"Enter your 10-digit number here\"\n                  // style={{\n                  //   width: \"70%\",\n                  //   height: 40,\n                  //   borderWidth: 1,\n                  //   borderColor: \"#A9A9A9\",\n                  //   borderRadius: 5,\n                  //   padding: 5,\n                  // }}\n                  focusable={true}\n                  style={\n                    Platform.OS === \"web\" && {\n                      outlineColor: \"#fff\",\n                      height: 40,\n                      backgroundColor: \"white\",\n                      width: \"95%\",\n                      padding: 5,\n                      fontSize: 20,\n                      borderWidth: 1,\n                      borderBottomColor: \"#000\",\n                      borderColor: \"#fff\",\n                      borderRadius: 5,\n                      textAlign: \"center\",\n                    }\n                  }\n                  onChangeText={(e) => setnumber(\"+91\" + e)}\n                />\n                <TouchableOpacity\n                  style={{\n                    width: \"60%\",\n                    height: 40,\n                    alignItems: \"center\",\n                    backgroundColor: \"#3ECF8E\",\n                    borderWidth: 1,\n                    borderRadius: 5,\n                    top: 30,\n                    borderColor: \"#3ECF8E\",\n                    justifyContent: \"center\",\n                  }}\n                  onPress={() => {\n                    // handleClick();\n\n                    sendCode();\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 15,\n                      padding: 5,\n                      color: \"#fff\",\n                      fontWeight: \"700\",\n                    }}\n                  >\n                    Get OTP\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            )}\n          </View>\n\n          <StatusBar style=\"auto\" />\n          {/* <Text>{user}</Text> */}\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Login;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#346beb\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TextInput,\n  TouchableOpacity,\n  FlatList,\n} from \"react-native\";\nimport firebase from \"../firebase/firebase\";\nimport PreData from \"../data/refFarmers.json\";\nimport { winHeight, winWidth } from \"../utils/window\";\nimport * as Location from \"expo-location\";\nimport Crops from \"../data/items.json\";\nimport dynamicForm from \"../components/dynamicForm\";\nimport DynamicForm from \"../components/dynamicForm\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { env } from \"../env\";\nimport Select from \"react-select\";\n\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  AntDesign,\n  FontAwesome5,\n  FontAwesome,\n  MaterialIcons,\n  Ionicons,\n} from \"@expo/vector-icons\";\n\nconst SignUp = ({ navigation }) => {\n  const [name, setname] = useState(\"\");\n  const [filled, setfilled] = useState(false);\n  const [location, setLocation] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [cropName, setcropName] = useState(\"\");\n  const [city, setcity] = useState(\"\");\n  const [district, setdistrict] = useState(\"\");\n  const [country, setcountry] = useState(\"\");\n  const [region, setregion] = useState(\"\");\n  const [locData, setlocData] = useState([]);\n  const [userName, setuserName] = useState(\"\");\n  const [lat, setlat] = useState(0);\n  const [long, setlong] = useState(0);\n  const [show, setshow] = useState(\"\");\n  const [qty, setqty] = useState(\"\");\n  const [hdate, sethdate] = useState(\"\");\n  const [filteredBlur, setfilteredBlur] = useState([]);\n  const [crop, setcrop] = useState(null);\n  const [added, setadded] = useState(null);\n  const [drops, setDrops] = useState([]);\n  const [tempDate, settempDate] = useState(new Date());\n  const [tempID, settempID] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [sugg, setsugg] = useState([]);\n  const [applied, setapplied] = useState(false);\n  const [fields, setFields] = useState([\n    { name: \"\", harvestingTime: \"\", estimatedYield: 0 },\n  ]);\n  const [inputFields, setInputFields] = useState([\n    { name: \"\", harvestingTime: \"\", estimatedYield: 0 },\n  ]);\n\n  const handleSubmit = () => {\n    console.log(\"fields\", fields);\n    console.log(userName);\n    let phone = firebase.auth().currentUser?.phoneNumber;\n    firebase\n      .auth()\n      .currentUser?.getIdToken()\n      .then((idtoken) => {\n        fetch(\"http://staging.clarolabs.in:7050/Ksearch/farmer/save\", {\n          method: \"post\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            authToken: idtoken,\n            crops: fields,\n            farmer: {\n              name: userName,\n              farmerImage:\n                \"https://www.shareicon.net/data/512x512/2016/09/01/822718_user_512x512.png\",\n              contactNo: firebase.auth().currentUser?.phoneNumber,\n              village: city,\n              block: country,\n              district: district,\n              state: region,\n              totalLandSize: 0,\n              totalLandSizeUnit: \"Kattha\",\n              latitude: lat,\n              longitude: long,\n            },\n          }),\n        }).then(() => navigation.navigate(\"Homely\", { screen: \"Home\" }));\n      });\n  };\n\n  const handleInputChange = (index, event) => {\n    const values = [...inputFields];\n    if (event.target.name === \"name\") {\n      values[index].name = event.target.value;\n    } else if (event.target.name === \"estimatedYield\") {\n      values[index].estimatedYield = Number(event.target.value);\n    } else {\n      values[index].harvestingTime = event.target.value;\n    }\n\n    setInputFields(values);\n  };\n\n  const handleAddFields = () => {\n    const values = [...inputFields];\n    values.push({ name: \"\", harvestingTime: \"\", estimatedYield: \"\" });\n    setInputFields(values);\n  };\n\n  const handleRemoveFields = (index) => {\n    const values = [...inputFields];\n    values.splice(index, 1);\n    setInputFields(values);\n  };\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        cropName: show,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => setDrops(data.data.list));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        cropName: show,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => setfilteredBlur(data.data.list));\n  }, [show]);\n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestPermissionsAsync();\n      if (status !== \"granted\") {\n        setErrorMsg(\"Permission to access location was denied\");\n        return;\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n      setLocation(location);\n    })();\n  }, []);\n\n  let text = \"Waiting..\";\n  if (errorMsg) {\n    text = \"errorMsg\";\n  } else if (location != null) {\n    console.log(location);\n    Location.setGoogleApiKey(env.googleAPIkey);\n    Location.reverseGeocodeAsync({\n      latitude: location.coords.latitude,\n      longitude: location.coords.longitude,\n    })\n      .then((e) => {\n        console.log(e[0]);\n        setcity(e[0].city);\n        setdistrict(e[0].district);\n        setregion(e[0].region);\n        setcountry(e[0].name);\n        setlat(location.coords.latitude);\n        setlong(location.coords.longitude);\n        console.log(city, district, region, country);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  text = JSON.stringify(location);\n  console.log(text);\n\n  text = JSON.stringify(location);\n  console.log(text);\n\n  console.log(\"Reached Signup\");\n\n  const getCrop = (e) => {\n    Crops.map((item) => {\n      if (item.name.toLocaleLowerCase().includes(e.toLowerCase())) {\n        console.log(item.name);\n      }\n    });\n  };\n\n  const removeCrop = (i) => {\n    const values = [...fields];\n    values.splice(i, 1);\n    setFields(values);\n  };\n\n  const addCrop = () => {\n    const val = [...fields];\n    val.push({ name: \"\", estimatedYield: 0, harvestingTime: \"\" });\n    setFields(val);\n  };\n\n  const matchCrop = (e, q, h, i) => {\n    const values = [...fields];\n    if (e !== null) {\n      values[i].name = e;\n    } else if (q !== null) {\n      values[i].estimatedYield = Number(q);\n    } else if (h !== null) {\n      values[i].harvestingTime = h;\n    }\n\n    setFields(values);\n    console.log(fields);\n  };\n\n  const showData = () => {\n    console.log(fields);\n  };\n  const options = [];\n  drops.map((i) => {\n    options.push({ values: i.name, label: i.name });\n  });\n\n  const renderMatch = ({ item }) => (\n    <TouchableOpacity\n      style={{\n        width: winWidth > 767 ? \"50%\" : \"97%\",\n        height: 50,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        margin: 2,\n        padding: 5,\n        borderWidth: 1,\n        borderColor: \"#fff\",\n        borderRadius: 10,\n        backgroundColor: \"#fff\",\n        alignSelf: \"center\",\n      }}\n      onPress={() => console.log(item.name)}\n    >\n      <Image\n        source={{ uri: item.cropImage }}\n        style={{\n          width: 45,\n          height: 45,\n          borderWidth: 1,\n          borderColor: \"green\",\n          borderRadius: 45,\n        }}\n      />\n      <Text style={{ fontSize: 20, marginLeft: 5 }}>{item.name}</Text>\n    </TouchableOpacity>\n  );\n  return (\n    <View style={[styles.container, { backgroundColor: \"#fff\" }]}>\n      <View\n        style={{ height: winHeight, width: \"100%\", backgroundColor: \"#fff\" }}\n      >\n        <View\n          style={{\n            height: \"15%\",\n            backgroundColor: \"transparent\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            flexDirection: \"row\",\n          }}\n        >\n          <Image\n            source={require(\"../../assets/newIcon6.png\")}\n            style={{ height: 40, width: 40 }}\n          />\n          <Text style={{ marginLeft: 5, fontSize: 30, color: \"#000\" }}>\n            Krisearch\n          </Text>\n        </View>\n\n        <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n          <Text style={{ fontSize: 18 }}>Create your account</Text>\n          <Text style={{ color: \"green\" }}>\n            Number successfully verified. Lets get started\n          </Text>\n        </View>\n        <View\n          style={{\n            width: \"100%\",\n            height: \"10%\",\n\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginTop: 20,\n            borderBottomWidth: 1,\n            borderBottomColor: \"#d6d6d6\",\n          }}\n        >\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignSelf: \"center\",\n              justifyContent: \"space-between\",\n\n              alignItems: \"center\",\n              width: winWidth > 768 ? \"40%\" : \"95%\",\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 16,\n                fontWeight: \"700\",\n                marginLeft: 5,\n                color: \"#6F6F6F\",\n              }}\n            >\n              Your Name\n            </Text>\n            <TextInput\n              style={{\n                width: winWidth < 768 ? \"60%\" : \"60%\",\n                height: 40,\n                borderWidth: 1,\n                borderColor: \"#D3D3D3\",\n                padding: 10,\n                marginTop: 10,\n                borderRadius: 5,\n                outlineColor: \"#D3D3D3\",\n                fontSize: 16,\n              }}\n              onChangeText={(e) => setuserName(e)}\n              placeholder=\"Enter your name\"\n            />\n          </View>\n\n          {/* <TouchableOpacity\n            style={{\n              width: \"80%\",\n              height: 35,\n              backgroundColor: \"#3ECF8E\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              padding: 5,\n              borderRadius: 5,\n              borderColor: \"#3ECF8E\",\n              borderWidth: 2,\n              flexDirection: \"row\",\n              marginTop: 15,\n            }}\n          >\n            <Entypo name=\"location\" size={24} color=\"#fff\" />\n            <Text\n              style={{\n                fontSize: 16,\n                color: \"#fff\",\n                marginLeft: 10,\n              }}\n            >\n              Share Location\n            </Text>\n          </TouchableOpacity> */}\n          {/* <Text>SignUp Form</Text>\n          <Text>{text}</Text> */}\n          {/* <View\n            style={{\n              width: \"100%\",\n              backgroundColor: \"yellow\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"space-evenly\",\n            }}\n          >\n            <Text>{city !== \"\" || null ? city : \"Loading\"}</Text>\n            <Text>{district !== \"\" || null ? district : \"Loading\"}</Text>\n            <Text>{region !== \"\" || null ? region : \"Loading\"}</Text>\n            <Text>{country !== \"\" || null ? country : \"Loading\"}</Text>\n          </View> */}\n        </View>\n        <View\n          style={{\n            width: \"100%\",\n            padding: 10,\n            marginTop: 5,\n          }}\n        >\n          <View\n            style={{\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n              width: winWidth < 768 ? \"100%\" : \"40%\",\n              alignSelf: \"center\",\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 16,\n                fontWeight: \"bold\",\n                marginLeft: 5,\n                color: \"#6F6F6F\",\n              }}\n            >\n              List your crops below\n            </Text>\n            <TouchableOpacity\n              style={{\n                width: \"35%\",\n                height: 30,\n                alignItems: \"center\",\n                backgroundColor: \"#fff\",\n                borderWidth: 2,\n                borderRadius: 20,\n                marginTop: 10,\n                borderColor: \"#3ECF8E\",\n                justifyContent: \"center\",\n              }}\n              onPress={() => {\n                addCrop();\n                setapplied(false);\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 14,\n                  padding: 5,\n                  color: \"#3ECF8E\",\n                  fontWeight: \"700\",\n                }}\n              >\n                + Add Crop\n              </Text>\n            </TouchableOpacity>\n          </View>\n          <View\n            style={{\n              width: winWidth < 768 ? \"100%\" : \"40%\",\n\n              alignSelf: \"center\",\n            }}\n          >\n            <View style={{ marginBottom: 10 }}>\n              {fields.map((field, idx) => (\n                <View\n                  key={`${field}~${idx}`}\n                  style={{\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    margin: 5,\n                    padding: 2,\n                    height: 50,\n                    borderColor: \"#fafcff\",\n                    borderWidth: 2,\n                    borderRadius: 5,\n                    backgroundColor: \"#fafcff\",\n                  }}\n                >\n                  <View style={{ width: \"35%\", zIndex: 999 }}>\n                    <Select\n                      placeholder=\"Add Crop...\"\n                      defaultValue={selectedOption}\n                      onChange={(e) => {\n                        setSelectedOption;\n                        matchCrop(e.label, null, null, idx);\n                      }}\n                      options={options}\n                    />\n                  </View>\n\n                  {/* <TextInput\n            style={{\n              width: \"70%\",\n              fontSize: 15,\n              borderWidth: 1,\n              borderColor: \"black\",\n              borderRadius: 5,\n              padding: 5,\n              margin: 5,\n            }}\n            value={field.value}\n            onChangeText={(e) => {\n              // setcrop(e);\n              // settempID(idx);\n              // matchCrop(e, null, null, idx);\n            }}\n            placeholder=\"Add Crop\"\n          /> */}\n\n                  <TextInput\n                    style={{\n                      width: \"20%\",\n                      fontSize: 15,\n                      borderWidth: 1,\n                      borderColor: \"#D3D3D3\",\n                      borderRadius: 5,\n                      padding: 5,\n                      margin: 5,\n                      height: 37,\n                      outlineColor: \"#D3D3D3\",\n                    }}\n                    onChangeText={(q) => matchCrop(null, q, null, idx)}\n                    placeholder=\"Quantity\"\n                  />\n\n                  {applied ? (\n                    <View\n                      style={{\n                        backgroundColor: \"#d6d9ff\",\n                        borderRadius: 5,\n                        borderColor: \"#7b42ff\",\n                        height: 35,\n                        borderWidth: 2,\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        width: \"30%\",\n                      }}\n                    >\n                      <Text style={{ fontSize: 14 }}>\n                        {field.harvestingTime}\n                      </Text>\n                    </View>\n                  ) : (\n                    <DatePicker\n                      dateFormat=\"dd/MM/yyyy\"\n                      popperPlacement=\"top-end\"\n                      popperModifiers={{\n                        offset: {\n                          enabled: true,\n                          offset: \"5px, 10px\",\n                        },\n                        preventOverflow: {\n                          enabled: true,\n                          escapeWithReference: false,\n                          boundariesElement: \"viewport\",\n                        },\n                      }}\n                      selected={tempDate}\n                      onChange={(date) => {\n                        settempDate(date);\n                        setapplied(true);\n                        matchCrop(null, null, date.toLocaleDateString(), idx);\n                      }}\n                      customInput={\n                        <TextInput\n                          style={{\n                            backgroundColor: \"#d6d9ff\",\n                            borderRadius: 5,\n                            borderColor: \"#7b42ff\",\n                            height: 35,\n                            borderWidth: 2,\n                            padding: 5,\n                            fontSize: 14,\n                            width: \"70%\",\n                          }}\n                        />\n                      }\n                    />\n                  )}\n                  <AntDesign\n                    name=\"delete\"\n                    size={20}\n                    color=\"#eb3d3d\"\n                    onPress={() => removeCrop(idx)}\n                  />\n                  {/* <Button title=\"Remove\" onPress={() => removeCrop(idx)} /> */}\n                </View>\n              ))}\n            </View>\n            {/* {fields.map((field, idx) => {\n        return (\n          <View\n            key={`${field}-${idx}`}\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              width: \"100%\",\n              borderWidth: 1,\n              padding: 2,\n              borderColor: \"#D3D3D3\",\n              borderRadius: 5,\n              margin: 2,\n            }}\n          >\n            <View style={{ flexDirection: \"column\", width: \"80%\" }}>\n              <View>\n                <TextInput\n                  placeholder=\"Crop\"\n                  style={\n                    Platform.OS === \"web\" && {\n                      outlineColor: \"#3ECF8E\",\n                      height: 30,\n                      backgroundColor: \"white\",\n                      width: \"100%\",\n                      padding: 5,\n                      fontSize: 14,\n                      borderWidth: 1,\n\n                      borderColor: \"#D3D3D3\",\n                      borderRadius: 5,\n                      textAlign: \"center\",\n                    }\n                  }\n                  value={field.value || \"\"}\n                  onChange={(e) => handleChange(idx, e)}\n                />\n              </View>\n              <View style={{ flexDirection: \"row\" }}>\n                <TextInput\n                  placeholder=\"Quantity\"\n                  style={\n                    Platform.OS === \"web\" && {\n                      outlineColor: \"#3ECF8E\",\n                      height: 30,\n                      backgroundColor: \"white\",\n                      width: \"50%\",\n                      padding: 5,\n                      fontSize: 14,\n                      borderWidth: 1,\n                      marginTop: 5,\n                      marginRight: 5,\n                      borderColor: \"#D3D3D3\",\n                      borderRadius: 5,\n                      textAlign: \"center\",\n                    }\n                  }\n                  value={field.quantity || \"\"}\n                  onChange={(e) => handleChange(idx, e)}\n                />\n                <TextInput\n                  placeholder=\"Harvest Date\"\n                  style={\n                    Platform.OS === \"web\" && {\n                      outlineColor: \"#3ECF8E\",\n                      height: 30,\n                      backgroundColor: \"white\",\n                      width: \"50%\",\n                      padding: 5,\n                      fontSize: 14,\n                      borderWidth: 1,\n                      marginTop: 5,\n                      marginLeft: 5,\n                      borderColor: \"#D3D3D3\",\n                      borderRadius: 5,\n                      textAlign: \"center\",\n                    }\n                  }\n                  value={field.harvestDate || \"\"}\n                  onChange={(e) => handleChange(idx, e)}\n                />\n              </View>\n            </View>\n\n            <AntDesign\n              name=\"delete\"\n              size={20}\n              color=\"#eb3d3d\"\n              onPress={() => handleRemove(idx)}\n            />\n          </View>\n        );\n      })}\n      <TouchableOpacity\n        style={{\n          width: \"100%\",\n          height: 35,\n          alignItems: \"center\",\n          backgroundColor: \"#3A48ED\",\n          borderWidth: 1,\n          borderRadius: 5,\n          marginTop: 10,\n          borderColor: \"#3A48ED\",\n          justifyContent: \"center\",\n        }}\n        onPress={() => {\n          handleAdd();\n        }}\n      >\n        <Text\n          style={{\n            fontSize: 15,\n            padding: 5,\n            color: \"#fff\",\n            fontWeight: \"700\",\n          }}\n        >\n          + Add Crop\n        </Text>\n      </TouchableOpacity> */}\n\n            {/* <Button\n        title=\"Add Crop\"\n        onPress={() => {\n          addCrop(), setapplied(false);\n        }}\n      /> */}\n            {/* <Button title=\"Submit\" onPress={() => showData()} /> */}\n          </View>\n          {/* <DynamicForm /> */}\n          <View\n            style={{\n              width: winWidth > 768 ? \"40%\" : \"100%\",\n\n              alignSelf: \"center\",\n            }}\n          >\n            <TouchableOpacity\n              style={{\n                width: \"43%\",\n                height: 40,\n                alignItems: \"center\",\n                backgroundColor: \"#3ECF8E\",\n                borderWidth: 1,\n                borderRadius: 5,\n                top: 30,\n                borderColor: \"#3ECF8E\",\n                justifyContent: \"center\",\n                alignSelf: \"flex-end\",\n              }}\n              onPress={() => {\n                handleSubmit();\n                // console.log(fields);\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 15,\n                  padding: 5,\n                  color: \"#fff\",\n                  fontWeight: \"700\",\n                }}\n              >\n                SUBMIT\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n\n      {/* {preCheck} */}\n\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n};\n\nexport default SignUp;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#346beb\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  TextInput,\n  Dimensions,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n  Platform,\n  FlatList,\n} from \"react-native\";\n\nimport { winWidth } from \"../utils/window\";\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  FontAwesome5,\n  FontAwesome,\n  AntDesign,\n} from \"@expo/vector-icons\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Select from \"react-select\";\n\nconst DynamicForm = () => {\n  const [fields, setFields] = useState([\n    { value: \"\", quantity: \"\", harvestDate: \"\" },\n  ]);\n  const [crop, setcrop] = useState(null);\n  const [added, setadded] = useState(null);\n  const [filteredBlur, setfilteredBlur] = useState([]);\n  const [tempDate, settempDate] = useState(new Date());\n  const [tempID, settempID] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [sugg, setsugg] = useState([]);\n  const [applied, setapplied] = useState(false);\n  const options = [];\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        cropName: crop,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => setfilteredBlur(data.data.list));\n  }, []);\n\n  // const filteredCrops = Data.filter((item) => {\n  //   return item.name.toLocaleLowerCase().includes(term.toLowerCase());\n  // });\n\n  filteredBlur.map((i) => {\n    options.push({ values: i.name, label: i.name });\n  });\n\n  console.log(options);\n\n  const renderMatch = ({ item }) => (\n    <TouchableOpacity\n      style={{\n        width: winWidth > 767 ? \"50%\" : \"97%\",\n        height: 50,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n\n        padding: 5,\n        borderWidth: 1,\n        borderColor: \"#fff\",\n        borderRadius: 10,\n        backgroundColor: \"#fff\",\n      }}\n      onPress={() => {\n        setadded(item.name);\n        console.log(added);\n        matchCrop(added, null, null, tempID);\n        setcrop(null);\n        settempID(null);\n      }}\n    >\n      <Image\n        source={{ uri: item.cropImage }}\n        style={{\n          width: 45,\n          height: 45,\n          borderWidth: 1,\n          borderColor: \"green\",\n          borderRadius: 45,\n        }}\n      />\n      <Text style={{ fontSize: 20, marginLeft: 5 }}>{item.name}</Text>\n    </TouchableOpacity>\n  );\n  // function handleChange(i, event) {\n  //   const values = [...fields];\n  //   values[i].value = event.target.value;\n  //   values[i].quantity = event.target.quantity;\n  //   values[i].harvestDate = event.target.harvestDate;\n  //   setFields(values);\n  //   console.log(fields);\n  // }\n\n  function handleAdd() {\n    const values = [...fields];\n    values.push({ value: \"\", quantity: \"\", harvestDate: \"\" });\n    setFields(values);\n  }\n\n  const removeCrop = (i) => {\n    const values = [...fields];\n    values.splice(i, 1);\n    setFields(values);\n  };\n\n  const addCrop = () => {\n    const val = [...fields];\n    val.push({ value: \"\", quantity: \"\", harvestDate: \"\" });\n    setFields(val);\n  };\n\n  const matchCrop = (e, q, h, i) => {\n    const values = [...fields];\n    if (e !== null) {\n      values[i].value = e;\n    } else if (q !== null) {\n      values[i].quantity = q;\n    } else if (h !== null) {\n      values[i].harvestDate = h;\n    }\n\n    setFields(values);\n    console.log(fields);\n  };\n\n  const showData = () => {\n    console.log(fields);\n  };\n  return (\n    <View\n      style={{\n        width: winWidth < 768 ? \"100%\" : \"40%\",\n        borderWidth: 1,\n        alignSelf: \"center\",\n      }}\n    >\n      <View style={{ marginBottom: 10 }}>\n        {fields.map((field, idx) => (\n          <View\n            key={`${field}~${idx}`}\n            style={{\n              flexDirection: \"row\",\n              width: \"100%\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              margin: 5,\n              backgroundColor: \"yellow\",\n            }}\n          >\n            <View style={{ width: \"35%\", zIndex: 999 }}>\n              <Select\n                placeholder=\"Add Crop...\"\n                defaultValue={selectedOption}\n                onChange={(e) => {\n                  setSelectedOption;\n                  matchCrop(e.label, null, null, idx);\n                }}\n                options={options}\n              />\n            </View>\n\n            {/* <TextInput\n            style={{\n              width: \"70%\",\n              fontSize: 15,\n              borderWidth: 1,\n              borderColor: \"black\",\n              borderRadius: 5,\n              padding: 5,\n              margin: 5,\n            }}\n            value={field.value}\n            onChangeText={(e) => {\n              // setcrop(e);\n              // settempID(idx);\n              // matchCrop(e, null, null, idx);\n            }}\n            placeholder=\"Add Crop\"\n          /> */}\n\n            <TextInput\n              style={{\n                width: \"20%\",\n                fontSize: 15,\n                borderWidth: 1,\n                borderColor: \"black\",\n                borderRadius: 5,\n                padding: 5,\n                margin: 5,\n              }}\n              onChangeText={(q) => matchCrop(null, q, null, idx)}\n              placeholder=\"Add Qty\"\n            />\n\n            {applied ? (\n              <Text>{field.harvestDate}</Text>\n            ) : (\n              <DatePicker\n                dateFormat=\"dd/MM/yyyy\"\n                popperPlacement=\"top-end\"\n                popperModifiers={{\n                  offset: {\n                    enabled: true,\n                    offset: \"5px, 10px\",\n                  },\n                  preventOverflow: {\n                    enabled: true,\n                    escapeWithReference: false,\n                    boundariesElement: \"viewport\",\n                  },\n                }}\n                selected={tempDate}\n                onChange={(date) => {\n                  settempDate(date);\n                  setapplied(true);\n                  matchCrop(null, null, date.toLocaleDateString(), idx);\n                }}\n                customInput={\n                  <TextInput\n                    style={{\n                      backgroundColor: \"#d6d9ff\",\n                      borderRadius: 5,\n                      borderColor: \"#7b42ff\",\n                      height: 35,\n                      borderWidth: 2,\n                      padding: 5,\n                      fontSize: 13,\n                      width: \"70%\",\n                    }}\n                  />\n                }\n              />\n            )}\n            <AntDesign\n              name=\"delete\"\n              size={20}\n              color=\"#eb3d3d\"\n              onPress={() => removeCrop(idx)}\n            />\n            {/* <Button title=\"Remove\" onPress={() => removeCrop(idx)} /> */}\n          </View>\n        ))}\n      </View>\n      {/* {fields.map((field, idx) => {\n        return (\n          <View\n            key={`${field}-${idx}`}\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              width: \"100%\",\n              borderWidth: 1,\n              padding: 2,\n              borderColor: \"#D3D3D3\",\n              borderRadius: 5,\n              margin: 2,\n            }}\n          >\n            <View style={{ flexDirection: \"column\", width: \"80%\" }}>\n              <View>\n                <TextInput\n                  placeholder=\"Crop\"\n                  style={\n                    Platform.OS === \"web\" && {\n                      outlineColor: \"#3ECF8E\",\n                      height: 30,\n                      backgroundColor: \"white\",\n                      width: \"100%\",\n                      padding: 5,\n                      fontSize: 14,\n                      borderWidth: 1,\n\n                      borderColor: \"#D3D3D3\",\n                      borderRadius: 5,\n                      textAlign: \"center\",\n                    }\n                  }\n                  value={field.value || \"\"}\n                  onChange={(e) => handleChange(idx, e)}\n                />\n              </View>\n              <View style={{ flexDirection: \"row\" }}>\n                <TextInput\n                  placeholder=\"Quantity\"\n                  style={\n                    Platform.OS === \"web\" && {\n                      outlineColor: \"#3ECF8E\",\n                      height: 30,\n                      backgroundColor: \"white\",\n                      width: \"50%\",\n                      padding: 5,\n                      fontSize: 14,\n                      borderWidth: 1,\n                      marginTop: 5,\n                      marginRight: 5,\n                      borderColor: \"#D3D3D3\",\n                      borderRadius: 5,\n                      textAlign: \"center\",\n                    }\n                  }\n                  value={field.quantity || \"\"}\n                  onChange={(e) => handleChange(idx, e)}\n                />\n                <TextInput\n                  placeholder=\"Harvest Date\"\n                  style={\n                    Platform.OS === \"web\" && {\n                      outlineColor: \"#3ECF8E\",\n                      height: 30,\n                      backgroundColor: \"white\",\n                      width: \"50%\",\n                      padding: 5,\n                      fontSize: 14,\n                      borderWidth: 1,\n                      marginTop: 5,\n                      marginLeft: 5,\n                      borderColor: \"#D3D3D3\",\n                      borderRadius: 5,\n                      textAlign: \"center\",\n                    }\n                  }\n                  value={field.harvestDate || \"\"}\n                  onChange={(e) => handleChange(idx, e)}\n                />\n              </View>\n            </View>\n\n            <AntDesign\n              name=\"delete\"\n              size={20}\n              color=\"#eb3d3d\"\n              onPress={() => handleRemove(idx)}\n            />\n          </View>\n        );\n      })}\n      <TouchableOpacity\n        style={{\n          width: \"100%\",\n          height: 35,\n          alignItems: \"center\",\n          backgroundColor: \"#3A48ED\",\n          borderWidth: 1,\n          borderRadius: 5,\n          marginTop: 10,\n          borderColor: \"#3A48ED\",\n          justifyContent: \"center\",\n        }}\n        onPress={() => {\n          handleAdd();\n        }}\n      >\n        <Text\n          style={{\n            fontSize: 15,\n            padding: 5,\n            color: \"#fff\",\n            fontWeight: \"700\",\n          }}\n        >\n          + Add Crop\n        </Text>\n      </TouchableOpacity> */}\n\n      <TouchableOpacity\n        style={{\n          width: \"100%\",\n          height: 35,\n          alignItems: \"center\",\n          backgroundColor: \"#3A48ED\",\n          borderWidth: 1,\n          borderRadius: 5,\n          marginTop: 10,\n          borderColor: \"#3A48ED\",\n          justifyContent: \"center\",\n        }}\n        onPress={() => {\n          addCrop();\n          setapplied(false);\n        }}\n      >\n        <Text\n          style={{\n            fontSize: 15,\n            padding: 5,\n            color: \"#fff\",\n            fontWeight: \"700\",\n          }}\n        >\n          + Add Crop\n        </Text>\n      </TouchableOpacity>\n      {/* <Button\n        title=\"Add Crop\"\n        onPress={() => {\n          addCrop(), setapplied(false);\n        }}\n      /> */}\n      <Button title=\"Submit\" onPress={() => showData()} />\n    </View>\n  );\n};\n\nexport default DynamicForm;\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n  FlatList,\n} from \"react-native\";\nimport Header from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport firebase from \"../firebase/firebase\";\nimport { firestore } from \"firebase\";\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  AntDesign,\n  FontAwesome5,\n  FontAwesome,\n  MaterialIcons,\n} from \"@expo/vector-icons\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport DynamicForm from \"../components/dynamicForm\";\n\nconst Test = ({ navigation }) => {\n  const [inputFields, setInputFields] = useState([\n    { name: \"\", harvestingTime: \"\", estimatedYield: 0 },\n  ]);\n\n  const [show, setshow] = useState(\"\");\n  const [selected, setselected] = useState(\"\");\n  const [crops, setcrops] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"inputFields\", inputFields);\n  };\n\n  const handleInputChange = (index, event) => {\n    const values = [...inputFields];\n    if (event.target.name === \"name\") {\n      values[index].name = event.target.value;\n    } else if (event.target.name === \"estimatedYield\") {\n      values[index].estimatedYield = Number(event.target.value);\n    } else {\n      values[index].harvestingTime = event.target.value;\n    }\n\n    setInputFields(values);\n  };\n\n  const handleAddFields = () => {\n    const values = [...inputFields];\n    values.push({ name: \"\", harvestingTime: \"\", estimatedYield: \"\" });\n    setInputFields(values);\n  };\n\n  const handleRemoveFields = (index) => {\n    const values = [...inputFields];\n    values.splice(index, 1);\n    setInputFields(values);\n  };\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        cropName: show,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data.data.list), setcrops(data.data.list);\n      });\n  }, [show]);\n\n  const cropSearch = (n) => {\n    setselected(n);\n  };\n\n  const renderMatch = ({ item }) => (\n    <TouchableOpacity\n      style={{\n        width: winWidth > 767 ? \"50%\" : \"97%\",\n        height: 50,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        margin: 2,\n        padding: 5,\n        borderWidth: 1,\n        borderColor: \"#000\",\n        borderRadius: 10,\n        backgroundColor: \"#fff\",\n        alignSelf: \"center\",\n      }}\n      onPress={() => cropSearch(item.name)}\n    >\n      <Image\n        source={{ uri: item.cropImage }}\n        style={{\n          width: 45,\n          height: 45,\n          borderWidth: 1,\n          borderColor: \"green\",\n          borderRadius: 45,\n        }}\n      />\n      <Text style={{ fontSize: 20, marginLeft: 5 }}>{item.name}</Text>\n    </TouchableOpacity>\n  );\n  return (\n    <View\n      style={{\n        flex: 1,\n        backgroundColor: \"white\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <DynamicForm />\n    </View>\n  );\n};\n\nexport default Test;\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  Dimensions,\n  ScrollView,\n  StyleSheet,\n  Text,\n  Image,\n  TouchableOpacity,\n  View,\n  ActivityIndicator,\n  FlatList,\n  Platform,\n  TextInput,\n} from \"react-native\";\nimport Header, { HeaderProps } from \"../components/header\";\nimport { winWidth, winHeight } from \"../utils/window\";\nimport Farmers from \"../data/farmers.json\";\nimport Crops from \"../data/items.json\";\nimport { Modalize } from \"react-native-modalize\";\nimport Card from \"../components/Card\";\n\nimport {\n  SimpleLineIcons,\n  Feather,\n  Entypo,\n  AntDesign,\n  FontAwesome5,\n  FontAwesome,\n  MaterialIcons,\n} from \"@expo/vector-icons\";\nimport hideNumber from \"../utils/hideNumber\";\nimport getSmallString from \"../utils/getSmallString\";\nimport States from \"../data/states.json\";\nimport Data from \"../data/items.json\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { render } from \"react-dom\";\nimport lottie from \"lottie-web\";\nimport { BlurView } from \"expo-blur\";\nimport { add } from \"date-fns\";\nimport * as Location from \"expo-location\";\nimport firebase from \"../firebase/firebase\";\nimport { concat } from \"react-native-reanimated\";\n\nconst Feed = ({ navigation }) => {\n  const [showHome, setshowHome] = useState(false);\n  const [viewCrops, setviewCrops] = useState([]);\n  const [location, setLocation] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const cropper = \"\";\n  const [blur, setblur] = useState(false);\n  const [placer, setplacer] = useState(false);\n  const [crop, setcrop] = useState([]);\n  const [parent, setparent] = useState(false);\n  const [farmers, setfarmers] = useState([]);\n  const [dispfarmers, setdispfarmers] = useState([]);\n  const [modalName, setmodalName] = useState(\"\");\n  const [firstScroll, setfirstScroll] = useState(0);\n  const [selectedState, setselectedState] = useState(\"\");\n  const [cats, setcats] = useState(false);\n  const [val, setval] = useState(\"\");\n  const [tempVal, settempVal] = useState(\"\");\n  const [addr, setaddr] = useState(\"\");\n  const [tempAddr, settempAddr] = useState(\"\");\n  const [parenter, setparenter] = useState(\"\");\n  const [term, setterm] = useState(\"\");\n  const [filteractive, setfilteractive] = useState(false);\n  const [addrToggle, setaddrToggle] = useState(false);\n  const [cropToggle, setcropToggle] = useState(false);\n  const [merge, setmerge] = useState(false);\n  const [dater, setdater] = useState(false);\n  const [tempDater, settempDater] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [tempStartDate, settempStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [tempEndDate, settempEndDate] = useState(new Date());\n  const [show, setshow] = useState(\"\");\n  const [applied, setapplied] = useState(false);\n  const [focused, setfocused] = useState([]);\n  const [cropFinal, setcropFinal] = useState(null);\n  const [listRegion, setlistRegion] = useState([]);\n  const [fileredFarmers, setfileredFarmers] = useState([]);\n  const [listCrops, setlistCrops] = useState([]);\n  const [seeFarmer, setseeFarmer] = useState(false);\n  const [clickedFarmers, setclickedFarmers] = useState([]);\n  const [showList, setshowList] = useState([]);\n  const [done, setdone] = useState(null);\n  const [finallist, setfinallist] = useState([\n    {\n      cropName: \"\",\n      harvestDate: \"\",\n      quantity: 0,\n    },\n  ]);\n  const [filter, setfilter] = useState([\n    {\n      gender: \"\",\n      state: \"\",\n      harvestDate: \"\",\n    },\n  ]);\n\n  const [tempGen, settempGen] = useState(null);\n  const [tempState, settempState] = useState(null);\n  const [tempDate, settempDate] = useState(\"\");\n  const [sendVal, setsendVal] = useState(0);\n  const [filteredBlur, setfilteredBlur] = useState([]);\n  const [selectedCrop, setselectedCrop] = useState(false);\n  const [mapCroptoFarmer, setmapCroptoFarmer] = useState([]);\n\n  const tempValues = () => {\n    console.log(tempGen, tempState, tempDate);\n  };\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/farmers\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        farmerName: true,\n        farmingArea: true,\n        gender: tempGen,\n        harvestDate:\n          tempEndDate !== null ? tempEndDate.toLocaleDateString() : \"\",\n        orderBy: \"\",\n        cropName: cropFinal,\n        pageNo: firstScroll,\n        quantity: true,\n        state: tempState,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data.data.list), setfarmers(farmers.concat(data.data.list));\n      })\n      .catch((error) => console.error(error));\n  }, [firstScroll]);\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/farmers\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        farmerName: true,\n        farmingArea: true,\n        gender: tempGen,\n        harvestDate:\n          tempEndDate !== null ? tempEndDate.toLocaleDateString() : \"\",\n        orderBy: \"\",\n        cropName: cropFinal,\n        pageNo: 0,\n        quantity: true,\n        state: tempState,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data.data.list),\n          setlistCrops(data.data.list),\n          setfileredFarmers(data.data.list);\n      })\n      .catch((error) => console.error(error));\n  }, [sendVal]);\n\n  console.log(listCrops);\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        cropName: show,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => setfilteredBlur(data.data.list));\n  }, [show]);\n\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/crops\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        cropName: null,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => setviewCrops(data.data.list));\n  }, []);\n\n  console.log(viewCrops);\n\n  const renderAll = ({ item }) => (\n    <Card\n      key={item.id}\n      isCrop={true}\n      crop={item.name}\n      avatar={item.cropImage}\n      onPress={() => {\n        console.log(\"crop\"), setseeFarmer(true);\n      }}\n    />\n  );\n  useEffect(() => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/fetch/states\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        cropName: cropFinal,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data.data.list), setlistRegion(data.data.list);\n      });\n  }, [cropFinal]);\n\n  const renderMatch = ({ item }) => (\n    <TouchableOpacity\n      style={{\n        width: winWidth > 767 ? \"50%\" : \"97%\",\n        height: 50,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n\n        padding: 5,\n        borderWidth: 1,\n        borderColor: \"#fff\",\n        borderRadius: 10,\n        backgroundColor: \"#fff\",\n      }}\n      onPress={() => {\n        setcropFinal(item.name), setsendVal(sendVal + 1);\n        setblur(false);\n      }}\n    >\n      <Image\n        source={{ uri: item.cropImage }}\n        style={{\n          width: 45,\n          height: 45,\n          borderWidth: 1,\n          borderColor: \"green\",\n          borderRadius: 45,\n        }}\n      />\n      <Text style={{ fontSize: 20, marginLeft: 5 }}>{item.name}</Text>\n    </TouchableOpacity>\n  );\n\n  const showDetails = (id) => {\n    fetch(\"http://staging.clarolabs.in:7050/Ksearch/farmer/details/\" + id, {\n      method: \"get\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: null,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data.data), setfocused(data.data.list);\n      })\n      .catch((err) => console.log(err));\n\n    OpenProfile();\n    console.log(listCrops);\n    {\n      listCrops.map((i) => {\n        if (i.id == id) {\n          i.crops.map((j) => {\n            showList.push(j);\n          });\n        }\n      });\n    }\n    console.log(showList);\n  };\n\n  console.log(focused);\n\n  const cropSearch = (item) => {\n    alert(item);\n    setselectedCrop(true);\n    {\n      farmers.map((i) => {\n        if (i.cropName == item) {\n          console.log(i.farmerName);\n        } else {\n          console.log(\"NO MATCH\");\n        }\n      });\n    }\n  };\n\n  console.log(mapCroptoFarmer);\n\n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestPermissionsAsync();\n      if (status !== \"granted\") {\n        setErrorMsg(\"Permission to access location was denied\");\n        return;\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n      setLocation(location);\n    })();\n  }, []);\n\n  let text = \"Waiting..\";\n  if (errorMsg) {\n    text = \"errorMsg\";\n  } else if (location != null) {\n    console.log(location);\n    Location.setGoogleApiKey(\"AIzaSyBM1KjPdMGHYcIiXTbDl4v_GAAjbOO6OPA\");\n    Location.reverseGeocodeAsync({\n      latitude: location.coords.latitude,\n      longitude: location.coords.longitude,\n    })\n      .then((e) => {\n        console.log(e);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  text = JSON.stringify(location);\n  console.log(text);\n\n  const handleLoad = () => {\n    setfirstScroll(firstScroll + 1);\n  };\n\n  const modalizeFilterRef = useRef<Modalize>(null);\n  const onOpenfilter = () => {\n    modalizeFilterRef.current?.open();\n  };\n\n  const onCloseFilter = () => {\n    modalizeFilterRef.current?.close();\n  };\n\n  const modalizeRef = useRef<Modalize>(null);\n  const OpenProfile = () => {\n    modalizeRef.current?.open();\n  };\n\n  const CloseProfile = () => {\n    modalizeRef.current?.close();\n  };\n\n  const suggestions = filteredBlur.filter((item) => {\n    // console.log(item.id, item.name);\n    if (item.id == 548 || item.id == 5721 || item.id == 810 || item.id == 47) {\n      return item;\n    }\n  });\n\n  const genderData = [\n    {\n      key: \"m\",\n      text: \"Men\",\n    },\n    {\n      key: \"f\",\n      text: \"Women\",\n    },\n  ];\n\n  const renderCrops = ({ item }) => (\n    <View\n      style={{\n        width: \"100%\",\n        height: 60,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        backgroundColor: \"#fff\",\n        marginBottom: 3,\n        borderWidth: 1,\n        padding: 5,\n        borderColor: \"#e8e8e8\",\n        borderRadius: 5,\n        shadowColor: \"#346beb\",\n        shadowOffset: {\n          width: 1,\n          height: 3,\n        },\n        shadowOpacity: 0.2,\n        shadowRadius: 2.22,\n\n        elevation: 5,\n      }}\n    >\n      {/* {\n    filteredBlur.map((i)=>{\n      if(item.name==i.cropName){\n        \n      }\n    })\n  } */}\n\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n        }}\n      >\n        {/* {opto.map((i) => {\n      if (i.name.localCompare(item.name) == 0) {\n        <Image\n          source={{\n            uri: item.cropImage,\n          }}\n          style={{\n            height: 45,\n            width: 45,\n            marginRight: 5,\n            borderRadius: \"50%\",\n            borderColor: \"green\",\n          }}\n        />;\n      }\n    })} */}\n\n        {filteredBlur.map((i) => {\n          if (\n            item.cropName.toString().toLocaleLowerCase() ===\n            i.name.toString().toLocaleLowerCase()\n          )\n            return (\n              <Image\n                source={{\n                  uri: i.cropImage,\n                }}\n                style={{\n                  height: 45,\n                  width: 45,\n                  marginRight: 5,\n                  borderRadius: 45,\n                  borderWidth: 1,\n                  borderColor: \"#bdbdbd\",\n                }}\n              />\n            );\n        })}\n\n        <Text style={{ fontSize: 16 }}>{item.cropName}</Text>\n        <Entypo name=\"dot-single\" size={20} color=\"black\" />\n        <Text style={{ fontSize: 16 }}>{item.quantity} Quintal</Text>\n      </View>\n\n      <Text style={{ fontSize: 16 }}>{item.harvestDate}</Text>\n    </View>\n  );\n  const renderItems = ({ item }) => (\n    <Card\n      key={item.id}\n      name={item.farmerName}\n      avatar={item.farmerImage}\n      phone={item.phone}\n      address={item.state}\n      crop={\n        item.crops[0].cropName +\n        (item.crops.length - 1 == 0 ? \"\" : \" + \" + (item.crops.length - 1))\n      }\n      onPress={() => {\n        // console.log(item.farmerName),\n        // setfarmer(item.id),\n        //   // console.log(item.crops.map((i) => i.quantity));\n        //   onOpen(),\n        //   setmodalName(item.farmerName);\n        console.log(\"Pressed\");\n        showDetails(item.id);\n      }}\n    />\n  );\n  return (\n    <View style={styles.container}>\n      {!showHome ? (\n        <View>\n          <View\n            style={{\n              width: \"100%\",\n              flexDirection: \"column\",\n              alignItems: \"flex-start\",\n              justifyContent: \"flex-start\",\n              padding: 10,\n              marginTop: 20,\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 25,\n              }}\n            >\n              Welcome to Krisearch\n            </Text>\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                width: \"100%\",\n                marginTop: 10,\n              }}\n            >\n              <Text style={{ fontSize: 16, fontWeight: \"bold\" }}>\n                Available Crops\n              </Text>\n              <TouchableOpacity\n                // style={{\n                //   width: 100,\n                //   height: 30,\n                //   backgroundColor: \"#3ECF8E\",\n                //   alignItems: \"center\",\n                //   justifyContent: \"center\",\n                //   padding: 5,\n                //   borderRadius: 10,\n                //   borderColor: \"#3ECF8E\",\n                //   borderWidth: 2,\n                // }}\n                style={{\n                  width: \"30%\",\n                  height: 30,\n                  alignItems: \"center\",\n                  backgroundColor: \"#3ECF8E\",\n                  borderWidth: 1,\n                  borderRadius: 5,\n                  marginRight: 10,\n                  borderColor: \"#3ECF8E\",\n                  justifyContent: \"center\",\n                }}\n                onPress={() => setshowHome(true)}\n              >\n                <Text\n                  style={{\n                    fontSize: 14,\n                    padding: 5,\n                    color: \"#fff\",\n                    fontWeight: \"700\",\n                  }}\n                >\n                  View Farmers\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n          <FlatList\n            showsVerticalScrollIndicator={false}\n            data={viewCrops}\n            renderItem={renderAll}\n            ListEmptyComponent={() => (\n              <Text style={{ fontSize: 30 }}> Oops ! Didnt find that</Text>\n            )}\n            contentContainerStyle={{\n              flexDirection: \"row\",\n              width: \"100%\",\n              flexWrap: \"wrap\",\n              alignItems: \"flex-start\",\n              justifyContent: \"center\",\n              backgroundColor: \"#deebff\",\n              padding: winWidth > 767 ? 10 : 2,\n            }}\n            onEndReached={() => handleLoad()}\n          />\n        </View>\n      ) : (\n        <View\n          style={{\n            width: \"100%\",\n            height: winHeight,\n            backgroundColor: \"#deebff\",\n          }}\n        >\n          <Header\n            onTap={() => {\n              setblur(true), setshow(\"\");\n            }}\n            onLogoTap={() => {\n              console.log(\"Logo\");\n            }}\n            onFilter={() => console.log(\"Filter\")}\n          />\n\n          <View\n            style={{\n              width: \"100%\",\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n              flexDirection: \"row\",\n              backgroundColor: \"#deebff\",\n              padding: 10,\n            }}\n          >\n            <TouchableOpacity\n              // style={{\n              //   width: 100,\n              //   height: 30,\n              //   backgroundColor: \"#3ECF8E\",\n              //   alignItems: \"center\",\n              //   justifyContent: \"center\",\n              //   padding: 5,\n              //   borderRadius: 10,\n              //   borderColor: \"#3ECF8E\",\n              //   borderWidth: 2,\n              // }}\n              style={{\n                width: \"30%\",\n                height: 30,\n                alignItems: \"center\",\n                backgroundColor: \"#3ECF8E\",\n                borderWidth: 1,\n                borderRadius: 5,\n                marginRight: 10,\n                borderColor: \"#3ECF8E\",\n                justifyContent: \"center\",\n              }}\n              onPress={() => setshowHome(false)}\n            >\n              <Text\n                style={{\n                  fontSize: 14,\n                  padding: 5,\n                  color: \"#fff\",\n                  fontWeight: \"700\",\n                }}\n              >\n                Back to Feed\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"#346beb\",\n                height: 30,\n                width: 80,\n                padding: 3,\n                borderRadius: 5,\n              }}\n              onPress={() => onOpenfilter()}\n            >\n              <AntDesign name=\"filter\" size={15} color=\"#fff\" />\n              <Text\n                style={{\n                  fontSize: 15,\n                  fontWeight: \"500\",\n                  marginLeft: 2,\n                  color: \"#fff\",\n                }}\n              >\n                {\" \"}\n                Filter\n              </Text>\n            </TouchableOpacity>\n            {sendVal !== 0 ? (\n              <View\n                style={{\n                  marginRight: 10,\n                  flexDirection: \"row\",\n                  justifyContent: \"space-evenly\",\n                  alignItems: \"center\",\n                }}\n              >\n                <TouchableOpacity\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    backgroundColor: \"#f2f7ff\",\n                    height: 30,\n                    width: 90,\n                    padding: 3,\n                    borderRadius: 5,\n                    margin: 5,\n                    borderWidth: 2,\n                    borderColor: \"#3A48ED\",\n                  }}\n                  onPress={() => {\n                    settempGen(\"\");\n                    settempEndDate(null);\n                    settempState(\"\");\n                    setcropFinal(\"\");\n                    setsendVal(0);\n                  }}\n                >\n                  <MaterialIcons name=\"clear-all\" size={15} color=\"#3A48ED\" />\n                  <Text\n                    style={{\n                      fontSize: 15,\n                      fontWeight: \"500\",\n                      marginLeft: 2,\n                      color: \"#3A48ED\",\n                    }}\n                  >\n                    {\" \"}\n                    Clear All\n                  </Text>\n                </TouchableOpacity>\n                {cropFinal !== null ? (\n                  <TouchableOpacity\n                    style={{\n                      alignItems: \"center\",\n                      marginRight: 5,\n                      backgroundColor: \"#87EDBF\",\n                      padding: 5,\n                      height: 30,\n\n                      borderRadius: 10,\n                      justifyContent: \"space-between\",\n                      flexDirection: \"row\",\n                      borderWidth: 1,\n                      borderColor: \"#3ECF8E\",\n                    }}\n                  >\n                    <Text\n                      style={{\n                        color: \"#009150\",\n                        fontWeight: \"600\",\n                        fontSize: 15,\n                      }}\n                    >\n                      {cropFinal}\n                    </Text>\n\n                    <AntDesign\n                      name=\"close\"\n                      size={15}\n                      color=\"#fff\"\n                      style={{\n                        top: 2,\n                        backgroundColor: \"#009150\",\n                        padding: 2,\n                        marginLeft: 5,\n                        borderRadius: 15,\n                      }}\n                      onPress={() => {\n                        setcropFinal(\"\");\n                        setsendVal(0);\n                      }}\n                    />\n                  </TouchableOpacity>\n                ) : (\n                  <View style={{ backgroundColor: \"transparent\" }} />\n                )}\n                {tempGen !== null && sendVal !== 0 ? (\n                  <TouchableOpacity\n                    style={{\n                      alignItems: \"center\",\n                      marginRight: 5,\n                      backgroundColor: val ? \"#fff\" : \"#deebff\",\n                      padding: 5,\n                      height: 30,\n\n                      borderRadius: 20,\n                      justifyContent: \"space-between\",\n                      flexDirection: \"row\",\n                      borderWidth: 1,\n                      borderColor: \"#346beb\",\n                    }}\n                  >\n                    <Text style={{ color: \"#000\" }}>\n                      {tempGen\n                        ? tempGen === \"m\"\n                          ? \"Men\"\n                          : tempGen === \"f\"\n                          ? \"Women\"\n                          : \"Other\"\n                        : null}\n                    </Text>\n                    <AntDesign\n                      name=\"close\"\n                      size={15}\n                      color=\"#3A48ED\"\n                      style={{\n                        top: 2,\n                        backgroundColor: \"#A1C7FF\",\n                        padding: 2,\n                        borderRadius: 15,\n                        marginLeft: 5,\n                      }}\n                      onPress={() => {\n                        settempGen(null), setsendVal(sendVal + 1);\n                      }}\n                    />\n                  </TouchableOpacity>\n                ) : (\n                  <View style={{ backgroundColor: \"transparent\" }} />\n                )}\n                {tempState !== null && sendVal !== 0 ? (\n                  <TouchableOpacity\n                    style={{\n                      alignItems: \"center\",\n                      marginRight: 5,\n                      backgroundColor: val ? \"#fff\" : \"#deebff\",\n                      padding: 5,\n                      height: 30,\n\n                      borderRadius: 20,\n                      justifyContent: \"space-between\",\n                      flexDirection: \"row\",\n                      borderWidth: 1,\n                      borderColor: \"#346beb\",\n                    }}\n                  >\n                    <Text style={{ color: \"#000\" }}>{tempState}</Text>\n                    <AntDesign\n                      name=\"close\"\n                      size={15}\n                      color=\"#3A48ED\"\n                      style={{\n                        top: 2,\n                        backgroundColor: \"#A1C7FF\",\n                        padding: 2,\n                        borderRadius: 15,\n                        marginLeft: 5,\n                      }}\n                      onPress={() => {\n                        settempState(null), setsendVal(sendVal + 1);\n                      }}\n                    />\n                  </TouchableOpacity>\n                ) : (\n                  <View style={{ backgroundColor: \"transparent\" }} />\n                )}\n              </View>\n            ) : (\n              <View\n                style={{\n                  alignItems: \"center\",\n                  marginRight: 5,\n                  backgroundColor: \"#fff\",\n                  padding: 5,\n                  height: 30,\n                  margin: 5,\n                  width: 50,\n                  borderRadius: 10,\n                  justifyContent: \"center\",\n                  flexDirection: \"row\",\n                  borderWidth: 1,\n                  borderColor: \"#346beb\",\n                }}\n              >\n                <Text style={{ color: \"#000\" }}>All</Text>\n              </View>\n            )}\n          </View>\n          {sendVal !== 0 ? (\n            <FlatList\n              showsVerticalScrollIndicator={false}\n              data={fileredFarmers}\n              renderItem={renderItems}\n              ListEmptyComponent={() => (\n                <Text style={{ fontSize: 30 }}> Oops ! Didnt find that</Text>\n              )}\n              contentContainerStyle={{\n                flexDirection: \"row\",\n                width: \"100%\",\n                flexWrap: \"wrap\",\n                alignItems: \"flex-start\",\n                justifyContent: \"center\",\n                backgroundColor: \"#deebff\",\n                padding: winWidth > 767 ? 10 : 2,\n              }}\n              onEndReached={() => handleLoad()}\n            />\n          ) : (\n            <FlatList\n              showsVerticalScrollIndicator={false}\n              data={farmers}\n              renderItem={renderItems}\n              ListEmptyComponent={() => (\n                <Text style={{ fontSize: 30 }}> Oops ! Didnt find that</Text>\n              )}\n              contentContainerStyle={{\n                flexDirection: \"row\",\n                width: \"100%\",\n                flexWrap: \"wrap\",\n                alignItems: \"flex-start\",\n                justifyContent: \"center\",\n                backgroundColor: \"#deebff\",\n                padding: winWidth > 767 ? 10 : 2,\n              }}\n              onEndReached={() => handleLoad()}\n            />\n          )}\n          <View style={{ width: \"100%\", height: 40 }} />\n          <Modalize\n            ref={modalizeFilterRef}\n            modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.88}\n            modalStyle={\n              winWidth > 767 ? { width: 400, alignSelf: \"center\" } : null\n            }\n            threshold={100}\n            closeOnOverlayTap={true}\n            mod\n          >\n            <View\n              style={{\n                width: \"100%\",\n                flexDirection: \"row\",\n                alignItems: \"flex-start\",\n                justifyContent: \"space-between\",\n                padding: 5,\n                top: 5,\n              }}\n            >\n              {/* <TouchableOpacity onPress={() => onCloseFilter()}>\n                  Close Filter\n                </TouchableOpacity> */}\n              <Text style={{ fontSize: 16, marginLeft: 7, fontWeight: \"600\" }}>\n                Filter Results\n              </Text>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n\n                  width: \"50%\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <TouchableOpacity\n                  style={{\n                    width: 60,\n                    height: 30,\n                    backgroundColor: \"#fff\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n\n                    borderRadius: 10,\n                    borderColor: \"#3A48ED\",\n                    borderWidth: 2,\n                  }}\n                  onPress={() => {\n                    settempGen(\"\");\n                    settempState(\"\");\n                    settempEndDate(null);\n                    setsendVal(0);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 16,\n                      color: \"#3A48ED\",\n                    }}\n                  >\n                    Reset\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={{\n                    width: 60,\n                    height: 30,\n                    backgroundColor: \"#3ECF8E\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n\n                    borderRadius: 10,\n                    borderColor: \"#3ECF8E\",\n                    borderWidth: 2,\n                  }}\n                  onPress={() => {\n                    tempValues();\n                    setsendVal(sendVal + 1);\n                    onCloseFilter();\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 16,\n                      color: \"#fff\",\n                    }}\n                  >\n                    Apply\n                  </Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  onPress={() => {\n                    onCloseFilter();\n                  }}\n                >\n                  <View\n                    style={{\n                      width: 25,\n                      height: 25,\n                      borderWidth: 2,\n                      borderColor: \"#A1C7FF\",\n                      alignItems: \"center\",\n                      alignSelf: \"flex-end\",\n                      justifyContent: \"center\",\n                      flexDirection: \"row\",\n                      backgroundColor: \"#A1C7FF\",\n                      borderRadius: 25,\n                    }}\n                  >\n                    <AntDesign name=\"close\" size={20} color=\"#3A48ED\" />\n                  </View>\n                </TouchableOpacity>\n              </View>\n            </View>\n            <View\n              style={{\n                width: \"95%\",\n                alignSelf: \"center\",\n                height: 1,\n                backgroundColor: \"#C0C0C0\",\n                marginTop: 10,\n                alignItems: \"center\",\n              }}\n            ></View>\n            <Text\n              style={{\n                color: \"#6F6F6F\",\n                fontSize: 15,\n                marginTop: 3,\n                marginLeft: 7,\n                padding: 5,\n              }}\n            >\n              By Gender\n            </Text>\n            <View\n              style={{\n                width: \"32%\",\n                marginTop: 10,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                padding: 5,\n                marginLeft: 7,\n                alignSelf: \"flex-start\",\n              }}\n            >\n              {genderData.map((item) => {\n                return (\n                  <View key={item.key} style={styles.buttonContainer}>\n                    <TouchableOpacity\n                      style={styles.circle}\n                      onPress={() => {\n                        settempGen(item.key);\n                      }}\n                    >\n                      {tempGen === item.key && (\n                        <View style={styles.checkedCircle} />\n                      )}\n                    </TouchableOpacity>\n                    <Text style={{ fontSize: 16, marginLeft: 5 }}>\n                      {item.text}\n                    </Text>\n                  </View>\n                );\n              })}\n            </View>\n            <View\n              style={{\n                width: \"100%\",\n                marginTop: 10,\n                flexDirection: \"column\",\n                alignItems: \"flex-start\",\n                justifyContent: \"space-evenly\",\n                padding: 5,\n                alignSelf: \"flex-start\",\n              }}\n            >\n              <View\n                style={{\n                  width: \"95%\",\n                  alignSelf: \"center\",\n                  height: 1,\n                  backgroundColor: \"#C0C0C0\",\n                  marginTop: 10,\n                  alignItems: \"center\",\n                }}\n              ></View>\n              <Text\n                style={{\n                  color: \"#6F6F6F\",\n                  fontSize: 15,\n                  marginTop: 10,\n                  marginLeft: 0,\n                  marginBottom: 5,\n                  padding: 5,\n                }}\n              >\n                By States\n              </Text>\n\n              <TouchableOpacity\n                onPress={() => setaddrToggle(!addrToggle)}\n                style={{\n                  flexDirection: \"row\",\n                  backgroundColor: \"#d6d9ff\",\n                  borderWidth: 2,\n                  borderColor: \"#7b42ff\",\n                  borderRadius: 5,\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  padding: 5,\n                  minWidth: \"30%\",\n\n                  marginLeft: 7,\n                }}\n              >\n                <Text style={{ fontSize: 15 }}>\n                  {tempAddr ? tempAddr : \"All States\"}\n                </Text>\n                <AntDesign name=\"down\" size={12} />\n              </TouchableOpacity>\n              {addrToggle ? (\n                <View style={{ marginTop: 10 }}>\n                  {listRegion.map((item) => {\n                    return (\n                      <View key={item.state} style={styles.buttonnewContainer}>\n                        <TouchableOpacity\n                          style={styles.circle}\n                          onPress={() => {\n                            settempState(item.state);\n                            // settempAddr(item.name);\n                            // // setaddr(item.name);\n                            // setaddrToggle(false);\n                          }}\n                        >\n                          {tempState === item.state && (\n                            <View style={styles.checkedCircle} />\n                          )}\n                        </TouchableOpacity>\n                        <Text style={{ fontSize: 16, marginLeft: 5 }}>\n                          {item.state}\n                        </Text>\n                      </View>\n                    );\n                  })}\n                </View>\n              ) : null}\n            </View>\n            <View\n              style={{\n                width: \"100%\",\n                marginTop: 10,\n                flexDirection: \"column\",\n                alignItems: \"flex-start\",\n                justifyContent: \"space-evenly\",\n                padding: 5,\n                alignSelf: \"flex-start\",\n              }}\n            >\n              <View\n                style={{\n                  width: \"95%\",\n                  alignSelf: \"center\",\n                  height: 1,\n                  backgroundColor: \"#C0C0C0\",\n                  marginTop: 10,\n                  alignItems: \"center\",\n                }}\n              ></View>\n              <View>\n                <Text\n                  style={{\n                    color: \"#6F6F6F\",\n                    fontSize: 15,\n                    marginTop: 10,\n                    marginLeft: 0,\n                    marginBottom: 5,\n                    zIndex: 1000,\n                    padding: 5,\n                  }}\n                >\n                  By Harvest Date\n                </Text>\n                <View\n                  style={{\n                    flex: 1,\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    width: \"100%\",\n                    height: 150,\n                    padding: 5,\n                  }}\n                >\n                  <View style={{ marginLeft: 20 }}>\n                    <Text style={{ marginBottom: 10 }}>To</Text>\n                    <DatePicker\n                      dateFormat=\"dd/MM/yyyy\"\n                      popperPlacement=\"bottom-left\"\n                      selected={tempEndDate}\n                      onChange={(date) => {\n                        settempEndDate(date);\n                        // date <= tempStartDate\n                        //   ? alert(\n                        //       \"End Date cannot be less than or equal to Start Date\"\n                        //     )\n                        //   : settempEndDate(date);\n                        // settempDater(true);\n                      }}\n                      customInput={\n                        <TextInput\n                          style={{\n                            backgroundColor: \"#d6d9ff\",\n                            borderRadius: 5,\n                            borderColor: \"#7b42ff\",\n                            height: 35,\n                            borderWidth: 2,\n                            padding: 5,\n                            fontSize: 15,\n                            width: 100,\n                          }}\n                        />\n                      }\n                    />\n                  </View>\n                </View>\n              </View>\n              <View\n                style={{\n                  width: \"95%\",\n                  alignSelf: \"center\",\n                  height: 1,\n\n                  marginTop: 100,\n                  alignItems: \"center\",\n                }}\n              ></View>\n            </View>\n            <View\n              style={{\n                width: \"100%\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-evenly\",\n                alignSelf: \"flex-end\",\n\n                marginTop: \"30%\",\n              }}\n            ></View>\n          </Modalize>\n          <Modalize\n            ref={modalizeRef}\n            modalHeight={winWidth > 767 ? winHeight * 0.86 : winHeight * 0.88}\n            modalStyle={\n              winWidth > 767 ? { width: 400, alignSelf: \"center\" } : null\n            }\n            threshold={100}\n            closeOnOverlayTap={true}\n            mod\n          >\n            <View>\n              <View\n                style={{\n                  backgroundColor: \"#3A48ED\",\n                  width: \"100%\",\n                  height: 170,\n                  borderWidth: 1,\n                  top: -2,\n                  borderRadius: 15,\n                  borderColor: \"#3A48ED\",\n                  shadowColor: \"#000\",\n                  shadowOffset: {\n                    width: 0,\n                    height: 4,\n                  },\n                  shadowOpacity: 0.32,\n                  shadowRadius: 5.46,\n\n                  elevation: 9,\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => {\n                    CloseProfile(), setshowList([]);\n                  }}\n                  style={{\n                    alignItems: \"center\",\n                    marginTop: 5,\n                    marginRight: 2,\n                    padding: 5,\n                    justifyContent: \"center\",\n                    alignSelf: \"flex-end\",\n                    backgroundColor: \"rgba(0,0,0,0.2)\",\n                    borderRadius: 10,\n                    height: 35,\n                    width: 70,\n                  }}\n                >\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 15,\n                        fontWeight: 500,\n                        color: \"#fff\",\n                        marginRight: 5,\n                      }}\n                    >\n                      Close\n                    </Text>\n                    <SimpleLineIcons\n                      name=\"close\"\n                      size={15}\n                      color=\"#fff\"\n                      onPress={() => CloseProfile()}\n                    />\n                  </View>\n                </TouchableOpacity>\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    padding: 2,\n                    top: -10,\n                  }}\n                >\n                  <View style={{ width: \"40%\", height: \"100%\", padding: 5 }}>\n                    {focused.map((i) => {\n                      return (\n                        <Image\n                          source={{ uri: i.farmerImage }}\n                          style={{\n                            height: 120,\n                            width: 120,\n                            borderRadius: 120,\n                            borderColor: \"#fff\",\n                            borderWidth: 2,\n                          }}\n                        />\n                      );\n                    })}\n                  </View>\n                  <View\n                    style={{\n                      flexDirection: \"column\",\n                      alignItems: \"center\",\n                      justifyContent: \"space-evenly\",\n                      width: \"60%\",\n                      height: \"100%\",\n                    }}\n                  >\n                    <View\n                      style={{\n                        flexDirection: \"column\",\n                        alignItems: \"flex-start\",\n                        width: \"100%\",\n                        height: \"100%\",\n                        justifyContent: \"space-evenly\",\n                      }}\n                    >\n                      <View\n                        style={{ flexDirection: \"row\", alignItems: \"center\" }}\n                      >\n                        <Feather name=\"user\" size={20} color=\"#fff\" />\n\n                        {focused.map((i) => {\n                          return (\n                            <Text\n                              style={{\n                                fontSize: 20,\n                                color: \"#fff\",\n                                fontWeight: \"700\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              {i.farmerName}\n                            </Text>\n                          );\n                        })}\n                      </View>\n                      <View\n                        style={{ flexDirection: \"row\", alignItems: \"center\" }}\n                      >\n                        <Feather name=\"map-pin\" size={20} color=\"#fff\" />\n                        {focused.map((i) => {\n                          return (\n                            <Text\n                              style={{\n                                fontSize: 20,\n                                color: \"#fff\",\n                                fontWeight: \"700\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              {i.state}\n                            </Text>\n                          );\n                        })}\n                      </View>\n                      <View\n                        style={{ flexDirection: \"row\", alignItems: \"center\" }}\n                      >\n                        <Feather name=\"phone\" size={20} color=\"#fff\" />\n                        {focused.map((i) => {\n                          return (\n                            <Text\n                              style={{\n                                fontSize: 20,\n                                color: \"#fff\",\n                                fontWeight: \"700\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              {hideNumber(i.phone)}\n                            </Text>\n                          );\n                        })}\n                      </View>\n                    </View>\n                  </View>\n                </View>\n                <View style={{}}>\n                  <View\n                    style={{\n                      width: \"100%\",\n                      alignItems: \"center\",\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                      marginTop: 20,\n                      padding: 5,\n                      marginBottom: 10,\n                    }}\n                  >\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <Entypo name=\"leaf\" size={15} color=\"#9F99FF\" />\n                      <Text\n                        style={{\n                          fontSize: 15,\n                          color: \"#6F6F6F\",\n                          fontWeight: \"600\",\n                          marginLeft: 5,\n                        }}\n                      >\n                        Crop Details\n                      </Text>\n                    </View>\n\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-end\",\n                      }}\n                    >\n                      <SimpleLineIcons\n                        name=\"calendar\"\n                        size={15}\n                        color=\"#9F99FF\"\n                      />\n                      <Text\n                        style={{\n                          fontSize: 15,\n                          color: \"#6F6F6F\",\n                          fontWeight: \"600\",\n                          marginRight: 5,\n                          marginLeft: 5,\n                        }}\n                      >\n                        Harvest Dates\n                      </Text>\n                    </View>\n                  </View>\n                  <View\n                    style={{\n                      width: \"95%\",\n                      alignSelf: \"center\",\n                      height: 1,\n                      backgroundColor: \"#C0C0C0\",\n                    }}\n                  ></View>\n                  <View\n                    style={{\n                      height: winHeight * 0.4,\n                      marginTop: 10,\n                      marginBottom: 10,\n                    }}\n                  >\n                    <FlatList\n                      showsVerticalScrollIndicator={false}\n                      data={showList}\n                      renderItem={renderCrops}\n                      ListEmptyComponent={() => (\n                        <View style={styles.container}>\n                          <Text style={{ fontSize: 30 }}>\n                            {\" \"}\n                            Loading your crops..\n                          </Text>\n                        </View>\n                      )}\n                      contentContainerStyle={{\n                        flex: 1,\n                      }}\n                    />\n                  </View>\n                </View>\n                <View\n                  style={{\n                    width: \"100%\",\n                    flexDirection: \"column\",\n                    top: -29,\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 15,\n                      color: \"#808080\",\n                      marginLeft: 5,\n                    }}\n                  >\n                    Coming soon\n                  </Text>\n                  <View\n                    style={{\n                      width: \"100%\",\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      justifyContent: \"space-evenly\",\n                      top: 5,\n                    }}\n                  >\n                    <TouchableOpacity\n                      style={{\n                        width: winWidth < 400 ? 70 : 90,\n                        height: winWidth < 400 ? 30 : 40,\n                        backgroundColor: \"#A9A9A9\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        flexDirection: \"row\",\n                        borderRadius: 10,\n                      }}\n                      onPress={() =>\n                        alert(\n                          \"Click to chat feature helps you connect directly to this farmer in one click. Feature Coming soon !\"\n                        )\n                      }\n                    >\n                      <FontAwesome5 name=\"whatsapp\" size={20} color=\"#fff\" />\n                      <Text\n                        style={{\n                          fontSize: winWidth < 400 ? 16 : 20,\n                          color: \"#fff\",\n                          marginLeft: 5,\n                        }}\n                      >\n                        Chat\n                      </Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      style={{\n                        width: winWidth < 400 ? 70 : 90,\n                        height: winWidth < 400 ? 30 : 40,\n                        backgroundColor: \"#A9A9A9\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        flexDirection: \"row\",\n                        borderRadius: 10,\n                      }}\n                      onPress={() => alert(\"Feature Coming soon !\")}\n                    >\n                      <Text\n                        style={{\n                          fontSize: winWidth < 400 ? 16 : 20,\n                          color: \"#fff\",\n                          marginLeft: 5,\n                        }}\n                      >\n                        Buy\n                      </Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      style={{\n                        width: winWidth < 400 ? 90 : 120,\n                        height: winWidth < 400 ? 35 : 40,\n                        backgroundColor: \"#fff\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        flexDirection: \"row\",\n                        borderRadius: 10,\n                        borderColor: \"#A9A9A9\",\n                        borderWidth: 2,\n                        padding: 5,\n                      }}\n                      onPress={() =>\n                        alert(\n                          \"Support the farmer by any kind. Feature Coming Soon !\"\n                        )\n                      }\n                    >\n                      <FontAwesome\n                        name=\"handshake-o\"\n                        size={15}\n                        color=\"#A9A9A9\"\n                      />\n                      <Text\n                        style={{\n                          fontSize: winWidth < 400 ? 16 : 20,\n                          color: \"#A9A9A9\",\n                          marginLeft: 5,\n                        }}\n                      >\n                        Support\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </Modalize>\n          {blur ? (\n            <View\n              style={{\n                width: \"100%\",\n                height: \"100%\",\n                backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n                position: \"absolute\",\n              }}\n            >\n              <BlurView\n                tint=\"dark\"\n                intensity={40}\n                style={[StyleSheet.absoluteFill, styles.nonBlurredContent]}\n              >\n                <View\n                  style={{\n                    backgroundColor: \"#fff\",\n                    height: 55,\n                    width: winWidth > 767 ? \"50%\" : \"97%\",\n                    alignSelf: \"center\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    borderRadius: 8,\n                    padding: 20,\n                    shadowColor: \"#98A0FF\",\n                    shadowOffset: {\n                      width: 0,\n                      height: 4,\n                    },\n                    shadowOpacity: 0.32,\n                    shadowRadius: 5.46,\n                    marginTop: 10,\n                    elevation: 9,\n                  }}\n                >\n                  <TextInput\n                    style={\n                      Platform.OS === \"web\" && {\n                        outlineColor: \"#fff\",\n                        height: 40,\n                        backgroundColor: \"white\",\n                        width: \"95%\",\n                        padding: 5,\n                        fontSize: 20,\n                      }\n                    }\n                    placeholder=\"Search for Crops\"\n                    autoFocus={true}\n                    editable={true}\n                    onChangeText={(text) => {\n                      console.log(text);\n                      setshow(text);\n                    }}\n                  />\n                  <TouchableOpacity onPress={() => setblur(false)}>\n                    <View\n                      style={{\n                        width: 25,\n                        height: 25,\n                        borderWidth: 2,\n                        borderColor: \"#A1C7FF\",\n                        alignItems: \"center\",\n                        alignSelf: \"flex-end\",\n                        justifyContent: \"center\",\n                        right: -10,\n                        backgroundColor: \"#A1C7FF\",\n                        borderRadius: 25,\n                      }}\n                    >\n                      <AntDesign name=\"close\" size={20} color=\"#3A48ED\" />\n                    </View>\n                  </TouchableOpacity>\n                </View>\n                <View\n                  style={{\n                    width: winWidth > 767 ? \"50%\" : \"97%\",\n                    backgroundColor: \"#fff\",\n                    borderRadius: 10,\n                    borderWidth: 1,\n                    margin: 10,\n                    borderColor: \"#fff\",\n                    alignSelf: \"center\",\n                    alignItems: \"flex-start\",\n                  }}\n                >\n                  <View style={{ height: 40, padding: 10 }}>\n                    <Text style={{ fontSize: 15 }}>\n                      {show !== \"\" ? \"Matching Crops\" : \"Suggested Crops\"}\n                    </Text>\n                  </View>\n\n                  {show !== \"\" ? (\n                    <FlatList\n                      showsVerticalScrollIndicator={false}\n                      data={filteredBlur}\n                      renderItem={renderMatch}\n                      ListEmptyComponent={() => (\n                        <View style={styles.container}>\n                          <Text style={{ fontSize: 30 }}>\n                            {\" \"}\n                            Oops ! Didnt find that\n                          </Text>\n                        </View>\n                      )}\n                      contentContainerStyle={{\n                        width: \"100%\",\n                      }}\n                    />\n                  ) : (\n                    <FlatList\n                      showsVerticalScrollIndicator={false}\n                      data={suggestions}\n                      renderItem={renderMatch}\n                      ListEmptyComponent={() => (\n                        <View style={styles.container}>\n                          <Text style={{ fontSize: 30 }}>\n                            {\" \"}\n                            Oops ! Didnt find that\n                          </Text>\n                        </View>\n                      )}\n                      contentContainerStyle={{\n                        width: \"100%\",\n                      }}\n                    />\n                  )}\n                </View>\n                <TouchableOpacity\n                  style={{ flex: 1, backgroundColor: \"transparent\" }}\n                  onPress={() => setblur(false)}\n                ></TouchableOpacity>\n              </BlurView>\n            </View>\n          ) : null}\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default Feed;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#deebff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: winHeight,\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginRight: 5,\n  },\n  buttonnewContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginRight: 5,\n    padding: 5,\n  },\n\n  circle: {\n    height: 25,\n    width: 25,\n    borderRadius: 25,\n    borderWidth: 1,\n    borderColor: \"#3A48ED\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  checkedCircle: {\n    width: 25,\n    height: 25,\n    borderRadius: 25,\n    backgroundColor: \"#3A48ED\",\n  },\n});\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { winWidth, winHeight } from \"./src/utils/window\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Home from \"./src/screens/HomeScreen\";\nimport Search from \"./src/screens/SearchScreen\";\nimport Welcome from \"./src/screens/SplashScreen\";\nimport Header from \"../claro_krisearch/src/components/header\";\nimport Profile from \"./src/screens/ProfileScreen\";\nimport { Feather } from \"@expo/vector-icons\";\nimport Landing from \"./src/screens/LandingScreen\";\nimport Login from \"./src/screens/Login\";\nimport { auth } from \"firebase\";\nimport SignUp from \"./src/screens/SignUp\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport Test from \"./src/screens/testScreen\";\nimport Feed from \"./src/screens/Feed\";\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\nconst Drawer = createDrawerNavigator();\n\nfunction MyTabBar({ state, descriptors, navigation }) {\n  const focusedOptions = descriptors[state.routes[state.index].key].options;\n\n  if (focusedOptions.tabBarVisible === false) {\n    return null;\n  }\n\n  return (\n    <KeyboardAvoidingView>\n      <View style={{ flexDirection: \"row\" }}>\n        {state.routes.map((route, index) => {\n          const { options } = descriptors[route.key];\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const isFocused = state.index === index;\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: \"tabPress\",\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!isFocused && !event.defaultPrevented) {\n              navigation.navigate(route.name);\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: \"tabLongPress\",\n              target: route.key,\n            });\n          };\n\n          // if (index === 1) {\n          //   return (\n          //     <TouchableOpacity\n          //       accessibilityRole=\"button\"\n          //       accessibilityState={isFocused ? { selected: true } : {}}\n          //       accessibilityLabel={options.tabBarAccessibilityLabel}\n          //       testID={options.tabBarTestID}\n          //       onPress={onPress}\n          //       onLongPress={onLongPress}\n          //       style={{\n          //         flex: 1,\n          //         justifyContent: \"center\",\n          //         alignItems: \"center\",\n          //         height: 65,\n          //         width: 65,\n          //         backgroundColor: isFocused ? \"#346beb\" : \"#fff\",\n          //         position: \"absolute\",\n          //         left: winWidth / 2 - 30,\n          //         bottom: 15,\n          //         margin: 5,\n          //         borderRadius: 35,\n          //         borderWidth: 2,\n          //         borderColor: isFocused ? \"#fff\" : \"#deebff\",\n          //       }}\n          //     >\n          //       {/* <Text style={{ color: isFocused ? \"#673ab7\" : \"#222\" }}>\n          //       {label}\n          //     </Text> */}\n          //       <Feather\n          //         name=\"search\"\n          //         size={30}\n          //         color={isFocused ? \"#fff\" : \"#346beb\"}\n          //       />\n          //     </TouchableOpacity>\n          //   );\n          // }\n\n          return (\n            <TouchableOpacity\n              accessibilityRole=\"button\"\n              accessibilityState={isFocused ? { selected: true } : {}}\n              accessibilityLabel={options.tabBarAccessibilityLabel}\n              testID={options.tabBarTestID}\n              onPress={onPress}\n              onLongPress={onLongPress}\n              style={{\n                flex: 1,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: 45,\n                padding: 5,\n                backgroundColor: \"#fff\",\n              }}\n            >\n              {/* <Text style={{ color: isFocused ? \"#673ab7\" : \"#222\" }}>\n              {label}\n            </Text> */}\n\n              <View>\n                {index == 0 ? (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      borderWidth: 2,\n                      backgroundColor: isFocused ? \"#deebff\" : \"transparent\",\n                      borderColor: isFocused ? \"#deebff\" : \"transparent\",\n                      width: \"110%\",\n                      borderRadius: 20,\n                      padding: 5,\n                    }}\n                  >\n                    <Feather\n                      name=\"home\"\n                      size={20}\n                      color={isFocused ? \"#346beb\" : \"#222\"}\n                    />\n                    {isFocused ? (\n                      <Text\n                        style={{\n                          fontSize: 16,\n                          marginLeft: 15,\n                          color: \"#346beb\",\n                        }}\n                      >\n                        {label}\n                      </Text>\n                    ) : null}\n                  </View>\n                ) : (\n                  <View>\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        borderWidth: 2,\n                        backgroundColor: isFocused ? \"#deebff\" : \"transparent\",\n                        borderColor: isFocused ? \"#deebff\" : \"transparent\",\n                        width: \"110%\",\n                        borderRadius: 20,\n                        padding: 5,\n                      }}\n                    >\n                      <Feather\n                        name=\"user\"\n                        size={20}\n                        color={isFocused ? \"#346beb\" : \"#222\"}\n                      />\n                      {isFocused ? (\n                        <Text\n                          style={{\n                            fontSize: 14,\n                            marginLeft: 15,\n                            color: \"#346beb\",\n                          }}\n                        >\n                          {label}\n                        </Text>\n                      ) : null}\n                    </View>\n                  </View>\n                )}\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n    </KeyboardAvoidingView>\n  );\n}\n\nfunction Homely() {\n  return (\n    <Tab.Navigator tabBar={MyTabBar}>\n      <Tab.Screen name=\"Home\" component={Home} />\n      <Tab.Screen name=\"Profile\" component={Profile} />\n    </Tab.Navigator>\n  );\n}\n\nfunction MyDrawer() {\n  return (\n    <Drawer.Navigator>\n      <Drawer.Screen name=\"Home\" component={Home} />\n      <Drawer.Screen name=\"Profile\" component={Profile} />\n    </Drawer.Navigator>\n  );\n}\n\nconst App = () => {\n  const [user, setuser] = useState(null);\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        screenOptions={{\n          headerStyle: {\n            backgroundColor: \"#346beb\",\n          },\n          headerTintColor: \"#fff\",\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n          headerShown: false,\n        }}\n      >\n        {/* <Stack.Screen\n          name=\"Welcome\"\n          component={Welcome}\n          options={{ headerShown: false }}\n        /> */}\n\n        <Stack.Screen\n          name=\"Landing\"\n          component={Landing}\n          options={{\n            title: \"Krisearch\",\n          }}\n        />\n        <Stack.Screen\n          name=\"Login\"\n          component={Login}\n          options={{\n            title: \"Krisearch\",\n          }}\n        />\n        <Stack.Screen\n          name=\"Test\"\n          component={Test}\n          options={{\n            title: \"Krisearch\",\n          }}\n        />\n        <Stack.Screen\n          name=\"SignUp\"\n          component={SignUp}\n          options={{\n            title: \"SignUp\",\n          }}\n        />\n\n        <Stack.Screen\n          name=\"Feed\"\n          component={Feed}\n          options={{\n            title: \"Feed\",\n          }}\n        />\n        {/* {winWidth > 768 ? (\n          <Drawer.Screen name=\"MyDrawer\" component={MyDrawer} />\n        ) : (\n          <Stack.Screen name=\"Homely\" component={Homely} />\n        )} */}\n        <Stack.Screen name=\"Homely\" component={Homely} />\n        {/* <Stack.Screen\n          name=\"Home\"\n          component={Home}\n          options={{\n            title: \"Krisearch\",\n          }}\n        /> */}\n        {/* <Stack.Screen name=\"Search\" component={Search} /> */}\n\n        {/* <Stack.Screen\n          name=\"Profile\"\n          component={Profile}\n          options={{\n            title: \"Profile\",\n          }}\n        /> */}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/newicon4.57719745.png\";","module.exports = __webpack_public_path__ + \"static/media/i1.8211ac32.png\";","module.exports = __webpack_public_path__ + \"static/media/i3.a1e5f140.png\";","module.exports = __webpack_public_path__ + \"static/media/i2.65396ed0.png\";","module.exports = __webpack_public_path__ + \"static/media/newIcon6.3b0c0b69.png\";"],"sourceRoot":""}